{"version":3,"sources":["helpers.js","auth.js","breakpoint.js","components/Layout/LayoutStyles.js","fetch.js","localization/en.js","localization/de.js","localization/strings.js","components/Layout/Layout.jsx","components/Common/CommonStyles.js","components/Common/Common.jsx","components/Ranking/RankingStyles.js","components/Ranking/Ranking.jsx","components/LandingPage/LandingPageStyles.js","components/LandingPage/LandingPage.jsx","components/ActiveMatches/ActiveMatchesStyles.js","components/ActiveMatches/ActiveMatches.jsx","components/PlayerProfile/PlayerProfileStyles.js","components/PlayerProfile/PlayerProfile.jsx","components/Login/Login.jsx","components/CreateMatches/CreateMatchesStyles.js","components/CreateMatches/CreateMatches.jsx","components/FooterPages/PrivacyPolicy.jsx","components/FooterPages/LegalNotice.jsx","components/PlayerEdit/PlayerEditStyles.js","components/PlayerEdit/PlayerEdit.jsx","components/PlayerEdit/AddPlayer.jsx","App.jsx","index.js"],"names":["getImagePath","name","KEY","getToken","localStorage","getItem","isLoggedIn","getIdentity","decode","identity","breakpoints","xs","sm","md","lg","xl","breakpoint","createBreakpoint","createMap","API_URL","Nav","styled","nav","LinksWrapper","div","Link","RouterLink","props","isactive","HeaderBrandLogo","img","Main","main","ContentWrapper","Footer","footer","NavbarExtension","LanguageSelect","select","strings","createMatchesLink","addPlayerLink","rankingLink","matchesLink","legalNoticeLink","privacyPolicyLink","homepage","aboutHeader","aboutText1","aboutTextChange","aboutChange1","aboutChange2","aboutChange3","rulesHeader","rule1","rule2","rule3","rule4","rule5","rule6","rule7","rulesInfoText","participateHeader","participateText1","participateText2","participateText3","participateText4","prizesHeader","prizesText","login","password","username","deleteMatchesButton","deleteMatchesConfirm1","deleteMatchesConfirm2","deleteMatchesConfirm3","noMatchesFound","loadingMessage","errorMessage","notFound","startMatchesConfirm","alreadyActiveMatchesError","searchPlayerPlaceholder","addPlayerHeader","addPlayerChatlogHeader","parseButton","startMatchesButton","keywordPlaceholder","privacyPolicyHeader","privacyPolicyText","addButton","saveButton","playerEdit","playerProfile","notLatestMatchError","matchesHeader","opponent","result","date","edit","noMatchesPlayed","rank","winsLossesDraws","noPlayersFound","players","points","win","loss","draw","wins","losses","draws","level","guild","server","class","levelLand","levelSea","aboutText","rulesText","participateText","LocalizedStrings","en","StringsEN","de","StringsDE","Layout","useState","loggedIn","setLoggedIn","selectedLanguage","setSelectedLanguage","setLanguage","window","addEventListener","to","onClick","removeItem","dispatchEvent","Event","src","children","onChange","event","newLanguage","target","value","setItem","location","reload","getHeaders","token","httpHeaders","Headers","getPlayer","url","fetch","method","headers","ClassIcon","width","marginRight","CenteredSpan","span","H2","h2","Flex","flexFlow","justifyContent","alignItems","Button","button","margin","padding","fontSize","backgroundColorOnHover","borderColorOnHover","Text","currentServer","FetchStateMessage","loading","error","TableWrapper","Table","table","TableHeader","th","align","TableData","td","TableRow","tr","even","Ranking","document","title","match","params","setPlayers","setLoading","hasError","setHasError","useEffect","res","getRanking","then","fetchResponse","json","ok","console","msg","length","sort","a","b","map","player","index","rankColor","y","InstallTrigger","key","height","d","fill","textAnchor","alignmentBaseline","x","level_land","level_sea","Banner","Grid","GridItem","rowS","startS","endS","row","start","end","LandingPage","startDate","Date","formatString","toLocaleDateString","Line","hr","VersusWrapper","VersusText","PlayerSub","EloGain","Player","p2_points","p1_points","expected_score_p1","Math","pow","floor","calculateEloGain","ActiveMatches","matches","setMatches","getActiveMatches","setWinner","matchId","winner","body","JSON","stringify","setActiveMatchWinner","filter","m","id","alert","broderColorOnHover","confirm","deleteActiveMatches","Fragment","player_1","player_2","PlayerInfoColumn","PlayerInfoName","PlayerInfoTable","MatchHistoryColumn","MatchHistoryTable","ResultSpan","color","PlayerProfile","setPlayer","editId","setEditId","selectedWinner","setSelectedWinner","onWinnerChange","newWinner","parseInt","updateMatchWinner","user","playerKey","pointsChange","points_change","toString","pointsOperator","log","matchDate","toLocaleString","playerMatchIds","forEach","push","latestMatchId","max","opponentMatchIds","enableMatchEdit","Login","setUsername","setPassword","onSubmit","preventDefault","access_token","history","e","placeholder","type","SearchPlayerColumn","AddedPlayerColumn","ChatlogPlayerColumn","ChatlogWrapper","AddedPlayerList","SearchResults","PlayerWrapper","SearchInput","input","KeywordInput","SearchInputWrapper","ChatlogTextArea","textarea","CreateMatches","searchString","setSearchString","searchResults","setSearchResults","addedPlayers","setAddedPlayers","keyword","setKeyword","chatlog","setChatlog","getPlayers","addPlayer","includes","matchingPlayers","p","toLowerCase","onKeyUp","keyCode","regex","RegExp","playerObjects","split","line","trimRight","playerName","playerObj","names","removePlayer","ids","playerIds","createMatches","status","PrivacyPolicy","LegalNotice","InputGroup","TextInput","Select","PlayerEdit","currentPlayerName","setLevelLand","setLevelSea","characterClass","setCharacterClass","newPlayer","character_class","updatePlayer","disabled","PlayerAdd","setName","setGuild","setServer","GlobalStyle","createGlobalStyle","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"kOASA,SAASA,EAAaC,GAIlB,MAAM,kBAAN,OAAyBA,G,qBCXvBC,EAAM,eAENC,EAAW,WACf,OAAOC,aAAaC,QAAQH,IAAQ,MAGhCI,EAAa,WACjB,QAAIH,KAqBAI,EAAc,WAClB,OAJOC,IAAOL,KAIWM,U,QC7BrBC,EAAc,CAClBC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,MAGAC,EAAaC,YAAiBP,GAErBM,GADHE,YAAUR,GACPM,G,gqDCRf,ICFIG,EDEEC,EAAMC,IAAOC,IAAV,KAQHC,EAAeF,IAAOG,IAAV,KAMZC,EAAOJ,YAAOK,IAAPL,CAAH,IAENL,EAAW,KAAXA,CAFM,MAKC,SAAAW,GAAK,OAAIA,EAAMC,SAAW,QAAU,WAUzCC,EAAkBR,IAAOS,IAAV,KAKfC,EAAOV,IAAOW,KAAV,KAEJC,EAAiBZ,IAAOG,IAAV,IAEhBR,EAAW,KAAXA,CAFgB,KAKhBA,EAAW,KAAXA,CALgB,MAWdkB,EAASb,IAAOc,OAAV,KAKNC,EAAkBf,IAAOG,IAAV,KASfa,EAAiBhB,IAAOiB,OAAV,K,QEsCLC,EAvGC,CAEdC,kBAAmB,iBACnBC,cAAe,aACfC,YAAa,UACbC,YAAa,UACbC,gBAAiB,eACjBC,kBAAmB,iBAGnBC,SAAU,WACVC,YAAa,QACbC,WAAY,2SACZC,gBAAiB,2DACjBC,aAAc,4GACdC,aAAc,sEACdC,aAAc,yGACdC,YAAa,QACbC,MAAO,+EACPC,MAAO,2CACPC,MAAO,sIACPC,MAAO,4EACPC,MAAO,iDACPC,MAAO,wDACPC,MAAO,gDACPC,cAAe,2FACfC,kBAAmB,qBACnBC,iBAAkB,6IAClBC,iBAAkB,2MAClBC,iBAAkB,4LAClBC,iBAAkB,gFAClBC,aAAc,SACdC,WAAY,GAGZC,MAAO,QACPC,SAAU,WACVC,SAAU,WAGVC,oBAAqB,qBACrBC,sBAAuB,0BACvBC,sBAAuB,gCACvBC,sBAAuB,8EACvBC,eAAgB,0CAGhBC,eAAgB,iDAChBC,aAAc,+EAGdC,SAAU,qBACVC,oBAAqB,iBACrBC,0BAA2B,yDAC3BC,wBAAyB,gBACzBC,gBAAiB,aACjBC,uBAAwB,uBACxBC,YAAa,QACbC,mBAAoB,gBACpBC,mBAAoB,UAGpBC,oBAAqB,iBACrBC,kBAAmB,0EAGnBC,UAAW,MACXC,WAAY,OACZC,WAAY,cACZC,cAAe,2BAGfC,oBAAqB,0DACrBC,cAAe,UACfC,SAAU,WACVC,OAAQ,SACRC,KAAM,OACNC,KAAM,OACNC,gBAAiB,kDAGjBC,KAAM,OACNC,gBAAiB,YACjBC,eAAgB,0CAGhBC,QAAS,UACTC,OAAQ,SACRC,IAAK,MACLC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,OAAQ,SACRC,MAAO,QACPC,MAAO,QACP/G,KAAM,OACNgH,MAAO,QACPC,OAAQ,SACRC,MAAO,QACPC,UAAW,aACXC,SAAU,aCXG9E,EAzFC,CAEdC,kBAAmB,mBACnBC,cAAe,wBACfC,YAAa,YACbC,YAAa,SACbC,gBAAiB,YACjBC,kBAAmB,cAGnBC,SAAU,aACVC,YAAa,UACbuE,UAAW,GACXjE,YAAa,SACbkE,UAAW,GACXzD,kBAAmB,oBACnB0D,gBAAiB,GACjBrD,aAAc,SACdC,WAAY,GAGZC,MAAO,QACPC,SAAU,WACVC,SAAU,eAGVC,oBAAqB,yBACrBC,sBAAuB,4BACvBC,sBAAuB,2BACvBC,sBAAuB,6EACvBC,eAAgB,+CAGhBC,eAAgB,+CAChBC,aAAc,wFAGdC,SAAU,4BACVC,oBAAqB,kBACrBC,0BAA2B,+CAC3BC,wBAAyB,iBACzBC,gBAAiB,wBACjBC,uBAAwB,kCACxBC,YAAa,eACbC,mBAAoB,iBACpBC,mBAAoB,mBAGpBC,oBAAqB,0BACrBC,kBAAmB,sEAGnBC,UAAW,gBACXC,WAAY,YACZC,WAAY,qBACZC,cAAe,4BAGfC,oBAAqB,oEACrBC,cAAe,SACfC,SAAU,SACVC,OAAQ,WACRC,KAAM,QACNC,KAAM,aACNC,gBAAiB,sDAGjBC,KAAM,OACNC,gBAAiB,YACjBC,eAAgB,gDAGhBC,QAAS,UACTC,OAAQ,SACRC,IAAK,OACLC,KAAM,aACNC,KAAM,gBACNC,KAAM,QACNC,OAAQ,cACRC,MAAO,gBACPC,MAAO,QACP/G,KAAM,OACNgH,MAAO,QACPC,OAAQ,SACRC,MAAO,SACPC,UAAW,YACXC,SAAU,YC7EG9E,EALC,I,OAAIkF,GAAiB,CACnCC,GAAIC,EACJC,GAAIC,ICqESC,EA3DA,SAACnG,GAAW,IAAD,EACQoG,mBAASzH,KADjB,mBACjB0H,EADiB,KACPC,EADO,OAEwBF,mBAC9C3H,aAAaC,QAAQ,aAAe,MAHd,mBAEjB6H,EAFiB,KAECC,EAFD,KAMxB5F,EAAQ6F,YAAYF,GAgBpB,OAFAG,OAAOC,iBAAiB,WAAW,kBAAML,EAAY3H,QAGnD,oCACG0H,GACC,kBAAC,EAAD,KACE,kBAACzG,EAAD,KACE,kBAACE,EAAD,CAAM8G,GAAG,IAAIC,QAnBR,WPHfpI,aAAaqI,WAAWvI,GACxBmI,OAAOK,cAAc,IAAIC,MAAM,cOqBUpI,IAAcgE,UAC7C,kBAAC9C,EAAD,CAAM8G,GAAG,4BAA4BhG,EAAQC,mBAC7C,kBAACf,EAAD,CAAM8G,GAAG,gBAAgBhG,EAAQE,iBAIvC,kBAACrB,EAAD,KACE,kBAAC,IAAD,CAAYmH,GAAG,KACb,kBAAC1G,EAAD,CAAiB+G,IAAK5I,EAAa,qBAErC,kBAACuB,EAAD,KACE,kBAACE,EAAD,CAAM8G,GAAG,qBAAqBhG,EAAQG,aACtC,kBAACjB,EAAD,CAAM8G,GAAG,4BAA4BhG,EAAQI,eAIjD,kBAACZ,EAAD,KAAOJ,EAAMkH,UAEb,kBAAC3G,EAAD,KACE,kBAACX,EAAD,KACE,kBAACE,EAAD,CAAM8G,GAAG,iBAAiBhG,EAAQK,iBAClC,kBAACnB,EAAD,CAAM8G,GAAG,mBAAmBhG,EAAQM,mBACpC,kBAACR,EAAD,CAAgByG,SArCC,SAACC,GACxB,IAAMC,EAAcD,EAAME,OAAOC,MACjC9I,aAAa+I,QAAQ,WAAYH,GACjCb,EAAoBa,GACpBzG,EAAQ6F,YAAYY,GACpBX,OAAOe,SAASC,UAgCkCH,MAAOhB,GACjD,4BAAQgB,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,gBJvDZ,SAASI,IACP,IAAMC,EAAQpJ,IACVqJ,EAAc,CAChB,eAAgB,mBAChB,OAAU,oBAOZ,OAJID,IACFC,EAAW,cAAX,iBAAyCD,IAGpC,IAAIE,QAAQD,GA6BrB,SAASE,EAAUxC,EAAQjH,GACzB,IAAM0J,EAAG,UAAMxI,EAAN,oBAAyB+F,EAAzB,YAAmCjH,GAC5C,OAAO2J,MAAMD,EAAK,CAChBE,OAAQ,MACRC,QAASR,M,k2CA/CTnI,EAAU,OKNd,IAAM4I,GAAY1I,IAAOS,IAAV,MAEJ,SAAAH,GAAK,OAAIA,EAAMqI,SACR,SAAArI,GAAK,OAAIA,EAAMsI,eAI3BvI,GAAaL,YAAOI,IAAPJ,CAAH,MAKV6I,GAAe7I,IAAO8I,KAAV,MAKZC,GAAK/I,IAAOgJ,GAAV,MAKFC,GAAOjJ,IAAOG,IAAV,MAEK,SAAAG,GAAK,OAAIA,EAAM4I,YACT,SAAA5I,GAAK,OAAIA,EAAM6I,kBACnB,SAAA7I,GAAK,OAAIA,EAAM8I,cAG1BC,GAASrJ,IAAOsJ,OAAV,KAQD,SAAAhJ,GAAK,OAAIA,EAAMqI,SACd,SAAArI,GAAK,OAAIA,EAAMiJ,UACd,SAAAjJ,GAAK,OAAIA,EAAMkJ,WACb,SAAAlJ,GAAK,OAAIA,EAAMmJ,YAGN,SAAAnJ,GAAK,OAAIA,EAAMoJ,0BACnB,SAAApJ,GAAK,OAAIA,EAAMqJ,sBAI7BC,GAAO5J,IAAOG,IAAV,KC9CJY,GAAkB,SAAC,GAA0B,IAAzB8I,EAAwB,EAAxBA,cAAevB,EAAS,EAATA,IACvC,OACE,kBAAC,EAAD,KACE,kBAAClI,EAAD,CACEG,SAA6B,aAAlBsJ,EACX3C,GAAE,WAAMoB,EAAN,cAFJ,YAMA,kBAAClI,EAAD,CACEG,SAA6B,aAAlBsJ,EACX3C,GAAE,WAAMoB,EAAN,cAFJ,cAUAwB,GAAoB,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAOxC,EAAc,EAAdA,SAC1C,OAAIuC,EACK,kBAAClB,GAAD,KAAe3H,EAAQsC,gBACrBwG,EACF,kBAACnB,GAAD,KAAe3H,EAAQuC,cAEvB+D,G,8kBC5BX,IAAMyC,GAAejK,IAAOG,IAAV,MAIZ+J,GAAQlK,IAAOmK,MAAV,MASLC,GAAcpK,IAAOqK,GAAV,MACD,SAAA/J,GAAK,OAAIA,EAAMgK,SAIzBC,GAAYvK,IAAOwK,GAAV,MACC,SAAAlK,GAAK,OAAIA,EAAMgK,SAIzBG,GAAWzK,IAAO0K,GAAV,MACQ,SAAApK,GAAK,OAAIA,EAAMqK,KAAO,QAAU,aC+FvCC,GA1GC,SAACtK,GACfuK,SAASC,MAAQ5J,EAAQG,YACzB,IAAMwI,EAAgBvJ,EAAMyK,MAAMC,OAAOnF,OAFhB,EAGKa,mBAAS,MAHd,mBAGlBvB,EAHkB,KAGT8F,EAHS,OAIKvE,oBAAS,GAJd,mBAIlBqD,EAJkB,KAITmB,EAJS,OAKOxE,oBAAS,GALhB,mBAKlByE,EALkB,KAKRC,EALQ,KAyBzB,OAlBAC,qBAAU,WAGR,IAAIC,EAFJJ,GAAW,GACXD,EAAW,MRGf,SAAoBpF,GAClB,IAAMyC,EAAG,UAAMxI,EAAN,oBAAyB+F,GAClC,OAAO0C,MAAMD,EAAK,CAChBE,OAAQ,MACRC,QAASR,MQLTsD,CAAW1B,GAAe2B,MAAK,SAAAC,GAE7B,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GACDJ,EAAIK,GAIPV,EAAWS,IAHXN,GAAY,GACZQ,QAAQ5B,MAAM0B,EAAKG,MAIrBX,GAAW,QAEZ,CAACrB,IAGF,oCACE,kBAAC,GAAD,CAAiBvB,IAAI,UAAUuB,cAAeA,IAE9C,kBAACjJ,EAAD,KACE,kBAAC,GAAD,CAAmBmJ,QAASA,EAASC,MAAOmB,GACxChG,GAAWA,EAAQ2G,OAAS,GAC5B,kBAAC7B,GAAD,KACE,kBAACC,GAAD,KACE,+BACE,4BACE,kBAACE,GAAD,CAAaE,MAAM,UAAUpJ,EAAQ8D,MACrC,kBAACoF,GAAD,CAAaE,MAAM,UAAUpJ,EAAQkE,QACrC,kBAACgF,GAAD,CAAaE,MAAM,QAAQpJ,EAAQtC,MACnC,kBAACwL,GAAD,CAAaE,MAAM,UAAUpJ,EAAQyE,OACrC,kBAACyE,GAAD,CAAaE,MAAM,UAAUpJ,EAAQ+D,mBAGzC,+BACGE,EAAQ4G,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE7G,OAAS4G,EAAE5G,UAAQ8G,KAAI,SAACC,EAAQC,GACxD,IACIC,EADArH,EAAOoH,EAAQ,EAEnB,OAAQpH,GACN,KAAK,EACHqH,EAAY,UACZ,MACF,KAAK,EACHA,EAAY,UACZ,MACF,KAAK,EACHA,EAAY,UACZ,MACF,QACEA,EAAY,UAKhB,IAAMC,EAA8B,qBAAnBC,eAAiC,KAAO,KAEzD,OACE,kBAAC9B,GAAD,CAAU+B,IAAKL,EAAOvN,KAAM+L,KAAMyB,EAAQ,GACxC,kBAAC7B,GAAD,CAAWD,MAAM,UACf,yBAAK3B,MAAO,GAAI8D,OAAQ,IACtB,0BAAMC,EAAE,oCAAoCC,KAAMN,IAClD,0BAAMO,WAAW,SAASC,kBAAkB,UAAUC,EAAE,KAAKR,EAAGA,EAAGK,KAAK,SAAS3H,KAGrF,kBAACuF,GAAD,CAAWD,MAAM,UAAU6B,EAAO/G,QAClC,kBAACmF,GAAD,CAAWD,MAAM,QACf,kBAACrB,GAAD,CAAMC,SAAS,MAAME,WAAW,UAC9B,kBAACV,GAAD,CACEC,MAAO,GACPC,YAAa,EACbrB,IAAK5I,EAAa,oBAAD,OAAqBwN,EAAOrG,MAAM0G,IAAlC,WAEnB,kBAACnM,GAAD,CACE6G,GAAE,mBAAciF,EAAOtG,OAAO2G,IAA5B,YAAmCL,EAAOvN,OAE3CuN,EAAOvN,QAId,kBAAC2L,GAAD,CAAWD,MAAM,UAAU6B,EAAOY,WAAlC,MAAiDZ,EAAOa,WACxD,kBAACzC,GAAD,CAAWD,MAAM,UAAU6B,EAAO3G,KAAlC,MAA2C2G,EAAO1G,OAAlD,MAA6D0G,EAAOzG,cAQhFP,GAA8B,IAAnBA,EAAQ2G,QACnB,kBAACjD,GAAD,KAAe3H,EAAQgE,oB,gpBC7GnC,IAAM+H,GAASjN,IAAOG,IAAV,KACcxB,EAAa,0BAUjCuO,GAAOlN,IAAOG,IAAV,MAKJgN,GAAWnN,IAAOG,IAAV,MACA,SAAAG,GAAK,OAAIA,EAAM8M,QACZ,SAAA9M,GAAK,OAAIA,EAAM+M,UAAY,SAAA/M,GAAK,OAAIA,EAAMgN,OACvD3N,EAAW,KAAXA,CAHU,MAIE,SAAAW,GAAK,OAAIA,EAAMiN,OACZ,SAAAjN,GAAK,OAAIA,EAAMkN,SAAW,SAAAlN,GAAK,OAAIA,EAAMmN,QCyC7CC,GAxDK,WAClB7C,SAASC,MAAQ5J,EAAQO,SACzB,IAAMkM,EAAY,IAAIC,KAAK,yBAE3B,OACE,oCACE,kBAACX,GAAD,MACA,kBAACrM,EAAD,KACE,kBAACsM,GAAD,KACE,kBAACC,GAAD,CAAUI,IAAK,EAAGC,MAAO,EAAGC,IAAK,EAAGL,KAAM,EAAGC,OAAQ,EAAGC,KAAM,GAC5D,kBAACvE,GAAD,KAAK7H,EAAQQ,aACb,kBAACkI,GAAD,KAAM,2BAAI1I,EAAQ2M,aAAa3M,EAAQS,WAAY,CAACkD,KAAM8I,EAAUG,yBACpE,kBAAClE,GAAD,KACE,8BAAO1I,EAAQU,iBAAuB,6BACtC,8BAAOV,EAAQW,cAAoB,6BACnC,8BAAOX,EAAQY,cAAoB,6BACnC,8BAAOZ,EAAQa,cAAoB,+BAIvC,kBAACoL,GAAD,CAAUI,IAAK,EAAGC,MAAO,EAAGC,IAAK,EAAGL,KAAM,EAAGC,OAAQ,EAAGC,KAAM,GAC5D,kBAACvE,GAAD,KAAK7H,EAAQc,aACb,kBAAC4H,GAAD,KACE,4BACE,4BAAI,iCAAJ,IAAe1I,EAAQe,OACvB,4BAAI,iCAAJ,IAAef,EAAQgB,OACvB,4BAAI,iCAAJ,IAAehB,EAAQiB,OACvB,4BAAI,iCAAJ,IAAejB,EAAQkB,OACvB,4BAAI,iCAAJ,IAAelB,EAAQmB,OACvB,4BAAI,iCAAJ,IAAenB,EAAQoB,OACvB,4BAAI,iCAAJ,IAAepB,EAAQqB,QAEzB,2BAAIrB,EAAQsB,iBAIhB,kBAAC2K,GAAD,CAAUI,IAAK,EAAGC,MAAO,EAAGC,IAAK,EAAGL,KAAM,EAAGC,OAAQ,EAAGC,KAAM,GAC5D,kBAACvE,GAAD,KAAK7H,EAAQuB,mBACb,kBAACmH,GAAD,KACE,2BAAI1I,EAAQwB,kBACZ,2BAAIxB,EAAQyB,kBACZ,2BAAIzB,EAAQ0B,kBACZ,2BAAI1B,EAAQ2B,oBAIhB,kBAACsK,GAAD,CAAUI,IAAK,EAAGC,MAAO,EAAGC,IAAK,EAAGL,KAAM,EAAGC,OAAQ,EAAGC,KAAM,GAC5D,kBAACvE,GAAD,KAAK7H,EAAQ4B,cACb,kBAAC8G,GAAD,KAAO1I,EAAQ6B,iB,guCCtD3B,IAAMgL,GAAO/N,IAAOgO,GAAV,KAKNrO,EAAW,KAAXA,CALM,MAQNA,EAAW,KAAXA,CARM,OAaJsO,GAAgBjO,IAAOG,IAAV,KACOxB,EAAa,cAKnCgB,EAAW,KAAXA,CANe,MASfA,EAAW,KAAXA,CATe,MAYfA,EAAW,KAAXA,CAZe,OAiBbuO,GAAalO,IAAO8I,KAAV,MAMVqF,GAAYnO,IAAO8I,KAAV,MAKTsF,GAAUpO,IAAO8I,KAAV,MC5BPuF,GAAS,SAAC,GAAyB,IAAxBlC,EAAuB,EAAvBA,OAAQmC,EAAe,EAAfA,UACvB,OACE,kBAACrF,GAAD,CACEC,SAAS,SACTE,WAAW,SACXD,eAAe,UAEf,kBAACT,GAAD,CACEC,MAAO,GACPC,YAAa,EACbrB,IAAK5I,EAAa,oBAAD,OAAqBwN,EAAOrG,MAAM0G,IAAlC,WAEnB,kBAACnM,GAAD,CAAY6G,GAAE,mBAAciF,EAAOtG,OAAO2G,IAA5B,YAAmCL,EAAOvN,OACrDuN,EAAOvN,MAEV,kBAACqK,GAAD,CAAMC,SAAS,SAASE,WAAW,UACjC,kBAAC+E,GAAD,KACGjN,EAAQkE,OADX,KACqB+G,EAAO/G,OAC1B,kBAACgJ,GAAD,WhBjCV,SAA0BG,EAAWD,GAEnC,IAAIE,EAAoB,GAAK,EAAIC,KAAKC,IAAI,IAAKJ,EAAYC,GAAW,MAEtE,OAAOE,KAAKE,MANJ,IAMe,EAAIH,IgB6BNI,CAAiBzC,EAAO/G,OAAQkJ,GAA7C,MAEF,kBAACH,GAAD,KAAYjN,EAAQyE,MAApB,KAA6BwG,EAAOY,WAApC,MAAmDZ,EAAOa,cAmKnD6B,GA5JO,SAACvO,GACrBuK,SAASC,MAAQ5J,EAAQI,YAEzB,IAAMuI,EAAgBvJ,EAAMyK,MAAMC,OAAOnF,OAHV,EAIDa,mBAAS,MAJR,mBAIxBoI,EAJwB,KAIfC,EAJe,OAKDrI,oBAAS,GALR,mBAKxBqD,EALwB,KAKfmB,EALe,OAMCxE,oBAAS,GANV,mBAMxByE,EANwB,KAMdC,EANc,KAQ/BC,qBAAU,WAIR,IAAIC,EAHJJ,GAAW,GACX6D,EAAW,MZef,SAA0BlJ,GACxB,IAAMyC,EAAG,UAAMxI,EAAN,2BAAgC+F,GACzC,OAAO0C,MAAMD,EAAK,CAChBE,OAAQ,MACRC,QAASR,MYhBT+G,CAAiBnF,GAAe2B,MAAK,SAAAC,GAEnC,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GACDJ,EAAIK,GAIPoD,EAAWrD,IAHXN,GAAY,GACZQ,QAAQ5B,MAAM0B,EAAKG,MAIrBX,GAAW,QAEZ,CAACrB,IAEJ,IAAMoF,EAAY,SAACC,EAASC,GAM1B,IAAI7D,GZAR,SAA8BzF,EAAQqJ,EAASC,GAC7C,IAAM7G,EAAG,UAAMxI,EAAN,2BAAgC+F,EAAhC,YAA0CqJ,GACnD,OAAO3G,MAAMD,EAAK,CAChBE,OAAQ,QACRC,QAASR,IACTmH,KAAMC,KAAKC,UAAU,CAACH,cYJtBI,CAAqB1F,EAAeqF,EAASC,GAAQ3D,MAAK,SAAAC,GAExD,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GACDJ,EAAIK,GAIPoD,EAAWD,EAAQU,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAOR,MAHxCS,MAAMjE,EAAKG,SAkCjB,OACE,oCACE,kBAAC,GAAD,CAAiBvD,IAAI,iBAAiBuB,cAAeA,IAErD,kBAACjJ,EAAD,KACE,kBAAC,GAAD,CAAmBmJ,QAASA,EAASC,MAAOmB,GACxC2D,GAAWA,EAAQhD,OAAS,GAC5B,kBAAC7C,GAAD,CACEC,SAAS,SACTE,WAAW,SACXD,eAAe,UAEdlK,KACC,kBAACoK,GAAD,CACEG,QAAQ,WACRE,uBAAuB,SACvBkG,mBAAmB,YACnBrG,OAAO,mBACPpC,QA5CS,WAavB,IAAImE,EAZCtE,OAAO6I,QAAQ3O,EAAQkC,yBAIvB4D,OAAO6I,QAAQ3O,EAAQmC,wBAIvB2D,OAAO6I,QAAQ3O,EAAQoC,wBZLhC,SAA6BuC,GAC3B,IAAMyC,EAAG,UAAMxI,EAAN,2BAAgC+F,GACzC,OAAO0C,MAAMD,EAAK,CAChBE,OAAQ,SACRC,QAASR,MYMT6H,CAAoBjG,GAAe2B,MAAK,SAAAC,GAEtC,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GACDJ,EAAIK,GAGPoD,EAAW,IAFXY,MAAMjE,EAAKG,WA2BA3K,EAAQiC,qBAGZ2L,EAAQ5C,KAAI,SAACnB,EAAOqB,GACnB,OACE,kBAAC,IAAM2D,SAAP,CAAgBvD,IAAKzB,EAAM2E,IACd,IAAVtD,GACC,kBAAC2B,GAAD,MAEF,kBAAC9E,GAAD,CAAMC,SAAS,MAAME,WAAW,UAC9B,kBAAC,GAAD,CAAQ+C,OAAQpB,EAAMiF,SAAU1B,UAAWvD,EAAMkF,SAAS7K,SAE1D,kBAAC6I,GAAD,KACE,kBAACC,GAAD,YAGF,kBAAC,GAAD,CAAQ/B,OAAQpB,EAAMkF,SAAU3B,UAAWvD,EAAMiF,SAAS5K,UAE3DnG,KACC,kBAACgK,GAAD,CAAMC,SAAS,MAAMC,eAAe,eAAeC,WAAW,UAC5D,kBAACC,GAAD,CACEK,uBAAuB,UACvBC,mBAAmB,QACnBH,QAAQ,WACRD,OAAO,WACPpC,QAAS,kBAAM8H,EAAUlE,EAAM2E,GAAI,KAElC3E,EAAMiF,SAASpR,MAElB,kBAACyK,GAAD,CACEK,uBAAuB,SACvBC,mBAAmB,aACnBH,QAAQ,WACRD,OAAO,WACPpC,QAAS,kBAAM8H,EAAUlE,EAAM2E,GAAI,KAElCxO,EAAQqE,MAEX,kBAAC8D,GAAD,CACEK,uBAAuB,UACvBC,mBAAmB,QACnBH,QAAQ,WACRD,OAAO,WACPpC,QAAS,kBAAM8H,EAAUlE,EAAM2E,GAAI,KAElC3E,EAAMkF,SAASrR,YAS9BkQ,GAA8B,IAAnBA,EAAQhD,QACnB,kBAACjD,GAAD,KAAe3H,EAAQqC,oB,6xCC7LnC,IAAM2J,GAAOlN,IAAOG,IAAV,KAKNR,EAAW,KAAXA,CALM,OAUJuQ,GAAmBlQ,IAAOG,IAAV,MAIhBgQ,GAAiBnQ,IAAO8I,KAAV,MAKdsH,GAAkBpQ,IAAOmK,MAAV,MAUfkG,GAAqBrQ,IAAOG,IAAV,KAEpBR,EAAW,KAAXA,CAFoB,OAUlB2Q,GAAoBtQ,IAAOmK,MAAV,MAUjBoG,GAAavQ,IAAO8I,KAAV,MACL,SAAAxI,GAAK,OAAIA,EAAMkQ,SAGpB/F,GAAWzK,IAAO0K,GAAV,MACQ,SAAApK,GAAK,OAAIA,EAAMqK,KAAO,QAAU,aCgMvC8F,GAtOO,SAACnQ,GACrB,IAAMuJ,EAAgBvJ,EAAMyK,MAAMC,OAAOnF,OACnCjH,EAAO0B,EAAMyK,MAAMC,OAAOpM,KAFD,EAIH8H,mBAAS,MAJN,mBAIxByF,EAJwB,KAIhBuE,EAJgB,OAKDhK,oBAAS,GALR,mBAKxBqD,EALwB,KAKfmB,EALe,OAMCxE,oBAAS,GANV,mBAMxByE,EANwB,KAMdC,EANc,OAQH1E,mBAAS,MARN,mBAQxBiK,EARwB,KAQhBC,EARgB,OASalK,mBAAS,MATtB,mBASxBmK,EATwB,KASRC,EATQ,KAW/BzF,qBAAU,WAIR,IAAIC,EAHJJ,GAAW,GACXwF,EAAU,MAGVrI,EAAUwB,EAAejL,GAAM4M,MAAK,SAAAC,GAElC,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GACDJ,EAAIK,IAIP+E,EAAUhF,GACVb,SAASC,MAAQ5J,EAAQ2M,aAAa3M,EAAQsD,cAAe,CAC3D5F,KAAM8M,EAAK9M,SALbwM,GAAY,GACZQ,QAAQ5B,MAAM0B,EAAKG,MAOrBX,GAAW,QAEZ,CAACrB,EAAejL,IAEnB,IA6BMmS,EAAiB,SAACrJ,GACtBoJ,EAAkBpJ,EAAME,OAAOC,OAC/B,IAEIyD,EAFE0F,EAAYC,SAASvJ,EAAME,OAAOC,QdG5C,SAA2BqH,EAAS8B,GAClC,IAAM1I,EAAG,UAAMxI,EAAN,oBAAyBoP,GAClC,OAAO3G,MAAMD,EAAK,CAChBE,OAAQ,QACRC,QAASR,IACTmH,KAAMC,KAAKC,UAAU,CAACH,OAAQ6B,OcL9BE,CAAkBP,EAAQK,GAAWxF,MAAK,SAAAC,GAExC,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GACDJ,EAAIK,IAIP+E,EAAUhF,EAAKyF,MACfP,EAAU,MACVE,EAAkB,OALlBnB,MAAMjE,EAAKG,SAUjB,OACE,kBAACjL,EAAD,KACE,kBAAC,GAAD,CAAmBmJ,QAASA,EAASC,MAAOmB,GACzCgB,GACC,kBAAC,GAAD,KACE,kBAAC+D,GAAD,KACE,kBAACjH,GAAD,CAAMC,SAAS,MAAME,WAAW,UAC9B,kBAACV,GAAD,CACEC,MAAO,GACPC,YAAa,EACbrB,IAAK5I,EAAa,oBAAD,OAAqBwN,EAAOrG,MAAM0G,IAAlC,WAEnB,kBAAC2D,GAAD,KAAiBhE,EAAOvN,OAG1B,kBAACwR,GAAD,KACE,+BACE,4BACE,4BAAKlP,EAAQ2E,QACb,4BAAKsG,EAAOtG,OAAOgC,QAErB,4BACE,4BAAK3G,EAAQyE,OACb,4BAAKwG,EAAOY,WAAZ,MAA2BZ,EAAOa,YAEpC,4BACE,4BAAK9L,EAAQ0E,OACb,4BAAKuG,EAAOvG,OAAS,MAEvB,4BACE,4BAAK1E,EAAQkE,QACb,4BAAK+G,EAAO/G,SAEd,4BACE,4BAAKlE,EAAQsE,MACb,4BAAK2G,EAAO3G,OAEd,4BACE,4BAAKtE,EAAQuE,QACb,4BAAK0G,EAAO1G,SAEd,4BACE,4BAAKvE,EAAQwE,OACb,4BAAKyG,EAAOzG,WAMpB,kBAAC2K,GAAD,KACE,kBAACtH,GAAD,KAAK7H,EAAQwD,eACXyH,EAAO2C,QAAQhD,QAAU,EAEzB,kBAACwE,GAAD,KACE,+BACE,4BACE,4BAAKpP,EAAQyD,UACb,4BAAKzD,EAAQ0D,QACb,4BAAK1D,EAAQ2D,MACZ5F,KACC,4BAAKiC,EAAQ4D,QAInB,+BACGqH,EAAO2C,QAAQ/C,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEyD,GAAK1D,EAAE0D,MAAIxD,KAAI,SAACnB,EAAOqB,GACtD,IAAIzH,EACAyM,EASAxM,EARAmG,EAAMiF,SAASpR,OAASuN,EAAOvN,MACjC+F,EAAWoG,EAAMkF,SACjBmB,EAAY,aAEZzM,EAAWoG,EAAMiF,SACjBoB,EAAY,YAId,IAAIC,EAAetG,EAAMqG,GAAWE,cAAcC,WAC9CC,EAAkBH,EAAe,EAAK,IAAM,GAG9CzM,EADyB,IAAvBmG,EAAMoE,OAAOtH,MACN,8BAAO3G,EAAQqE,KAAf,KAAsB,kBAACgL,GAAD,CAAYC,MAAM,UAAlB,UAA+BgB,GAA/B,OAAgDH,IAAtE,KACwB,IAAvBtG,EAAMoE,OAAOtH,OAA6B,aAAduJ,GAAqD,IAAvBrG,EAAMoE,OAAOtH,OAA6B,aAAduJ,EACvF,8BAAOlQ,EAAQmE,IAAf,KAAqB,kBAACkL,GAAD,CAAYC,MAAM,SAAlB,UAA8BgB,GAA9B,OAA+CH,IAApE,KAEA,8BAAOnQ,EAAQoE,KAAf,KAAsB,kBAACiL,GAAD,CAAYC,MAAM,OAAlB,UAA4BgB,GAA5B,OAA6CH,IAAnE,KAIPV,IAAW5F,EAAM2E,KACnB9D,QAAQ6F,IAAIZ,GACZjM,EACE,4BACEiD,MAAOgJ,EACPpJ,SAAUsJ,GAEV,4BAAQlJ,MAAM,KAAKkD,EAAMiF,SAASpR,KAAlC,IAAyCsC,EAAQmE,KACjD,4BAAQwC,MAAM,KAAKkD,EAAMkF,SAASrR,KAAlC,IAAyCsC,EAAQmE,KACjD,4BAAQwC,MAAM,KAAK3G,EAAQqE,QAKjC,IAAMmM,EAAY,IAAI9D,KAAK7C,EAAMlG,MAAM8M,iBAEvC,OACE,kBAAC,GAAD,CAAUhH,KAAMyB,EAAQ,GACtB,4BACE,kBAACnD,GAAD,CAAMC,SAAS,MAAME,WAAW,UAC9B,kBAACV,GAAD,CACEC,MAAO,GACPC,YAAa,EACbrB,IAAK5I,EAAa,oBAAD,OAAqBgG,EAASmB,MAAM0G,IAApC,WAEnB,kBAACnM,GAAD,CAAY6G,GAAE,mBAAc6D,EAAMlF,OAAO2G,IAA3B,YAAkC7H,EAAS/F,OAAS+F,EAAS/F,QAG/E,4BAAKgG,GACL,4BAAK8M,GACJzS,KACC,4BACE,kBAACoK,GAAD,CACEK,uBAAuB,UACvBC,mBAAmB,QACnBH,QAAQ,WACRrC,QAAS,kBA9Kf,SAAC4D,EAAOpG,GAG9B,IAAMiN,EAAiB,GACvBzF,EAAO2C,QAAQ+C,SAAQ,SAAApC,GAAC,OAAImC,EAAeE,KAAKrC,EAAEC,OAClD,IAAMqC,EAAgBtD,KAAKuD,IAAL,MAAAvD,KAAYmD,GAE9B7G,EAAM2E,KAAOqC,EAMjB1J,EAAUwB,EAAelF,EAAS/F,MACjC4M,MAAK,SAAAF,GAAG,OAAIA,EAAII,UAChBF,MAAK,SAAAE,GACJ,IAAMuG,EAAmB,GACzBvG,EAAKoD,QAAQ+C,SAAQ,SAAApC,GAAC,OAAIwC,EAAiBH,KAAKrC,EAAEC,OACpBjB,KAAKuD,IAAL,MAAAvD,KAAYwD,KAEZlH,EAAM2E,IAClCkB,EAAU7F,EAAM2E,IAChBoB,EAAkB/F,EAAMoE,OAAOtH,MAAM0J,aAErC5B,MAAMzO,EAAQuD,wBAhBhBkL,MAAMzO,EAAQuD,qBAsK2ByN,CAAgBnH,EAAOpG,KAErCzD,EAAQ4D,aAWzB,kBAAC+D,GAAD,KAAe3H,EAAQ6D,sBC7LxBoN,GA5CD,SAAC7R,GACbuK,SAASC,MAAQ5J,EAAQ8B,MADF,MAGS0D,mBAAS,IAHlB,mBAGhBxD,EAHgB,KAGNkP,EAHM,OAIS1L,mBAAS,IAJlB,mBAIhBzD,EAJgB,KAINoP,EAJM,KAuBvB,OACE,kBAACzR,EAAD,KACE,0BAAM0R,SAnBW,SAAC5K,GAGpB,IAAI4D,EAFJ5D,EAAM6K,iBfsBV,SAAerP,EAAUD,GACvB,IAAMqF,EAAG,UAAMxI,EAAN,UACT,OAAOyI,MAAMD,EAAK,CAChBE,OAAQ,OACRC,QAASR,IACTmH,KAAMC,KAAKC,UAAU,CAACpM,WAAUD,eexBhCD,CAAME,EAAUD,GAAUuI,MAAK,SAAAC,GAE7B,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GlBJM,IAACxD,EkBKRoD,EAAIK,IlBLIzD,EkBQDwD,EAAK8G,alBPrBzT,aAAa+I,QAAQjJ,EAAKqJ,GAC1BlB,OAAOK,cAAc,IAAIC,MAAM,YkBOzBhH,EAAMmS,QAAQX,KAAK,MAHnBnC,MAAMjE,EAAKG,UAWX,2BACEhE,MAAO3E,EACPuE,SAAU,SAAAiL,GAAC,OAAIN,EAAYM,EAAE9K,OAAOC,QACpC8K,YAAazR,EAAQgC,WAGvB,2BACE2E,MAAO5E,EACPwE,SAAU,SAAAiL,GAAC,OAAIL,EAAYK,EAAE9K,OAAOC,QACpC8K,YAAazR,EAAQ+B,WAGvB,4BAAQ2P,KAAK,UAAU1R,EAAQ8B,U,84DC1CvC,IAAMkK,GAAOlN,IAAOG,IAAV,MAMJ0S,GAAqB7S,IAAOG,IAAV,MAKlB2S,GAAoB9S,IAAOG,IAAV,MAKjB4S,GAAsB/S,IAAOG,IAAV,MAKnB6S,GAAiBhT,IAAOG,IAAV,MASd8S,GAAkBjT,IAAOG,IAAV,MAQf+S,GAAgBlT,IAAOG,IAAV,MAWbgT,GAAgBnT,IAAOG,IAAV,MAWbiT,GAAcpT,IAAOqT,MAAV,MAQXC,GAAetT,IAAOqT,MAAV,MAMZE,GAAqBvT,IAAOG,IAAV,MAQlBqT,GAAkBxT,IAAOyT,SAAV,MCyINC,GAvMO,SAACpT,GACrBuK,SAASC,MAAQ5J,EAAQC,kBAEzB,IAAM0I,EAAgBvJ,EAAMyK,MAAMC,OAAOnF,OAHV,EAIDa,mBAAS,MAJR,mBAIxBvB,EAJwB,KAIf8F,EAJe,OAKDvE,oBAAS,GALR,mBAKxBqD,EALwB,KAKfmB,EALe,OAOSxE,mBAAS,IAPlB,mBAOxBiN,EAPwB,KAOVC,EAPU,OAQWlN,mBAAS,IARpB,mBAQxBmN,EARwB,KAQTC,EARS,OASSpN,mBAAS,IATlB,mBASxBqN,EATwB,KASVC,EATU,OAWDtN,mBAAS,IAXR,mBAWxBuN,EAXwB,KAWfC,EAXe,OAYDxN,mBAAS,IAZR,mBAYxByN,EAZwB,KAYfC,EAZe,KAc/B/I,qBAAU,WAMR,IAAIC,EALJJ,GAAW,GACXD,EAAW,MACX6I,EAAiB,IACjBE,EAAgB,IjBIpB,SAAoBnO,GAClB,IAAMyC,EAAG,UAAMxI,EAAN,oBAAyB+F,GAClC,OAAO0C,MAAMD,EAAK,CAChBE,OAAQ,MACRC,QAASR,MiBLToM,CAAWxK,GAAe2B,MAAK,SAAAC,GAE7B,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GACDJ,EAAIK,GAGPV,EAAWS,GAFXiE,MAAMjE,EAAKG,KAIbX,GAAW,QAEZ,CAACrB,IAEJ,IAkBMyK,EAAY,SAACnI,GACZ4H,EAAaQ,SAASpI,IAAsB,OAAXA,GACpC6H,EAAgB,GAAD,oBAAKD,GAAL,CAAmB5H,KAEpC2H,EAAiB,IACjBF,EAAgB,KAkDlB,OACE,oCACE,kBAAC,GAAD,CAAiBtL,IAAI,iBAAiBuB,cAAeA,IAErD,kBAACjJ,EAAD,KACE,kBAAC,GAAD,CAAmBmJ,QAASA,EAASC,OAAO,GAC1C,kBAAC,GAAD,KACE,kBAAC6I,GAAD,KACE,kBAAC9J,GAAD,KAAK7H,EAAQ4C,iBACb,kBAACyP,GAAD,KACE,kBAACH,GAAD,CACER,KAAK,OACL/K,MAAO8L,EACPlM,SAtFC,SAACC,GAGhB,GAFAkM,EAAgBlM,EAAME,OAAOC,OAEzBH,EAAME,OAAOC,MAAMiE,QAAU,EAC/BgI,EAAiB,QACZ,CACL,IAAMU,EAAkBrP,EAAQqK,QAAO,SAAAiF,GAAC,OAAIA,EAAE7V,KAAK8V,cAAcH,SAAS7M,EAAME,OAAOC,MAAM6M,kBAC7FZ,EAAiBU,KAgFLG,QA5EM,SAACjN,GACC,KAAlBA,EAAMkN,UACRlN,EAAM6K,iBACN+B,EAAUT,EAAc,IAAM,QA0ElBlB,YAAazR,EAAQ2C,2BAGzB,kBAACqP,GAAD,KACGW,EAAc9H,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEpN,KAAKkN,OAASG,EAAErN,KAAKkN,UAAQI,KAAI,SAAAC,GAC/D,OACE,kBAACgH,GAAD,CAAehM,QAAS,kBAAMmN,EAAUnI,KACtC,kBAACzD,GAAD,CACEC,MAAO,GACPC,YAAa,EACbrB,IAAK5I,EAAa,oBAAD,OAAqBwN,EAAOrG,MAAM0G,IAAlC,WAEnB,8BAAOL,EAAOvN,YAOxB,kBAACmU,GAAD,KACE,kBAAChK,GAAD,KAAK7H,EAAQ6C,wBACb,kBAACiP,GAAD,KACE,kBAACM,GAAD,CACEX,YAAazR,EAAQgD,mBACrB2D,MAAOoM,EACPxM,SAAU,SAAAiL,GAAC,OAAIwB,EAAWxB,EAAE9K,OAAOC,UAErC,kBAAC2L,GAAD,CACE3L,MAAOsM,EACP1M,SAAU,SAAAiL,GAAC,OAAI0B,EAAW1B,EAAE9K,OAAOC,UAErC,kBAACwB,GAAD,CACEK,uBAAuB,YACvBC,mBAAmB,UACnBH,QAAQ,WACRrC,QA7FK,WACnB,IAAM0N,EAAQ,IAAIC,OAAJ,0BAA8Bb,EAA9B,MAA2C,KAEnDvQ,EAAW,GACXqR,EAAgB,GAEtBZ,EAAQa,MAAM,MAAMnD,SAAQ,SAAAoD,GAC1B,IAAMlK,EAAQkK,EAAKC,YAAYnK,MAAM8J,GACrC,GAAI9J,EAAO,CACT,IAAMoK,EAAapK,EAAM,GACnBqK,EAAYjQ,EAAQqK,QAAO,SAAAiF,GAAC,OAAIA,EAAE7V,OAASuW,KAAY,IAAM,KAE/DC,IAAcrB,EAAaQ,SAASa,GACtCL,EAAcjD,KAAKsD,GACI,OAAdA,GACT1R,EAASoO,KAAKqD,OAKpBnB,EAAgB,GAAD,oBAAKD,GAAiBgB,IACjCrR,EAASoI,QAAU,GACrB6D,MAAMzO,EAAQ2M,aAAa3M,EAAQwC,SAAU,CAC3C2R,MAAO3R,EAAS6N,gBAwELrQ,EAAQ8C,eAKf,kBAAC8O,GAAD,KACE,kBAAC/J,GAAD,KAAK7H,EAAQiE,QAAb,KAAwB4O,EAAajI,OAArC,KACA,kBAACmH,GAAD,KACGc,EAAa7H,KAAI,SAAAC,GACd,OACE,kBAACgH,GAAD,CAAehM,QAAS,kBA7GvB,SAACgF,GACpB6H,EAAgBD,EAAavE,QAAO,SAAAiF,GAAC,OAAIA,IAAMtI,MA4GCmJ,CAAanJ,KACzC,kBAACzD,GAAD,CACEC,MAAO,GACPC,YAAa,EACbrB,IAAK5I,EAAa,oBAAD,OAAqBwN,EAAOrG,MAAM0G,IAAlC,WAEnB,8BAAOL,EAAOvN,aAO5B,kBAACyK,GAAD,CACEK,uBAAuB,UACvBC,mBAAmB,QACnBH,QAAQ,WACRD,OAAO,WACPZ,MAAM,OACNc,SAAS,OACTtC,QAjGW,WACnB,IAAMoO,EAAM,GACZxB,EAAalC,SAAQ,SAAA4C,GAAC,OAAIc,EAAIzD,KAAK2C,EAAE/E,OAEjC1I,OAAO6I,QAAQ3O,EAAQyC,sBjB1D/B,SAAuBkC,EAAQ2P,GAC7B,IAAMlN,EAAG,UAAMxI,EAAN,2BAAgC+F,GACzC,OAAO0C,MAAMD,EAAK,CAChBE,OAAQ,OACRC,QAASR,IACTmH,KAAMC,KAAKC,UAAU,CAACiG,IAAKC,MiBsDzBC,CAAc5L,EAAe0L,GAAK/J,MAAK,SAAAF,GAClB,MAAfA,EAAIoK,OACNpV,EAAMmS,QAAQX,KAAd,0BAAsCjI,IACd,MAAfyB,EAAIoK,QACb/F,MAAMzO,EAAQ0C,gCA0FX1C,EAAQ+C,wBCrMN0R,GAXO,WAGpB,OAFA9K,SAASC,MAAQ5J,EAAQM,kBAGvB,kBAACZ,EAAD,KACE,kBAACmI,GAAD,KAAK7H,EAAQiD,qBACb,kBAACyF,GAAD,KAAO1I,EAAQkD,qBC6DNwR,GAnEK,WAGlB,OAFA/K,SAASC,MAAQ5J,EAAQK,gBAGvB,kBAACX,EAAD,KACE,kBAACmI,GAAD,qBACA,kBAACa,GAAD,oEAC8D,6BAD9D,kBAEiB,6BAFjB,mBAGkB,6BAHlB,mBAIkB,6BAJlB,kBAKiB,6BALjB,WASA,kBAACb,GAAD,8BACA,kBAACa,GAAD,wCACkC,6BADlC,kDAEiD,6BAFjD,mCAGkC,6BAHlC,uBAIsB,6BACpB,6BALF,kCAMiC,6BANjC,gCAO+B,6BAC7B,6BARF,UASS,6BATT,2BAU0B,6BAV1B,6BAW4B,8BAG5B,kBAACb,GAAD,mBACA,kBAACa,GAAD,wOAIA,kBAACb,GAAD,gBACA,kBAACa,GAAD,iJAC2I,6BAD3I,oLAKA,kBAACb,GAAD,4BACA,kBAACa,GAAD,4NACsN,6BADtN,sKAEqK,6BAFrK,8JAG6J,8BAG7J,kBAACb,GAAD,kBACA,kBAACa,GAAD,4JACsJ,6BADtJ,qOAEoO,8BAGpO,kBAACb,GAAD,0CACA,kBAACa,GAAD,qQAIA,kBAACA,GAAD,sDAC6C,6BAD7C,0B,ygBC9DN,IAAMiM,GAAa7V,IAAOG,IAAV,MAcV2V,GAAY9V,IAAOqT,MAAV,MAMT0C,GAAS/V,IAAOiB,OAAV,MC+IG+U,GAzJI,SAAC1V,GAClBuK,SAASC,MAAQ5J,EAAQqD,WAEzB,IAAMsF,EAAgBvJ,EAAMyK,MAAMC,OAAOnF,OACnCoQ,EAAoB3V,EAAMyK,MAAMC,OAAOpM,KAJjB,EAMA8H,mBAAS,MANT,mBAMrByF,EANqB,KAMbuE,EANa,OAOEhK,oBAAS,GAPX,mBAOrBqD,EAPqB,KAOZmB,EAPY,OAQIxE,oBAAS,GARb,mBAQrByE,EARqB,KAQXC,EARW,OAUM1E,mBAAS,MAVf,mBAUrBX,EAVqB,KAUVmQ,EAVU,OAWIxP,mBAAS,MAXb,mBAWrBV,EAXqB,KAWXmQ,EAXW,OAYgBzP,mBAAS,MAZzB,mBAYrB0P,EAZqB,KAYLC,EAZK,KAc5BhL,qBAAU,WACR,IAAIC,EACJjD,EAAUwB,EAAeoM,GAAmBzK,MAAK,SAAAC,GAE/C,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GACDJ,EAAIK,IAIP+E,EAAUhF,GACVwK,EAAaxK,EAAKqB,YAClBoJ,EAAYzK,EAAKsB,WACjBqJ,EAAkB3K,EAAK5F,MAAM0G,OAN7BpB,GAAY,GACZQ,QAAQ5B,MAAM0B,EAAKG,MAOrBX,GAAW,QAGZ,CAACrB,EAAeoM,IA+BnB,OACE,kBAACrV,EAAD,KACE,kBAAC,GAAD,CAAmBmJ,QAASA,EAASC,MAAOmB,GACzCgB,GACC,0BAAMmG,SAjCG,SAAC5K,GAChBA,EAAM6K,iBAEN,IAaIjH,EAbEgL,EAAY,CAChB1X,KAAMuN,EAAOvN,KACbgH,MAAOuG,EAAOvG,MACdmH,WAAYkE,SAASlL,GACrBiH,UAAWiE,SAASjL,GACpBuQ,gBAAiBH,EACjBvQ,OAAQsG,EAAOtG,OAAO2G,IACtBpH,OAAQ+G,EAAO/G,OACfI,KAAM2G,EAAO3G,KACbC,OAAQ0G,EAAO1G,OACfC,MAAOyG,EAAOzG,QrB4CpB,SAAsBG,EAAQjH,EAAM0X,GAClC,IAAMhO,EAAG,UAAMxI,EAAN,oBAAyB+F,EAAzB,YAAmCjH,GAC5C,OAAO2J,MAAMD,EAAK,CAChBE,OAAQ,QACRC,QAASR,IACTmH,KAAMC,KAAKC,UAAUgH,MqB7CrBE,CAAa3M,EAAeoM,EAAmBK,GAAW9K,MAAK,SAAAC,GAE7D,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GACDJ,EAAIK,GAGPrL,EAAMmS,QAAQX,KAAd,mBAA+BjI,EAA/B,YAAgDoM,IAFhDtG,MAAMjE,EAAKG,UAYP,kBAACgK,GAAD,KACE,+BAAQ3U,EAAQtC,MAChB,kBAACkX,GAAD,CAAWW,UAAQ,EAAC5O,MAAOsE,EAAOvN,QAGpC,kBAACiX,GAAD,KACE,+BAAQ3U,EAAQ2E,QAChB,kBAACkQ,GAAD,CAAQU,UAAQ,EAAC5O,MAAOsE,EAAOtG,QAC7B,4BAAQgC,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,cAIJ,kBAACgO,GAAD,KACE,+BAAQ3U,EAAQ4E,OAChB,kBAACiQ,GAAD,CAAQlO,MAAOuO,EAAgB3O,SAAU,SAAAiL,GAAC,OAAI2D,EAAkB3D,EAAE9K,OAAOC,SACvE,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,kBAAd,kBAEA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UAEA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,sBAAd,sBACA,4BAAQA,MAAM,aAAd,aAEA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,eAIJ,kBAACgO,GAAD,KACE,+BAAQ3U,EAAQ0E,OAChB,kBAACkQ,GAAD,CAAWW,UAAQ,EAAC5O,MAAOsE,EAAOvG,SAGpC,kBAACiQ,GAAD,KACE,+BAAQ3U,EAAQ6E,WAChB,kBAAC+P,GAAD,CAAWjO,MAAO9B,EAAW0B,SAAU,SAAAiL,GAAC,OAAIwD,EAAaxD,EAAE9K,OAAOC,WAGpE,kBAACgO,GAAD,KACE,+BAAQ3U,EAAQ8E,UAChB,kBAAC8P,GAAD,CAAWjO,MAAO7B,EAAUyB,SAAU,SAAAiL,GAAC,OAAIyD,EAAYzD,EAAE9K,OAAOC,WAGlE,kBAACgO,GAAD,KACE,+BAAQ3U,EAAQkE,QAChB,kBAAC0Q,GAAD,CAAWW,UAAQ,EAAC5O,MAAOsE,EAAO/G,UAGpC,kBAACyQ,GAAD,KACE,+BAAQ3U,EAAQsE,MAChB,kBAACsQ,GAAD,CAAWW,UAAQ,EAAC5O,MAAOsE,EAAO3G,QAGpC,kBAACqQ,GAAD,KACE,+BAAQ3U,EAAQuE,QAChB,kBAACqQ,GAAD,CAAWW,UAAQ,EAAC5O,MAAOsE,EAAO1G,UAGpC,kBAACoQ,GAAD,KACE,+BAAQ3U,EAAQwE,OAChB,kBAACoQ,GAAD,CAAWW,UAAQ,EAAC5O,MAAOsE,EAAOzG,SAGpC,kBAAC2D,GAAD,CACEK,uBAAuB,UACvBC,mBAAmB,QACnBH,QAAQ,WACRD,OAAO,WACPqJ,KAAK,UAEJ1R,EAAQoD,gBC1CRoS,GAvGG,SAACpW,GACjBuK,SAASC,MAAQ5J,EAAQE,cADE,MAGHsF,mBAAS,IAHN,mBAGpB9H,EAHoB,KAGd+X,EAHc,OAIDjQ,mBAAS,IAJR,mBAIpBd,EAJoB,KAIbgR,EAJa,OAKOlQ,mBAAS,KALhB,mBAKpBX,EALoB,KAKTmQ,EALS,OAMKxP,mBAAS,KANd,mBAMpBV,EANoB,KAMVmQ,EANU,OAOiBzP,mBAAS,SAP1B,mBAOpB0P,EAPoB,KAOJC,EAPI,OAQC3P,mBAAS,YARV,mBAQpBb,EARoB,KAQZgR,EARY,KAqC3B,OACE,kBAACjW,EAAD,KACE,0BAAM0R,SA5BO,SAAC5K,GAChBA,EAAM6K,iBAEN,IASIjH,EATEgL,EAAY,CAChB1X,KAAMA,EACNgH,MAAOA,GAAS,KAChBmH,WAAYkE,SAASlL,GACrBiH,UAAWiE,SAASjL,GACpBuQ,gBAAiBH,EACjBvQ,OAAQA,ItBiFd,SAAmBA,EAAQyQ,GACzB,IAAMhO,EAAG,UAAMxI,EAAN,oBAAyB+F,GAClC,OAAO0C,MAAMD,EAAK,CAChBE,OAAQ,OACRC,QAASR,IACTmH,KAAMC,KAAKC,UAAUgH,MsBlFrBhC,CAAUzO,EAAQyQ,GAAW9K,MAAK,SAAAC,GAEhC,OADAH,EAAMG,EACCA,EAAcC,UACpBF,MAAK,SAAAE,GACDJ,EAAIK,GAGPrL,EAAMmS,QAAQX,KAAd,mBAA+BjM,EAA/B,YAAyCjH,IAFzC+Q,MAAMjE,EAAKG,UAWX,kBAACgK,GAAD,KACE,+BAAQ3U,EAAQtC,MAChB,kBAACkX,GAAD,CAAWjO,MAAOjJ,EAAM6I,SAAU,SAAAiL,GAAC,OAAIiE,EAAQjE,EAAE9K,OAAOC,WAG1D,kBAACgO,GAAD,KACE,+BAAQ3U,EAAQ2E,QAChB,kBAACkQ,GAAD,CAAQlO,MAAOhC,EAAQ4B,SAAU,SAAAiL,GAAC,OAAImE,EAAUnE,EAAE9K,OAAOC,SACvD,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,cAIJ,kBAACgO,GAAD,KACE,+BAAQ3U,EAAQ4E,OAChB,kBAACiQ,GAAD,CAAQlO,MAAOuO,EAAgB3O,SAAU,SAAAiL,GAAC,OAAI2D,EAAkB3D,EAAE9K,OAAOC,SACvE,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,kBAAd,kBAEA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UAEA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,sBAAd,sBACA,4BAAQA,MAAM,aAAd,aAEA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,eAIJ,kBAACgO,GAAD,KACE,+BAAQ3U,EAAQ0E,OAChB,kBAACkQ,GAAD,CAAWjO,MAAOjC,EAAO6B,SAAU,SAAAiL,GAAC,OAAIkE,EAASlE,EAAE9K,OAAOC,WAG5D,kBAACgO,GAAD,KACE,+BAAQ3U,EAAQ6E,WAChB,kBAAC+P,GAAD,CAAWjO,MAAO9B,EAAW0B,SAAU,SAAAiL,GAAC,OAAIwD,EAAaxD,EAAE9K,OAAOC,WAGpE,kBAACgO,GAAD,KACE,+BAAQ3U,EAAQ8E,UAChB,kBAAC8P,GAAD,CAAWjO,MAAO7B,EAAUyB,SAAU,SAAAiL,GAAC,OAAIyD,EAAYzD,EAAE9K,OAAOC,WAGlE,kBAACwB,GAAD,CACEK,uBAAuB,UACvBC,mBAAmB,QACnBH,QAAQ,WACRD,OAAO,WACPqJ,KAAK,UAEJ1R,EAAQmD,c,6VCxFnB,IAAMyS,GAAcC,YAAH,MAoDFC,GA7BH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzJ,KACjC,kBAAC,IAAD,CAAOwJ,KAAK,sCAAsCC,UAAWvM,KAE7D,kBAAC,IAAD,CAAOsM,KAAK,6CAA6CC,UAAWtI,KAEpE,kBAAC,IAAD,CAAOqI,KAAK,6CAA6CC,UAAWzD,KAEpE,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,4CAA4CC,UAAW1G,KACzE,kBAAC,IAAD,CAAOwG,OAAK,EAACC,KAAK,iDAAiDC,UAAWnB,KAC9E,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,eAAeC,UAAWT,KAE5C,kBAAC,IAAD,CAAOQ,KAAK,SAASC,UAAWhF,KAEhC,kBAAC,IAAD,CAAO+E,KAAK,kBAAkBC,UAAWxB,KACzC,kBAAC,IAAD,CAAOuB,KAAK,gBAAgBC,UAAWvB,OAI3C,kBAACkB,GAAD,QC9DNM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFzM,SAAS0M,eAAe,W","file":"static/js/main.8a9ea72e.chunk.js","sourcesContent":["const K = 50;\r\n\r\nfunction calculateEloGain(p1_points, p2_points) {\r\n  // p1 is the winner\r\n  let expected_score_p1 = 1 / (1 + Math.pow(10, (p2_points - p1_points)/400));\r\n\r\n  return Math.floor(K * (1 - expected_score_p1));\r\n}\r\n\r\nfunction getImagePath(name) {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    return `/images/${name}`;\r\n  } else {\r\n    return `/static/images/${name}`;\r\n  }\r\n}\r\n\r\nexport {\r\n  calculateEloGain,\r\n  getImagePath\r\n}","import decode from 'jwt-decode';\r\n\r\nconst KEY = \"access_token\"\r\n\r\nconst getToken = () => {\r\n  return localStorage.getItem(KEY) || null;\r\n}\r\n\r\nconst isLoggedIn = () => {\r\n  if (getToken()) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst loginUser = (token) => {\r\n  localStorage.setItem(KEY, token);\r\n  window.dispatchEvent(new Event(\"storage\"));\r\n}\r\n\r\nconst logoutUser = () => {\r\n  localStorage.removeItem(KEY);\r\n  window.dispatchEvent(new Event(\"storage\"));\r\n}\r\n\r\nconst getDecodedToken = () => {\r\n  // Using jwt-decode npm package to decode the token\r\n  return decode(getToken());\r\n}\r\n\r\nconst getIdentity = () => {\r\n  return getDecodedToken().identity;\r\n}\r\n\r\nexport {\r\n  getToken,\r\n  isLoggedIn,\r\n  loginUser,\r\n  logoutUser,\r\n  getIdentity,\r\n}","import { createBreakpoint, createMap } from \"styled-components-breakpoint\";\r\n\r\nconst breakpoints = {\r\n  xs: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n};\r\n \r\nconst breakpoint = createBreakpoint(breakpoints);\r\nconst map = createMap(breakpoints);\r\nexport default breakpoint;\r\nexport {\r\n  map\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport breakpoint from \"../../breakpoint\";\r\n\r\nconst Nav = styled.nav`\r\n  background: white;\r\n  padding: 8px 0px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  border-bottom: 1px solid #cacaca;\r\n`;\r\n\r\nconst LinksWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`\r\n\r\nconst Link = styled(RouterLink)`\r\n  margin: 5px 5px;\r\n  ${breakpoint(\"sm\")`\r\n    margin: 5px 30px;\r\n  `}\r\n  color: ${props => props.isactive ? \"green\" : \"black\"};\r\n  text-decoration: none;\r\n  letter-spacing: 1.2px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n  }\r\n`\r\n\r\nconst HeaderBrandLogo = styled.img`\r\n  height: 50px;\r\n  width: auto;\r\n`\r\n\r\nconst Main = styled.main``;\r\n\r\nconst ContentWrapper = styled.div`\r\n  padding: 0px 20px;\r\n  ${breakpoint(\"lg\")`\r\n    padding: 0px 125px;\r\n  `}\r\n  ${breakpoint(\"xl\")`\r\n    padding: 0px 250px;\r\n  `}\r\n  margin: 20px 0px;\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  padding: 8px 0px;\r\n  border-top: 1px solid #cacaca;\r\n`;\r\n\r\nconst NavbarExtension = styled.div`\r\n  display: flex;\r\n  flex-flow: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 5px 0px;\r\n  border-bottom: 1px solid #cacaca;\r\n`\r\n\r\nconst LanguageSelect = styled.select`\r\n  border: 1px solid #cacaca;\r\n  border-radius: 3px;\r\n  color: black;\r\n  padding: 5px 10px;\r\n`\r\n\r\nexport {\r\n  Nav,\r\n  Main,\r\n  Footer,\r\n  LinksWrapper,\r\n  Link,\r\n  HeaderBrandLogo,\r\n  ContentWrapper,\r\n  NavbarExtension,\r\n  LanguageSelect,\r\n}","import { getToken } from \"./auth\";\r\n\r\nvar API_URL;\r\n\r\nswitch (process.env.NODE_ENV) {\r\n  case \"development\":\r\n    API_URL = \"http://127.0.0.1:5000/api\";\r\n    break\r\n  default:\r\n    API_URL = \"/api\";\r\n};\r\n\r\nfunction getHeaders() {\r\n  const token = getToken();\r\n  let httpHeaders = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n  };\r\n\r\n  if (token) {\r\n    httpHeaders[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n\r\n  return new Headers(httpHeaders);\r\n}\r\n\r\n// API Functions\r\nfunction getRanking(server) {\r\n  const url = `${API_URL}/ranking/${server}`;\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: getHeaders(),\r\n  })\r\n}\r\n\r\nfunction login(username, password) {\r\n  const url = `${API_URL}/login`;\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify({username, password})\r\n  })\r\n}\r\n\r\nfunction getPlayers(server) {\r\n  const url = `${API_URL}/players/${server}`\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: getHeaders(),\r\n  })\r\n}\r\n\r\nfunction getPlayer(server, name) {\r\n  const url = `${API_URL}/players/${server}/${name}`\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: getHeaders(),\r\n  })\r\n}\r\n\r\nfunction createMatches(server, playerIds) {\r\n  const url = `${API_URL}/active_matches/${server}`\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify({ids: playerIds})\r\n  })\r\n}\r\n\r\nfunction getActiveMatches(server) {\r\n  const url = `${API_URL}/active_matches/${server}`\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: getHeaders(),\r\n  })\r\n}\r\n\r\nfunction setActiveMatchWinner(server, matchId, winner) {\r\n  const url = `${API_URL}/active_matches/${server}/${matchId}`\r\n  return fetch(url, {\r\n    method: \"PATCH\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify({winner})\r\n  })\r\n}\r\n\r\nfunction updateMatchWinner(matchId, newWinner) {\r\n  const url = `${API_URL}/matches/${matchId}`\r\n  return fetch(url, {\r\n    method: \"PATCH\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify({winner: newWinner})\r\n  })\r\n}\r\n\r\nfunction deleteActiveMatches(server) {\r\n  const url = `${API_URL}/active_matches/${server}`;\r\n  return fetch(url, {\r\n    method: \"DELETE\",\r\n    headers: getHeaders(),\r\n  })\r\n}\r\n\r\nfunction updatePlayer(server, name, newPlayer) {\r\n  const url = `${API_URL}/players/${server}/${name}`;\r\n  return fetch(url, {\r\n    method: \"PATCH\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify(newPlayer),\r\n  })\r\n}\r\n\r\nfunction addPlayer(server, newPlayer) {\r\n  const url = `${API_URL}/players/${server}`;\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify(newPlayer),\r\n  })\r\n}\r\n\r\nexport {\r\n  getRanking,\r\n  login,\r\n  getPlayers,\r\n  getPlayer,\r\n  createMatches,\r\n  getActiveMatches,\r\n  setActiveMatchWinner,\r\n  updateMatchWinner,\r\n  deleteActiveMatches,\r\n  updatePlayer,\r\n  addPlayer,\r\n}","const strings = {\r\n  // Layout\r\n  createMatchesLink: \"Create Matches\",\r\n  addPlayerLink: \"Add Player\",\r\n  rankingLink: \"Ranking\",\r\n  matchesLink: \"Matches\",\r\n  legalNoticeLink: \"Legal Notice\",\r\n  privacyPolicyLink: \"Privacy Policy\",\r\n\r\n  // LandingPage\r\n  homepage: \"Homepage\",\r\n  aboutHeader: \"About\",\r\n  aboutText1: \"The FloLeague is a 1v1 PvP league for the MMORPG Florensia. After the first season came to an end in May, we will start season 2 on {date}. The ranking of the league is based on an elo-rating similar to chess or League of Legends. At the end of the season the winners will be awarded with prizes.\",\r\n  aboutTextChange: \"We learned a lot from season 1 and changed a few things:\",\r\n  aboutChange1: \"The most impactful change will be the Essence System. Unlike the fusion system, essences will be allowed.\",\r\n  aboutChange2: \"We have also shortened the length of the season from 3 to 2 months.\",\r\n  aboutChange3: \"Last, we decided to set a fixed amount of 3 rounds per matchday in order to have a fairer competition.\",\r\n  rulesHeader: \"Rules\",\r\n  rule1: \"A name change will lead to you starting from the beginning with 1000 points.\",\r\n  rule2: \"Pets and tamed monsters are not allowed.\",\r\n  rule3: \"You are only allowed to have your own buffs (That means, buffs by pets, other players or attendance from the lord are not allowed).\",\r\n  rule4: \"All consumable items (e.g. HP/MP potions, Antidote, ...) are not allowed.\",\r\n  rule5: \"Disconnecting while fighting counts as a loss.\",\r\n  rule6: \"PvPs that last longer than 5 minutes count as a draw.\",\r\n  rule7: \"Running into spectator crowds is not allowed.\",\r\n  rulesInfoText: \"We reserve the right to give out penalties to participants or spectators that misbehave.\",\r\n  participateHeader: \"How to participate\",\r\n  participateText1: \"To take part in the league you will have to be level 90+. Then just be present on the island Ron every sunday at 17:00 UTC+0 to take part.\",\r\n  participateText2: \"One of the moderators will ask every round to whisper him via the in-game chat if you want to take part. Every matchday, three rounds will take place. Players do not have to take part in all 3 rounds.\",\r\n  participateText3: \"Once the moderator added all players to the list, the website will randomly match players. Once the matches are generated you can see them when clicking on the 'Matches' tab at the top.\",\r\n  participateText4: \"When it is your turn to fight the moderator will ask for you to step forward.\",\r\n  prizesHeader: \"Prizes\",\r\n  prizesText: \"\",\r\n\r\n  // Login\r\n  login: \"Login\",\r\n  password: \"Password\",\r\n  username: \"Username\",\r\n\r\n  // ActiveMatches\r\n  deleteMatchesButton: \"Delete all Matches\",\r\n  deleteMatchesConfirm1: \"Sure? (ㆆ _ ㆆ)\",\r\n  deleteMatchesConfirm2: \"Really Really sure? ( 0 _ 0 )\",\r\n  deleteMatchesConfirm3: \"Flipping matches table! ノ┬─┬ノ ︵ ( \\\\o°o)\\\\\",\r\n  noMatchesFound: \"No matches found. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // Common\r\n  loadingMessage: \"Loading… (｡◕‿◕｡)\",\r\n  errorMessage: \"An error occured. (╯°□°）╯︵ ┻━┻\",\r\n\r\n  // CreateMatches\r\n  notFound: \"Not found: {names}\",\r\n  startMatchesConfirm: \"Start matches?\",\r\n  alreadyActiveMatchesError: \"There are already some active matches for this server.\",\r\n  searchPlayerPlaceholder: \"Search Player\",\r\n  addPlayerHeader: \"Add Player\",\r\n  addPlayerChatlogHeader: \"Add Player (Chatlog)\",\r\n  parseButton: \"Parse\",\r\n  startMatchesButton: \"Start matches\",\r\n  keywordPlaceholder: \"Keyword\",\r\n\r\n  // PrivacyPolicy\r\n  privacyPolicyHeader: \"Privacy Policy\",\r\n  privacyPolicyText: \"flo-league.com does not collect any sorts of personal data of the user.\",\r\n\r\n  // AddPlayer / EditPlayer\r\n  addButton: \"Add\",\r\n  saveButton: \"Save\",\r\n  playerEdit: \"Edit Player\",\r\n  playerProfile: \"Player Profile of {name}\",\r\n\r\n  // PlayerProfile\r\n  notLatestMatchError: \"Not the latest match of the current or opponent player.\",\r\n  matchesHeader: \"Matches\",\r\n  opponent: \"Opponent\",\r\n  result: \"Result\",\r\n  date: \"Date\",\r\n  edit: \"Edit\",\r\n  noMatchesPlayed: \"No matches played. (ง •_•)ง\",\r\n\r\n  // Ranking\r\n  rank: \"Rank\",\r\n  winsLossesDraws: \"W : L : D\",\r\n  noPlayersFound: \"No players found. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // other keywords\r\n  players: \"Players\",\r\n  points: \"Points\",\r\n  win: \"Win\",\r\n  loss: \"Loss\",\r\n  draw: \"Draw\",\r\n  wins: \"Wins\",\r\n  losses: \"Losses\",\r\n  draws: \"Draws\",\r\n  level: \"Level\",\r\n  name: \"Name\",\r\n  guild: \"Guild\",\r\n  server: \"Server\",\r\n  class: \"Class\",\r\n  levelLand: \"Level Land\",\r\n  levelSea: \"Level Sea\",\r\n}\r\n\r\nexport default strings;","const strings = {\r\n  // Layout\r\n  createMatchesLink: \"Spiele erstellen\",\r\n  addPlayerLink: \"Spieler hinzufügen\",\r\n  rankingLink: \"Rangliste\",\r\n  matchesLink: \"Spiele\",\r\n  legalNoticeLink: \"Impressum\",\r\n  privacyPolicyLink: \"Datenschutz\",\r\n\r\n  // LandingPage\r\n  homepage: \"Startseite\",\r\n  aboutHeader: \"Über\",\r\n  aboutText: \"\",\r\n  rulesHeader: \"Regeln\",\r\n  rulesText: \"\",\r\n  participateHeader: \"Wie man teilnimmt\",\r\n  participateText: \"\",\r\n  prizesHeader: \"Preise\",\r\n  prizesText: \"\",\r\n\r\n  // Login\r\n  login: \"Login\",\r\n  password: \"Passwort\",\r\n  username: \"Benutzername\",\r\n\r\n  // ActiveMatches\r\n  deleteMatchesButton: \"Alle Spiele Löschen\",\r\n  deleteMatchesConfirm1: \"Sicher? (ㆆ _ ㆆ)\",\r\n  deleteMatchesConfirm2: \"Sicher sicher? ( 0 _ 0 )\",\r\n  deleteMatchesConfirm3: \"Sicher sicher sicher?! ノ┬─┬ノ ︵ ( \\\\o°o)\\\\\",\r\n  noMatchesFound: \"Keine Spiele gefunden. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // Common\r\n  loadingMessage: \"Laden… (｡◕‿◕｡)\",\r\n  errorMessage: \"Ein Error ist aufgetreten. (╯°□°）╯︵ ┻━┻\",\r\n\r\n  // CreateMatches\r\n  notFound: \"Nicht gefunden: {players}\",\r\n  startMatchesConfirm: \"Spiele starten?\",\r\n  alreadyActiveMatchesError: \"Es gibt bereits Spiele für diesen Server.\",\r\n  searchPlayerPlaceholder: \"Spieler suchen\",\r\n  addPlayerHeader: \"Spieler hinzufügen\",\r\n  addPlayerChatlogHeader: \"Spieler hinzufügen (Chatlog)\",\r\n  parseButton: \"Analyisieren\",\r\n  startMatchesButton: \"Spiele starten\",\r\n  keywordPlaceholder: \"Schlüsselwort\",\r\n\r\n  // PrivacyPolicy\r\n  privacyPolicyHeader: \"Datenschutzerklärung\",\r\n  privacyPolicyText: \"flo-league.com sammelt keinerlei Daten von den Besuchern der Seite.\",\r\n\r\n  // AddPlayer / EditPlayer\r\n  addButton: \"Hinzufügen\",\r\n  saveButton: \"Speichern\",\r\n  playerEdit: \"Spieler bearbeiten\",\r\n  playerProfile: \"Spieler profil von {name}\",\r\n\r\n  // PlayerProfile\r\n  notLatestMatchError: \"Nicht das letzte Spiel von dem aktuellen Spieler oder dem Gegner.\",\r\n  matchesHeader: \"Spiele\",\r\n  opponent: \"Gegner\",\r\n  result: \"Ergebnis\",\r\n  date: \"Datum\",\r\n  edit: \"Bearbeiten\",\r\n  noMatchesPlayed: \"Keine Spiele gespielt. (ง •_•)ง\",\r\n\r\n  // Ranking\r\n  rank: \"Rang\",\r\n  winsLossesDraws: \"W : N : U\",\r\n  noPlayersFound: \"Keine Spieler gefunden. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // other keywords\r\n  players: \"Spieler\",\r\n  points: \"Punkte\",\r\n  win: \"Sieg\",\r\n  loss: \"Niederlage\",\r\n  draw: \"Unentschieden\",\r\n  wins: \"Siege\",\r\n  losses: \"Niederlagen\",\r\n  draws: \"Unentschieden\",\r\n  level: \"Level\",\r\n  name: \"Name\",\r\n  guild: \"Gilde\",\r\n  server: \"Server\",\r\n  class: \"Klasse\",\r\n  levelLand: \"Landlevel\",\r\n  levelSea: \"Seelevel\",\r\n}\r\n\r\nexport default strings;","import LocalizedStrings from \"react-localization\";\r\nimport StringsEN from \"./en\";\r\nimport StringsDE from \"./de\";\r\n\r\nconst strings = new LocalizedStrings({\r\n  en: StringsEN,\r\n  de: StringsDE,\r\n})\r\n\r\nexport default strings;","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport { logoutUser, isLoggedIn, getIdentity } from \"../../auth\";\r\nimport {\r\n  Nav,\r\n  Main,\r\n  Footer,\r\n  LinksWrapper,\r\n  Link,\r\n  HeaderBrandLogo,\r\n  NavbarExtension,\r\n  LanguageSelect,\r\n} from \"./LayoutStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst Layout = (props) => {\r\n  const [loggedIn, setLoggedIn] = useState(isLoggedIn());\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\r\n    localStorage.getItem(\"language\") || \"en\"\r\n  );\r\n\r\n  strings.setLanguage(selectedLanguage);\r\n\r\n  const logout = () => {\r\n    logoutUser();\r\n  }\r\n\r\n  const onLanguageChange = (event) => {\r\n    const newLanguage = event.target.value;\r\n    localStorage.setItem(\"language\", newLanguage);\r\n    setSelectedLanguage(newLanguage);\r\n    strings.setLanguage(newLanguage);\r\n    window.location.reload();\r\n  }\r\n\r\n  window.addEventListener(\"storage\", () => setLoggedIn(isLoggedIn()));\r\n\r\n  return (\r\n    <>\r\n      {loggedIn && (\r\n        <NavbarExtension>\r\n          <LinksWrapper>\r\n            <Link to=\"#\" onClick={logout}>{getIdentity().username}</Link>\r\n            <Link to=\"/create_matches/bergruen\">{strings.createMatchesLink}</Link>\r\n            <Link to=\"/players/add\">{strings.addPlayerLink}</Link>\r\n          </LinksWrapper>\r\n        </NavbarExtension>\r\n      )}\r\n      <Nav>\r\n        <RouterLink to=\"/\">\r\n          <HeaderBrandLogo src={getImagePath(\"logo_small.png\")} />\r\n        </RouterLink>\r\n        <LinksWrapper>\r\n          <Link to=\"/ranking/bergruen\">{strings.rankingLink}</Link>\r\n          <Link to=\"/active_matches/bergruen\">{strings.matchesLink}</Link>\r\n        </LinksWrapper>\r\n      </Nav>\r\n\r\n      <Main>{props.children}</Main>\r\n\r\n      <Footer>\r\n        <LinksWrapper>\r\n          <Link to=\"/legal_notice\">{strings.legalNoticeLink}</Link>\r\n          <Link to=\"/privacy_policy\">{strings.privacyPolicyLink}</Link>\r\n          <LanguageSelect onChange={onLanguageChange} value={selectedLanguage}>\r\n            <option value=\"en\">English</option>\r\n            <option value=\"de\">Deutsch</option>\r\n          </LanguageSelect>\r\n        </LinksWrapper>\r\n      </Footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassIcon = styled.img`\r\n  border-radius: 50%;\r\n  width: ${props => props.width}px;\r\n  margin-right: ${props => props.marginRight}px;\r\n  border: 4px solid rgba(202, 202, 202, 0.4);\r\n`\r\n\r\nconst RouterLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: unset;\r\n`\r\n\r\nconst CenteredSpan = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n`\r\n\r\nconst H2 = styled.h2`\r\n  color: #20123a;\r\n  border-bottom: 1px solid #cacaca;\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  flex-flow: ${props => props.flexFlow};\r\n  justify-content: ${props => props.justifyContent};\r\n  align-items: ${props => props.alignItems};\r\n`\r\n\r\nconst Button = styled.button`\r\n  transition: background-color 0.2s;\r\n  transition: border-color 0.1s;\r\n  background: white;\r\n  color: black;\r\n  border: 1px solid #cacaca;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  width: ${props => props.width};\r\n  margin: ${props => props.margin};\r\n  padding: ${props => props.padding};\r\n  font-size: ${props => props.fontSize};\r\n\r\n  &:hover {\r\n    background-color: ${props => props.backgroundColorOnHover};\r\n    border-color: ${props => props.borderColorOnHover};\r\n  }\r\n`\r\n\r\nconst Text = styled.div`\r\n  p, span, ul {\r\n    color: #292f33;\r\n    text-align: justify;\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n    margin: 0px 0px;\r\n    padding: 0px 0px;\r\n\r\n    li:not(:first-child) {\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  ClassIcon,\r\n  RouterLink,\r\n  CenteredSpan,\r\n  H2,\r\n  Flex,\r\n  Button,\r\n  Text,\r\n}\r\n","import React from \"react\";\r\nimport { NavbarExtension as NavbarExtensionStyle, Link } from \"../Layout/LayoutStyles\";\r\nimport { CenteredSpan } from \"./CommonStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst NavbarExtension = ({currentServer, url}) => {\r\n  return (\r\n    <NavbarExtensionStyle>\r\n      <Link\r\n        isactive={(currentServer === \"bergruen\") ? true : false}\r\n        to={`/${url}/bergruen`}\r\n      >\r\n        Bergruen\r\n      </Link>\r\n      <Link\r\n        isactive={(currentServer === \"luxplena\") ? true : false}\r\n        to={`/${url}/luxplena`}\r\n      >\r\n        LuxPlena\r\n      </Link>\r\n    </NavbarExtensionStyle>\r\n  )\r\n}\r\n\r\nconst FetchStateMessage = ({loading, error, children}) => {\r\n  if (loading) {\r\n    return <CenteredSpan>{strings.loadingMessage}</CenteredSpan>\r\n  } else if (error) {\r\n    return <CenteredSpan>{strings.errorMessage}</CenteredSpan>\r\n  } else {\r\n    return children;\r\n  }\r\n}\r\n\r\nexport {\r\n  NavbarExtension,\r\n  FetchStateMessage,\r\n}","import styled from \"styled-components\";\r\n\r\nconst TableWrapper = styled.div`\r\n  overflow-x: auto;\r\n`\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n\r\n  th, td {\r\n    padding: 10px 15px;\r\n  }\r\n`\r\n\r\nconst TableHeader = styled.th`\r\n  text-align: ${props => props.align};\r\n  white-space: nowrap;\r\n`\r\n\r\nconst TableData = styled.td`\r\n  text-align: ${props => props.align};\r\n  white-space: nowrap;\r\n`\r\n\r\nconst TableRow = styled.tr`\r\n  background-color: ${props => props.even ? \"white\" : \"#F8F8F8\"};\r\n`\r\n\r\nexport {\r\n  TableWrapper,\r\n  Table,\r\n  TableHeader,\r\n  TableData,\r\n  TableRow,\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getRanking } from \"../../fetch\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { NavbarExtension, FetchStateMessage} from \"../Common/Common\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport { ClassIcon, RouterLink, CenteredSpan, Flex } from \"../Common/CommonStyles\";\r\nimport {\r\n  TableWrapper,\r\n  Table,\r\n  TableHeader,\r\n  TableData,\r\n  TableRow,\r\n} from \"./RankingStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst Ranking = (props) => {\r\n  document.title = strings.rankingLink;\r\n  const currentServer = props.match.params.server;\r\n  const [players, setPlayers] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setPlayers(null);\r\n    let res;\r\n    getRanking(currentServer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        setHasError(true);\r\n        console.error(json.msg)\r\n      } else {\r\n        setPlayers(json);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [currentServer])\r\n\r\n  return (\r\n    <>\r\n      <NavbarExtension url=\"ranking\" currentServer={currentServer} />\r\n\r\n      <ContentWrapper>\r\n        <FetchStateMessage loading={loading} error={hasError}>\r\n          {(players && players.length > 0) && (\r\n            <TableWrapper>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <TableHeader align=\"center\">{strings.rank}</TableHeader>\r\n                    <TableHeader align=\"center\">{strings.points}</TableHeader>\r\n                    <TableHeader align=\"left\">{strings.name}</TableHeader>\r\n                    <TableHeader align=\"center\">{strings.level}</TableHeader>\r\n                    <TableHeader align=\"center\">{strings.winsLossesDraws}</TableHeader>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {players.sort((a, b) => b.points - a.points).map((player, index) => {\r\n                    let rank = index + 1;\r\n                    let rankColor;\r\n                    switch (rank) {\r\n                      case 1:\r\n                        rankColor = \"#FFD700\";\r\n                        break;\r\n                      case 2:\r\n                        rankColor = \"#C0C0C0\";\r\n                        break;\r\n                      case 3:\r\n                        rankColor = \"#cd7f32\";\r\n                        break;\r\n                      default:\r\n                        rankColor = \"#708090\"; \r\n                    }\r\n\r\n                    // Firefox needs y to be 30, chrome 25.\r\n                    // InstallTrigger is Firefox API for addons\r\n                    const y = typeof InstallTrigger !== 'undefined' ? \"30\" : \"25\";\r\n\r\n                    return (\r\n                      <TableRow key={player.name} even={index % 2}>\r\n                        <TableData align=\"center\">\r\n                          <svg width={50} height={50}>\r\n                            <path d=\"M25,0 L50,25 L25,50 L0,25 L25,0 Z\" fill={rankColor} />\r\n                            <text textAnchor=\"middle\" alignmentBaseline=\"central\" x=\"25\" y={y} fill=\"white\">{rank}</text>\r\n                          </svg>\r\n                        </TableData>\r\n                        <TableData align=\"center\">{player.points}</TableData>\r\n                        <TableData align=\"left\">\r\n                          <Flex flexFlow=\"row\" alignItems=\"center\" >\r\n                            <ClassIcon\r\n                              width={38}\r\n                              marginRight={5}\r\n                              src={getImagePath(`class_icons/male_${player.class.key}.png`)}\r\n                            />\r\n                            <RouterLink\r\n                              to={`/players/${player.server.key}/${player.name}`}\r\n                            >\r\n                              {player.name}\r\n                            </RouterLink>\r\n                          </Flex>\r\n                        </TableData>\r\n                        <TableData align=\"center\">{player.level_land} / {player.level_sea}</TableData>\r\n                        <TableData align=\"center\">{player.wins} : {player.losses} : {player.draws}</TableData>\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </TableWrapper>\r\n          )}\r\n          {(players && players.length === 0) && (\r\n            <CenteredSpan>{strings.noPlayersFound}</CenteredSpan>\r\n          )}\r\n        </FetchStateMessage>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ranking;","import breakpoint from \"../../breakpoint\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Banner = styled.div`\r\n  background-image: url(${getImagePath(\"banner_compressed.jpg\")});\r\n  background-size: cover;\r\n  background-position-y: 40%;\r\n  background-position-x: center;\r\n  width: 100%;\r\n  height: 350px;\r\n  position: relative;\r\n  border-bottom: 1px solid #cacaca;\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-column-gap: 40px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  grid-row: ${props => props.rowS};\r\n  grid-column: ${props => props.startS} / ${props => props.endS};\r\n  ${breakpoint(\"lg\")`\r\n    grid-row: ${props => props.row};\r\n    grid-column: ${props => props.start} / ${props => props.end};\r\n  `}\r\n`\r\n\r\nexport {\r\n  Banner,\r\n  Grid,\r\n  GridItem,\r\n}","import React from \"react\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { H2, Text } from \"../Common/CommonStyles\";\r\nimport {\r\n  Banner,\r\n  Grid,\r\n  GridItem,\r\n} from \"./LandingPageStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst LandingPage = () => {\r\n  document.title = strings.homepage;\r\n  const startDate = new Date(\"Dec 24, 2042 00:00:00\")\r\n\r\n  return (\r\n    <>\r\n      <Banner />\r\n      <ContentWrapper>\r\n        <Grid>\r\n          <GridItem row={1} start={1} end={3} rowS={1} startS={1} endS={2}>\r\n            <H2>{strings.aboutHeader}</H2>\r\n            <Text><p>{strings.formatString(strings.aboutText1, {date: startDate.toLocaleDateString()})}</p></Text>\r\n            <Text>\r\n              <span>{strings.aboutTextChange}</span><br />\r\n              <span>{strings.aboutChange1}</span><br />\r\n              <span>{strings.aboutChange2}</span><br />\r\n              <span>{strings.aboutChange3}</span><br />\r\n            </Text>\r\n          </GridItem>\r\n\r\n          <GridItem row={2} start={1} end={2} rowS={2} startS={1} endS={2}>\r\n            <H2>{strings.rulesHeader}</H2>\r\n            <Text>\r\n              <ul>\r\n                <li><b>1.</b> {strings.rule1}</li>\r\n                <li><b>2.</b> {strings.rule2}</li>\r\n                <li><b>3.</b> {strings.rule3}</li>\r\n                <li><b>4.</b> {strings.rule4}</li>\r\n                <li><b>5.</b> {strings.rule5}</li>\r\n                <li><b>6.</b> {strings.rule6}</li>\r\n                <li><b>7.</b> {strings.rule7}</li>\r\n              </ul>\r\n              <p>{strings.rulesInfoText}</p>\r\n            </Text>\r\n          </GridItem>\r\n\r\n          <GridItem row={2} start={2} end={3} rowS={3} startS={1} endS={2}>\r\n            <H2>{strings.participateHeader}</H2>\r\n            <Text>\r\n              <p>{strings.participateText1}</p>\r\n              <p>{strings.participateText2}</p>\r\n              <p>{strings.participateText3}</p>\r\n              <p>{strings.participateText4}</p>\r\n            </Text>\r\n          </GridItem>\r\n\r\n          <GridItem row={3} start={1} end={3} rowS={4} startS={1} endS={2}>\r\n            <H2>{strings.prizesHeader}</H2>\r\n            <Text>{strings.prizesText}</Text>\r\n          </GridItem>\r\n        </Grid>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LandingPage;","import styled from \"styled-components\";\r\nimport breakpoint from \"../../breakpoint\";\r\nimport { getImagePath } from \"../../helpers\";\r\n\r\nconst Line = styled.hr`\r\n  border: none;\r\n  border-bottom: 1px solid #cacaca;\r\n  margin: 15px 0px;\r\n  width: 100%;\r\n  ${breakpoint(\"md\")`\r\n    width: 50%;\r\n  `}\r\n  ${breakpoint(\"lg\")`\r\n    width: 60%;\r\n  `}\r\n`\r\n\r\nconst VersusWrapper = styled.div`\r\n  background-image: url(${getImagePath(\"swords.png\")});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: 60px 60px;\r\n  padding: 40px 50px;\r\n  ${breakpoint(\"md\")`\r\n    padding: 40px 70px;\r\n  `}\r\n  ${breakpoint(\"lg\")`\r\n    padding: 40px 100px;\r\n  `}\r\n  ${breakpoint(\"xl\")`\r\n    padding: 40px 120px;\r\n  `}\r\n`\r\n\r\nconst VersusText = styled.span`\r\n  color: #292f33;\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n`\r\n\r\nconst PlayerSub = styled.span`\r\n  white-space: nowrap;\r\n  font-size: 11px;\r\n`\r\n\r\nconst EloGain = styled.span`\r\n  color: green;\r\n`\r\n\r\n\r\nexport {\r\n  Line,\r\n  VersusWrapper,\r\n  VersusText,\r\n  PlayerSub,\r\n  EloGain,\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getActiveMatches, setActiveMatchWinner, deleteActiveMatches } from \"../../fetch\";\r\nimport { ContentWrapper} from \"../Layout/LayoutStyles\";\r\nimport { NavbarExtension, FetchStateMessage } from \"../Common/Common\";\r\nimport { calculateEloGain } from \"../../helpers\";\r\nimport { ClassIcon, RouterLink, CenteredSpan, Flex, Button } from \"../Common/CommonStyles\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport { isLoggedIn } from \"../../auth\";\r\nimport {\r\n  Line,\r\n  VersusWrapper,\r\n  VersusText,\r\n  PlayerSub,\r\n  EloGain,\r\n} from \"./ActiveMatchesStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst Player = ({player, p2_points}) => {\r\n  return (\r\n    <Flex\r\n      flexFlow=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <ClassIcon\r\n        width={50}\r\n        marginRight={0}\r\n        src={getImagePath(`class_icons/male_${player.class.key}.png`)}\r\n      />\r\n      <RouterLink to={`/players/${player.server.key}/${player.name}`}>\r\n        {player.name}\r\n      </RouterLink>\r\n      <Flex flexFlow=\"column\" alignItems=\"center\">\r\n        <PlayerSub>\r\n          {strings.points}: {player.points}\r\n          <EloGain> (+{calculateEloGain(player.points, p2_points)})</EloGain>\r\n        </PlayerSub>\r\n        <PlayerSub>{strings.level}: {player.level_land} / {player.level_sea}</PlayerSub>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\n\r\nconst ActiveMatches = (props) => {\r\n  document.title = strings.matchesLink;\r\n\r\n  const currentServer = props.match.params.server;\r\n  const [matches, setMatches] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setMatches(null);\r\n\r\n    let res;\r\n    getActiveMatches(currentServer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        setHasError(true);\r\n        console.error(json.msg)\r\n      } else {\r\n        setMatches(json);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [currentServer])\r\n\r\n  const setWinner = (matchId, winner) => {\r\n    /*\r\n      0: Player 1\r\n      1: Player 2\r\n      2: Draw\r\n    */\r\n    let res;\r\n    setActiveMatchWinner(currentServer, matchId, winner).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg)\r\n      } else {\r\n        // delete match from matches\r\n        setMatches(matches.filter(m => m.id !== matchId))\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteAllMatches = () => {\r\n    if (!window.confirm(strings.deleteMatchesConfirm1)) {\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(strings.deleteMatchesConfirm2)) {\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(strings.deleteMatchesConfirm3)) {\r\n      return;\r\n    }\r\n\r\n    let res;\r\n    deleteActiveMatches(currentServer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg);\r\n      } else {\r\n        setMatches([]);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavbarExtension url=\"active_matches\" currentServer={currentServer} />\r\n\r\n      <ContentWrapper>\r\n        <FetchStateMessage loading={loading} error={hasError}>\r\n          {(matches && matches.length > 0) && (\r\n            <Flex\r\n              flexFlow=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {isLoggedIn() && (\r\n                <Button\r\n                  padding=\"5px 15px\"\r\n                  backgroundColorOnHover=\"tomato\"\r\n                  broderColorOnHover=\"orangered\"\r\n                  margin=\"0px 0px 20px 0px\"\r\n                  onClick={deleteAllMatches}\r\n                >\r\n                  {strings.deleteMatchesButton}\r\n                </Button>\r\n              )}\r\n              {matches.map((match, index) => {\r\n                return (\r\n                  <React.Fragment key={match.id}>\r\n                    {index !== 0 && (\r\n                      <Line />\r\n                    )}\r\n                    <Flex flexFlow=\"row\" alignItems=\"center\">\r\n                      <Player player={match.player_1} p2_points={match.player_2.points} />\r\n              \r\n                      <VersusWrapper>\r\n                        <VersusText>VS</VersusText>\r\n                      </VersusWrapper>\r\n              \r\n                      <Player player={match.player_2} p2_points={match.player_1.points} />\r\n                    </Flex>\r\n                    {isLoggedIn() && (\r\n                      <Flex flexFlow=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n                        <Button\r\n                          backgroundColorOnHover=\"#00cc6d\"\r\n                          borderColorOnHover=\"green\"\r\n                          padding=\"5px 15px\"\r\n                          margin=\"0px 10px\"\r\n                          onClick={() => setWinner(match.id, 0)}\r\n                        >\r\n                          {match.player_1.name}\r\n                        </Button>\r\n                        <Button\r\n                          backgroundColorOnHover=\"orange\"\r\n                          borderColorOnHover=\"darkorange\"\r\n                          padding=\"5px 15px\"\r\n                          margin=\"0px 10px\"\r\n                          onClick={() => setWinner(match.id, 2)}\r\n                        >\r\n                          {strings.draw}\r\n                        </Button>\r\n                        <Button\r\n                          backgroundColorOnHover=\"#00cc6d\"\r\n                          borderColorOnHover=\"green\"\r\n                          padding=\"5px 15px\"\r\n                          margin=\"0px 10px\"\r\n                          onClick={() => setWinner(match.id, 1)}\r\n                        >\r\n                          {match.player_2.name}\r\n                        </Button>\r\n                      </Flex>\r\n                    )}\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n            </Flex>\r\n          )}\r\n          {(matches && matches.length === 0) && (\r\n            <CenteredSpan>{strings.noMatchesFound}</CenteredSpan>\r\n          )}\r\n        </FetchStateMessage>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ActiveMatches;\r\n","import styled from \"styled-components\";\r\nimport breakpoint from \"../../breakpoint\";\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-column-gap: 40px;\r\n  grid-row-gap: 40px;\r\n  grid-template-columns: 100%;\r\n  ${breakpoint(\"sm\")`\r\n    grid-template-columns: 30% 65%;\r\n  `}\r\n`\r\n\r\nconst PlayerInfoColumn = styled.div`\r\n  grid-column: 1;\r\n`\r\n\r\nconst PlayerInfoName = styled.span`\r\n  font-size: 18px;\r\n  letter-spacing: 1.5px;\r\n`\r\n\r\nconst PlayerInfoTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 5px;\r\n\r\n  td {\r\n    padding: 5px 10px;\r\n  }\r\n`\r\n\r\nconst MatchHistoryColumn = styled.div`\r\n  grid-column: 1;\r\n  ${breakpoint(\"sm\")`\r\n    grid-column: 2;\r\n  `}\r\n  display: flex;\r\n  flex-flow: column;\r\n  overflow-x: auto;\r\n`\r\n\r\nconst MatchHistoryTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n\r\n  td, th {\r\n    text-align: left;\r\n    padding: 10px 15px;\r\n  }\r\n`\r\n\r\nconst ResultSpan = styled.span`\r\n  color: ${props => props.color};\r\n`\r\n\r\nconst TableRow = styled.tr`\r\n  background-color: ${props => props.even ? \"white\" : \"#F8F8F8\"};\r\n`\r\n\r\nexport {\r\n  Grid,\r\n  PlayerInfoColumn,\r\n  PlayerInfoTable,\r\n  PlayerInfoName,\r\n  MatchHistoryColumn,\r\n  ResultSpan,\r\n  TableRow,\r\n  MatchHistoryTable,\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getPlayer, updateMatchWinner } from \"../../fetch\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport { FetchStateMessage } from \"../Common/Common\";\r\nimport { Flex, ClassIcon, RouterLink, CenteredSpan, H2, Button } from \"../Common/CommonStyles\";\r\nimport {\r\n  Grid,\r\n  PlayerInfoColumn,\r\n  PlayerInfoTable,\r\n  PlayerInfoName,\r\n  MatchHistoryColumn,\r\n  ResultSpan,\r\n  TableRow,\r\n  MatchHistoryTable\r\n} from \"./PlayerProfileStyles\";\r\nimport { isLoggedIn } from \"../../auth\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst PlayerProfile = (props) => {\r\n  const currentServer = props.match.params.server;\r\n  const name = props.match.params.name;\r\n\r\n  const [player, setPlayer] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const [editId, setEditId] = useState(null);\r\n  const [selectedWinner, setSelectedWinner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setPlayer(null);\r\n\r\n    let res;\r\n    getPlayer(currentServer, name).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        setHasError(true);\r\n        console.error(json.msg)\r\n      } else {\r\n        setPlayer(json);\r\n        document.title = strings.formatString(strings.playerProfile, {\r\n          name: json.name,\r\n        });\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [currentServer, name])\r\n\r\n  const enableMatchEdit = (match, opponent) => {\r\n    // A match can be edited if it is the last one of each player\r\n    // Check if its the last one of the current player profile\r\n    const playerMatchIds = [];\r\n    player.matches.forEach(m => playerMatchIds.push(m.id));\r\n    const latestMatchId = Math.max(...playerMatchIds);\r\n\r\n    if (match.id !== latestMatchId) {\r\n      alert(strings.notLatestMatchError);\r\n      return;\r\n    }\r\n\r\n    // get second player matches\r\n    getPlayer(currentServer, opponent.name)\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      const opponentMatchIds = [];\r\n      json.matches.forEach(m => opponentMatchIds.push(m.id));\r\n      const opponentLatestMatchId = Math.max(...opponentMatchIds);\r\n\r\n      if (opponentLatestMatchId === match.id) {\r\n        setEditId(match.id);\r\n        setSelectedWinner(match.winner.value.toString());\r\n      } else {\r\n        alert(strings.notLatestMatchError);\r\n      }\r\n    });\r\n  }\r\n\r\n  const onWinnerChange = (event) => {\r\n    setSelectedWinner(event.target.value);\r\n    const newWinner = parseInt(event.target.value);\r\n  \r\n    let res;\r\n    updateMatchWinner(editId, newWinner).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json();\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg);\r\n      } else {\r\n        // update local list to reflect changes by server\r\n        setPlayer(json.user)\r\n        setEditId(null);\r\n        setSelectedWinner(null);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <FetchStateMessage loading={loading} error={hasError}>\r\n        {player && (\r\n          <Grid>\r\n            <PlayerInfoColumn>\r\n              <Flex flexFlow=\"row\" alignItems=\"center\">\r\n                <ClassIcon\r\n                  width={50}\r\n                  marginRight={5}\r\n                  src={getImagePath(`class_icons/male_${player.class.key}.png`)}\r\n                />\r\n                <PlayerInfoName>{player.name}</PlayerInfoName>\r\n              </Flex>\r\n\r\n              <PlayerInfoTable>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{strings.server}</td>\r\n                    <td>{player.server.value}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.level}</td>\r\n                    <td>{player.level_land} / {player.level_sea}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.guild}</td>\r\n                    <td>{player.guild || \"/\"}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.points}</td>\r\n                    <td>{player.points}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.wins}</td>\r\n                    <td>{player.wins}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.losses}</td>\r\n                    <td>{player.losses}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.draws}</td>\r\n                    <td>{player.draws}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </PlayerInfoTable>\r\n            </PlayerInfoColumn>\r\n\r\n            <MatchHistoryColumn>\r\n              <H2>{strings.matchesHeader}</H2>\r\n              {(player.matches.length >= 1)\r\n              ? (\r\n                <MatchHistoryTable>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{strings.opponent}</th>\r\n                      <th>{strings.result}</th>\r\n                      <th>{strings.date}</th>\r\n                      {isLoggedIn() && (\r\n                        <th>{strings.edit}</th>\r\n                      )}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {player.matches.sort((a, b) => b.id - a.id).map((match, index) => {\r\n                      let opponent;\r\n                      let playerKey;\r\n                      if (match.player_1.name === player.name) {\r\n                        opponent = match.player_2;\r\n                        playerKey = \"player_1\";\r\n                      } else {\r\n                        opponent = match.player_1;\r\n                        playerKey = \"player_2\";\r\n                      }\r\n\r\n                      let result;\r\n                      let pointsChange = match[playerKey].points_change.toString();\r\n                      let pointsOperator = (pointsChange > 0) ? \"+\" : \"\";\r\n\r\n                      if (match.winner.value === 2) {\r\n                        result = <span>{strings.draw} (<ResultSpan color=\"orange\">{`${pointsOperator}${pointsChange}`}</ResultSpan>)</span>\r\n                      } else if ((match.winner.value === 0 && playerKey === \"player_1\") || (match.winner.value === 1 && playerKey === \"player_2\")) {\r\n                        result = <span>{strings.win} (<ResultSpan color=\"green\">{`${pointsOperator}${pointsChange}`}</ResultSpan>)</span>\r\n                      } else {\r\n                        result = <span>{strings.loss} (<ResultSpan color=\"red\">{`${pointsOperator}${pointsChange}`}</ResultSpan>)</span>\r\n                      }\r\n\r\n                      // edit is enabled for this match\r\n                      if (editId === match.id) {\r\n                        console.log(selectedWinner);\r\n                        result = (\r\n                          <select\r\n                            value={selectedWinner}\r\n                            onChange={onWinnerChange}\r\n                          >\r\n                            <option value=\"0\">{match.player_1.name} {strings.win}</option>\r\n                            <option value=\"1\">{match.player_2.name} {strings.win}</option>\r\n                            <option value=\"2\">{strings.draw}</option>\r\n                          </select>\r\n                        )\r\n                      }\r\n\r\n                      const matchDate = new Date(match.date).toLocaleString();\r\n\r\n                      return (\r\n                        <TableRow even={index % 2}>\r\n                          <td>\r\n                            <Flex flexFlow=\"row\" alignItems=\"center\">\r\n                              <ClassIcon\r\n                                width={38}\r\n                                marginRight={5}\r\n                                src={getImagePath(`class_icons/male_${opponent.class.key}.png`)}\r\n                              />\r\n                              <RouterLink to={`/players/${match.server.key}/${opponent.name}`}>{opponent.name}</RouterLink>\r\n                            </Flex>\r\n                          </td>\r\n                          <td>{result}</td>\r\n                          <td>{matchDate}</td>\r\n                          {isLoggedIn() && (\r\n                            <td>\r\n                              <Button\r\n                                backgroundColorOnHover=\"#00cc6d\"\r\n                                borderColorOnHover=\"green\"\r\n                                padding=\"3px 10px\"\r\n                                onClick={() => enableMatchEdit(match, opponent)}\r\n                              >\r\n                                {strings.edit}\r\n                              </Button>\r\n                            </td>\r\n                          )}\r\n                        </TableRow>\r\n                      )\r\n                    })}\r\n                  </tbody>\r\n                </MatchHistoryTable>\r\n              )\r\n              : (\r\n                <CenteredSpan>{strings.noMatchesPlayed}</CenteredSpan>\r\n              )}\r\n            </MatchHistoryColumn>\r\n          </Grid>\r\n        )}\r\n      </FetchStateMessage>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default PlayerProfile;","import React, { useState } from \"react\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { login } from \"../../fetch\";\r\nimport { loginUser } from \"../../auth\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst Login = (props) => {\r\n  document.title = strings.login;\r\n\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const loginRequest = (event) => {\r\n    event.preventDefault();\r\n\r\n    let res;\r\n    login(username, password).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json();\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg);\r\n      } else {\r\n        loginUser(json.access_token);\r\n        props.history.push(\"/\")\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <form onSubmit={loginRequest}>\r\n        <input\r\n          value={username}\r\n          onChange={e => setUsername(e.target.value)}\r\n          placeholder={strings.username}\r\n        />\r\n\r\n        <input\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          placeholder={strings.password}\r\n        />\r\n\r\n        <button type=\"submit\">{strings.login}</button>\r\n      </form>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default Login;","import styled from \"styled-components\";\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-column-gap: 50px;\r\n`\r\n\r\nconst SearchPlayerColumn = styled.div`\r\n  grid-column: 1 / 2;\r\n  grid-row: 1 / 2;\r\n`\r\n\r\nconst AddedPlayerColumn = styled.div`\r\n  grid-column: 2 / 3;\r\n  grid-row: 1 / 3;\r\n`\r\n\r\nconst ChatlogPlayerColumn = styled.div`\r\n  grid-column: 1 / 2;\r\n  grid-row: 2 / 3;\r\n`\r\n\r\nconst ChatlogWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  * {\r\n    flex-grow: 1;\r\n  }\r\n`\r\n\r\nconst AddedPlayerList = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  > div:not(:first-child) {\r\n    border-top: 1px solid #cacaca;\r\n  }\r\n`\r\n\r\nconst SearchResults = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n\r\n  > div:not(:first-child) {\r\n    border-top: 1px solid #cacaca;\r\n  }\r\n`\r\n\r\nconst PlayerWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 5px 0px;\r\n\r\n  &:hover {\r\n    background-color: #F8F8F8;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  border-radius: 5px;\r\n  border: 1px solid #cacaca;  \r\n  padding: 5px 10px;\r\n`\r\n\r\nconst KeywordInput = styled.input`\r\n  border-radius: 5px;\r\n  border: 1px solid #cacaca;  \r\n  padding: 5px 10px;\r\n`\r\n\r\nconst SearchInputWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n  > input {\r\n    flex-grow: 1;\r\n  }\r\n`\r\n\r\nconst ChatlogTextArea = styled.textarea`\r\n  height: 400px;\r\n  border-radius: 5px;\r\n  border: 1px solid #cacaca;\r\n  margin-top: 4px;\r\n`\r\n\r\nexport {\r\n  Grid,\r\n  SearchPlayerColumn,\r\n  AddedPlayerColumn,\r\n  ChatlogPlayerColumn,\r\n  ChatlogWrapper,\r\n  AddedPlayerList,\r\n  SearchResults,\r\n  PlayerWrapper,\r\n  SearchInput,\r\n  KeywordInput,\r\n  SearchInputWrapper,\r\n  ChatlogTextArea,\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getPlayers, createMatches } from \"../../fetch\";\r\nimport { ContentWrapper} from \"../Layout/LayoutStyles\";\r\nimport { NavbarExtension, FetchStateMessage } from \"../Common/Common\";\r\nimport { H2, ClassIcon, Button } from \"../Common/CommonStyles\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport {\r\n  Grid,\r\n  SearchPlayerColumn,\r\n  AddedPlayerColumn,\r\n  ChatlogPlayerColumn,\r\n  ChatlogWrapper,\r\n  AddedPlayerList,\r\n  SearchResults,\r\n  PlayerWrapper,\r\n  SearchInput,\r\n  KeywordInput,\r\n  SearchInputWrapper,\r\n  ChatlogTextArea,\r\n} from \"./CreateMatchesStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst CreateMatches = (props) => {\r\n  document.title = strings.createMatchesLink;\r\n\r\n  const currentServer = props.match.params.server;\r\n  const [players, setPlayers] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [addedPlayers, setAddedPlayers] = useState([]);\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [chatlog, setChatlog] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setPlayers(null);\r\n    setSearchResults([]);\r\n    setAddedPlayers([]);\r\n\r\n    let res;\r\n    getPlayers(currentServer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg)\r\n      } else {\r\n        setPlayers(json);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [currentServer])\r\n\r\n  const onSearch = (event) => {\r\n    setSearchString(event.target.value);\r\n  \r\n    if (event.target.value.length <= 1) {\r\n      setSearchResults([]);\r\n    } else {\r\n      const matchingPlayers = players.filter(p => p.name.toLowerCase().includes(event.target.value.toLowerCase()));\r\n      setSearchResults(matchingPlayers);\r\n    }\r\n  }\r\n\r\n  const onSearchKeyUp = (event) => {\r\n    if (event.keyCode === 13) { // enter\r\n      event.preventDefault();\r\n      addPlayer(searchResults[0] || null)\r\n    }\r\n  }\r\n\r\n  const addPlayer = (player) => {\r\n    if (!addedPlayers.includes(player) && player !== null) {\r\n      setAddedPlayers([...addedPlayers, player]);\r\n    }\r\n    setSearchResults([]);\r\n    setSearchString(\"\");\r\n  }\r\n\r\n  const removePlayer = (player) => {\r\n    setAddedPlayers(addedPlayers.filter(p => p !== player));\r\n  }\r\n\r\n  const parseChatlog = () => {\r\n    const regex = new RegExp(`(\\\\w{1,13}):\\\\s(${keyword})$`, \"i\")\r\n\r\n    const notFound = [];\r\n    const playerObjects = [];\r\n\r\n    chatlog.split(\"\\n\").forEach(line => {\r\n      const match = line.trimRight().match(regex);\r\n      if (match) {\r\n        const playerName = match[1];\r\n        const playerObj = players.filter(p => p.name === playerName)[0] || null;\r\n\r\n        if (playerObj && !addedPlayers.includes(playerObj)) {\r\n          playerObjects.push(playerObj);\r\n        } else if (playerObj === null) {\r\n          notFound.push(playerName);\r\n        }\r\n      }\r\n    })\r\n\r\n    setAddedPlayers([...addedPlayers, ...playerObjects]);\r\n    if (notFound.length >= 1) {\r\n      alert(strings.formatString(strings.notFound, {\r\n        names: notFound.toString(),\r\n      }))\r\n    }\r\n  }\r\n\r\n  const startMatches = () => {\r\n    const ids = [];\r\n    addedPlayers.forEach(p => ids.push(p.id));\r\n\r\n    if (window.confirm(strings.startMatchesConfirm)) {\r\n      createMatches(currentServer, ids).then(res => {\r\n        if (res.status === 201) {\r\n          props.history.push(`/active_matches/${currentServer}`)\r\n        } else if (res.status === 423) {\r\n          alert(strings.alreadyActiveMatchesError)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavbarExtension url=\"create_matches\" currentServer={currentServer} />\r\n\r\n      <ContentWrapper>\r\n        <FetchStateMessage loading={loading} error={false}>\r\n          <Grid>\r\n            <SearchPlayerColumn>\r\n              <H2>{strings.addPlayerHeader}</H2>\r\n              <SearchInputWrapper>\r\n                <SearchInput\r\n                  type=\"text\"\r\n                  value={searchString}\r\n                  onChange={onSearch}\r\n                  onKeyUp={onSearchKeyUp}\r\n                  placeholder={strings.searchPlayerPlaceholder}\r\n                />\r\n              </SearchInputWrapper>\r\n              <SearchResults>\r\n                {searchResults.sort((a, b) => a.name.length - b.name.length).map(player => {\r\n                  return (\r\n                    <PlayerWrapper onClick={() => addPlayer(player)}>\r\n                      <ClassIcon\r\n                        width={38}\r\n                        marginRight={5}\r\n                        src={getImagePath(`class_icons/male_${player.class.key}.png`)}\r\n                      />\r\n                      <span>{player.name}</span>\r\n                    </PlayerWrapper>\r\n                  )\r\n                })}\r\n              </SearchResults>\r\n            </SearchPlayerColumn>\r\n\r\n            <ChatlogPlayerColumn>\r\n              <H2>{strings.addPlayerChatlogHeader}</H2>\r\n              <ChatlogWrapper>\r\n                <KeywordInput\r\n                  placeholder={strings.keywordPlaceholder}\r\n                  value={keyword}\r\n                  onChange={e => setKeyword(e.target.value)}\r\n                />\r\n                <ChatlogTextArea\r\n                  value={chatlog}\r\n                  onChange={e => setChatlog(e.target.value)}\r\n                />\r\n                <Button\r\n                  backgroundColorOnHover=\"lightblue\"\r\n                  borderColorOnHover=\"skyblue\"\r\n                  padding=\"5px 15px\"\r\n                  onClick={parseChatlog}\r\n                >\r\n                  {strings.parseButton}\r\n                </Button>\r\n              </ChatlogWrapper>\r\n            </ChatlogPlayerColumn>\r\n\r\n            <AddedPlayerColumn>\r\n              <H2>{strings.players} ({addedPlayers.length})</H2>\r\n              <AddedPlayerList>\r\n                {addedPlayers.map(player => {\r\n                    return (\r\n                      <PlayerWrapper onClick={() => removePlayer(player)}>\r\n                        <ClassIcon\r\n                          width={38}\r\n                          marginRight={5}\r\n                          src={getImagePath(`class_icons/male_${player.class.key}.png`)}\r\n                        />\r\n                        <span>{player.name}</span>\r\n                      </PlayerWrapper>\r\n                    )\r\n                  })}\r\n              </AddedPlayerList>\r\n            </AddedPlayerColumn>\r\n          </Grid>\r\n          <Button\r\n            backgroundColorOnHover=\"#00cc6d\"\r\n            borderColorOnHover=\"green\"\r\n            padding=\"5px 15px\"\r\n            margin=\"20px 0px\"\r\n            width=\"100%\"\r\n            fontSize=\"18px\"\r\n            onClick={startMatches}\r\n          >\r\n            {strings.startMatchesButton}\r\n          </Button>\r\n        </FetchStateMessage>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateMatches;","import React from \"react\";\r\nimport { H2, Text } from \"../Common/CommonStyles\"\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst PrivacyPolicy = () => {\r\n  document.title = strings.privacyPolicyLink;\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <H2>{strings.privacyPolicyHeader}</H2>\r\n      <Text>{strings.privacyPolicyText}</Text>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default PrivacyPolicy;","import React from \"react\";\r\nimport { H2, Text } from \"../Common/CommonStyles\"\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst LegalNotice = () => {\r\n  document.title = strings.legalNoticeLink;\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <H2>Legal Notice</H2>\r\n      <Text>\r\n        GIIKU GAMES GmbH is a company incorporated under German law.<br />\r\n        Mailing Address<br />\r\n        GIIKU GAMES GmbH<br />\r\n        Rehleitenweg 32b<br />\r\n        83026 Rosenheim<br />\r\n        Germany\r\n      </Text>\r\n\r\n      <H2>Corporate information</H2>\r\n      <Text>\r\n        Managing Director: Achim Kaspers<br />\r\n        Court of registry: district court of Traunstein<br />\r\n        Trade register number: HRB 27763<br />\r\n        VAT-ID.: DE323063583<br />\r\n        <br />\r\n        Phone: +49 (0) 89 / 210 205 715<br />\r\n        Fax: +49 (0) 89 / 210 205 799<br />\r\n        <br />\r\n        E-Mail:<br />\r\n        info (at) giikugames.com<br />\r\n        press (at) giikugames.com <br />\r\n      </Text>\r\n\r\n      <H2>Disclaimer</H2>\r\n      <Text>\r\n        Although every effort is made to present current and accurate information, we cannot assume responsibility for information from external links. The author of each web page is solely responsible for the content of that page. \r\n      </Text>\r\n\r\n      <H2>Content</H2>\r\n      <Text>\r\n        The author reserves the right not to be responsible for the topicality, correctness, completeness or quality of the information provided.<br />\r\n        Liability claims regarding damage caused by the use of any information provided, including any kind of information which is incomplete or incorrect, will therefore be rejected.\r\n      </Text>\r\n\r\n      <H2>Referrals and links</H2>\r\n      <Text>\r\n        The author is not responsible for any contents linked or referred to from his pages unless he has full knowledge of illegal contents and would be able to prevent the visitors of his site from viewing those pages.<br />\r\n        If any damage occurs by the use of information presented there, only the author of the respective pages might be liable, not the one who has linked to these pages.<br />\r\n        Furthermore the author is not liable for any postings or messages published by users of discussion boards, guestbooks or mailinglists provided on his page.<br />\r\n      </Text>\r\n\r\n      <H2>Copyright</H2>\r\n      <Text>\r\n        The author intended not to use any copyrighted material for the publication or, if not possible, to indicate the copyright of the respective object.<br />\r\n        The copyright for any material created by the author is reserved. Any duplication or use of objects such as diagrams, sounds or texts in other electronic or printed publications is not permitted without the author's agreement.<br /> \r\n      </Text>\r\n\r\n      <H2>Legal Validity of this Disclaimer</H2>\r\n      <Text>\r\n        This disclaimer is to be regarded as part of the internet publication which you were referred from. If sections or individual terms of this statement are not legal or correct, the content or validity of the other parts remain uninfluenced by this fact. \r\n      </Text>\r\n\r\n      <Text>\r\n        © 2019 GIIKU GAMES GmbH (limited liability)<br/>\r\n        All rights reserved.\r\n      </Text>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default LegalNotice;","import styled from \"styled-components\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-flow: row;\r\n  padding: 15px 20px;\r\n\r\n  > input, select {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  > label {\r\n    margin-right: 20px;\r\n  }\r\n`\r\n\r\nconst TextInput = styled.input`\r\n  border: 1px solid #cacaca;\r\n  border-radius: 4px;\r\n  padding: 5px 10px;\r\n`\r\n\r\nconst Select = styled.select`\r\n  border: 1px solid #cacaca;\r\n  border-radius: 4px;\r\n  padding: 5px 10px;\r\n`\r\n\r\nexport {\r\n  InputGroup,\r\n  TextInput,\r\n  Select\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getPlayer, updatePlayer } from \"../../fetch\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { FetchStateMessage } from \"../Common/Common\";\r\nimport { Button } from \"../Common/CommonStyles\";\r\nimport {\r\n  InputGroup,\r\n  TextInput,\r\n  Select\r\n} from \"./PlayerEditStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst PlayerEdit = (props) => {\r\n  document.title = strings.playerEdit;\r\n\r\n  const currentServer = props.match.params.server;\r\n  const currentPlayerName = props.match.params.name;\r\n\r\n  const [player, setPlayer] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const [levelLand, setLevelLand] = useState(null);\r\n  const [levelSea, setLevelSea] = useState(null);\r\n  const [characterClass, setCharacterClass] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let res;\r\n    getPlayer(currentServer, currentPlayerName).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json();\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        setHasError(true);\r\n        console.error(json.msg);\r\n      } else {\r\n        setPlayer(json);\r\n        setLevelLand(json.level_land);\r\n        setLevelSea(json.level_sea);\r\n        setCharacterClass(json.class.key);\r\n      }\r\n      setLoading(false);\r\n    })\r\n\r\n  }, [currentServer, currentPlayerName])\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPlayer = {\r\n      name: player.name,\r\n      guild: player.guild,\r\n      level_land: parseInt(levelLand),\r\n      level_sea: parseInt(levelSea),\r\n      character_class: characterClass,\r\n      server: player.server.key,\r\n      points: player.points,\r\n      wins: player.wins,\r\n      losses: player.losses,\r\n      draws: player.draws,\r\n    };\r\n\r\n    let res;\r\n    updatePlayer(currentServer, currentPlayerName, newPlayer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json();\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg);\r\n      } else {\r\n        props.history.push(`/players/${currentServer}/${currentPlayerName}`);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <FetchStateMessage loading={loading} error={hasError}>\r\n        {player && (\r\n          <form onSubmit={onSubmit}>\r\n            <InputGroup>\r\n              <label>{strings.name}</label>\r\n              <TextInput disabled value={player.name} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.server}</label>\r\n              <Select disabled value={player.server}>\r\n                <option value=\"bergruen\">Bergruen</option>\r\n                <option value=\"luxplena\">LuxPlena</option>\r\n              </Select>\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.class}</label>\r\n              <Select value={characterClass} onChange={e => setCharacterClass(e.target.value)}>\r\n                <option value=\"noble\">Noble</option>\r\n                <option value=\"magic_knight\">Magic Knight</option>\r\n                <option value=\"court_magician\">Court Magician</option>\r\n\r\n                <option value=\"saint\">Saint</option>\r\n                <option value=\"priest\">Priest</option>\r\n                <option value=\"shaman\">Shaman</option>\r\n\r\n                <option value=\"mercenary\">Mercenary</option>\r\n                <option value=\"guardian_swordsman\">Guardian Swordsman</option>\r\n                <option value=\"gladiator\">Gladiator</option>\r\n\r\n                <option value=\"explorer\">Explorer</option>\r\n                <option value=\"sniper\">Sniper</option>\r\n                <option value=\"excavator\">Excavator</option>\r\n              </Select>\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.guild}</label>\r\n              <TextInput disabled value={player.guild} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.levelLand}</label>\r\n              <TextInput value={levelLand} onChange={e => setLevelLand(e.target.value)} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.levelSea}</label>\r\n              <TextInput value={levelSea} onChange={e => setLevelSea(e.target.value)} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.points}</label>\r\n              <TextInput disabled value={player.points} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.wins}</label>\r\n              <TextInput disabled value={player.wins} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.losses}</label>\r\n              <TextInput disabled value={player.losses} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.draws}</label>\r\n              <TextInput disabled value={player.draws} />\r\n            </InputGroup>\r\n\r\n            <Button\r\n              backgroundColorOnHover=\"#00cc6d\"\r\n              borderColorOnHover=\"green\"\r\n              padding=\"5px 15px\"\r\n              margin=\"0px 10px\"\r\n              type=\"submit\"\r\n            >\r\n              {strings.saveButton}\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </FetchStateMessage>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default PlayerEdit;","import React, { useState } from \"react\";\r\nimport { addPlayer } from \"../../fetch\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { Button } from \"../Common/CommonStyles\";\r\nimport {\r\n  InputGroup,\r\n  TextInput,\r\n  Select\r\n} from \"./PlayerEditStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst PlayerAdd = (props) => {\r\n  document.title = strings.addPlayerLink;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [guild, setGuild] = useState(\"\");\r\n  const [levelLand, setLevelLand] = useState(\"1\");\r\n  const [levelSea, setLevelSea] = useState(\"1\");\r\n  const [characterClass, setCharacterClass] = useState(\"noble\");\r\n  const [server, setServer] = useState(\"bergruen\");\r\n\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPlayer = {\r\n      name: name,\r\n      guild: guild || null,\r\n      level_land: parseInt(levelLand),\r\n      level_sea: parseInt(levelSea),\r\n      character_class: characterClass,\r\n      server: server,\r\n    };\r\n\r\n    let res;\r\n    addPlayer(server, newPlayer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json();\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg);\r\n      } else {\r\n        props.history.push(`/players/${server}/${name}`);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <form onSubmit={onSubmit}>\r\n        <InputGroup>\r\n          <label>{strings.name}</label>\r\n          <TextInput value={name} onChange={e => setName(e.target.value)} />\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <label>{strings.server}</label>\r\n          <Select value={server} onChange={e => setServer(e.target.value)} >\r\n            <option value=\"bergruen\">Bergruen</option>\r\n            <option value=\"luxplena\">LuxPlena</option>\r\n          </Select>\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <label>{strings.class}</label>\r\n          <Select value={characterClass} onChange={e => setCharacterClass(e.target.value)}>\r\n            <option value=\"noble\">Noble</option>\r\n            <option value=\"magic_knight\">Magic Knight</option>\r\n            <option value=\"court_magician\">Court Magician</option>\r\n\r\n            <option value=\"saint\">Saint</option>\r\n            <option value=\"priest\">Priest</option>\r\n            <option value=\"shaman\">Shaman</option>\r\n\r\n            <option value=\"mercenary\">Mercenary</option>\r\n            <option value=\"guardian_swordsman\">Guardian Swordsman</option>\r\n            <option value=\"gladiator\">Gladiator</option>\r\n\r\n            <option value=\"explorer\">Explorer</option>\r\n            <option value=\"sniper\">Sniper</option>\r\n            <option value=\"excavator\">Excavator</option>\r\n          </Select>\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <label>{strings.guild}</label>\r\n          <TextInput value={guild} onChange={e => setGuild(e.target.value)} />\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <label>{strings.levelLand}</label>\r\n          <TextInput value={levelLand} onChange={e => setLevelLand(e.target.value)} />\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <label>{strings.levelSea}</label>\r\n          <TextInput value={levelSea} onChange={e => setLevelSea(e.target.value)} />\r\n        </InputGroup>\r\n\r\n        <Button\r\n          backgroundColorOnHover=\"#00cc6d\"\r\n          borderColorOnHover=\"green\"\r\n          padding=\"5px 15px\"\r\n          margin=\"0px 10px\"\r\n          type=\"submit\"\r\n        >\r\n          {strings.addButton}\r\n        </Button>\r\n      </form>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default PlayerAdd;","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport Ranking from \"./components/Ranking/Ranking\";\r\nimport LandingPage from \"./components/LandingPage/LandingPage\";\r\nimport ActiveMatches from \"./components/ActiveMatches/ActiveMatches\";\r\nimport PlayerProfile from \"./components/PlayerProfile/PlayerProfile\";\r\nimport Login from \"./components/Login/Login\";\r\nimport CreateMatches from \"./components/CreateMatches/CreateMatches\";\r\nimport PrivacyPolicy from \"./components/FooterPages/PrivacyPolicy\";\r\nimport LegalNotice from \"./components/FooterPages/LegalNotice\";\r\nimport PlayerEdit from \"./components/PlayerEdit/PlayerEdit\";\r\nimport PlayerAdd from \"./components/PlayerEdit/AddPlayer\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n\r\nbody {\r\n  overflow-y: scroll;\r\n}\r\n\r\n#root {\r\n  display: flex;\r\n  flex-flow: column;\r\n  height: 100% !important;\r\n}\r\n\r\nmain {\r\n  flex-grow: 1;\r\n}\r\n`\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route path=\"/ranking/:server(bergruen|luxplena)\" component={Ranking} />\r\n\r\n          <Route path=\"/active_matches/:server(bergruen|luxplena)\" component={ActiveMatches} />\r\n          \r\n          <Route path=\"/create_matches/:server(bergruen|luxplena)\" component={CreateMatches} />\r\n\r\n          <Route exact path=\"/players/:server(bergruen|luxplena)/:name\" component={PlayerProfile} />\r\n          <Route exact path=\"/players/:server(bergruen|luxplena)/:name/edit\" component={PlayerEdit} />\r\n          <Route exact path=\"/players/add\" component={PlayerAdd} />\r\n\r\n          <Route path=\"/login\" component={Login} />\r\n\r\n          <Route path=\"/privacy_policy\" component={PrivacyPolicy} />\r\n          <Route path=\"/legal_notice\" component={LegalNotice} />\r\n\r\n        </Switch>\r\n      </Layout>\r\n      <GlobalStyle />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}