{"version":3,"sources":["helpers.js","auth.js","breakpoint.js","components/Layout/LayoutStyles.js","fetch.js","localization/en.js","localization/de.js","localization/it.js","localization/tr.js","localization/es.js","localization/strings.js","components/Layout/Layout.jsx","components/Common/CommonStyles.js","components/Common/Common.jsx","components/Ranking/RankingStyles.js","components/Ranking/Ranking.jsx","components/LandingPage/LandingPageStyles.js","components/LandingPage/LandingPage.jsx","components/ActiveMatches/ActiveMatchesStyles.js","components/ActiveMatches/ActiveMatches.jsx","components/PlayerProfile/PlayerProfileStyles.js","components/PlayerProfile/PlayerProfile.jsx","components/Login/Login.jsx","components/CreateMatches/CreateMatchesStyles.js","components/CreateMatches/CreateMatches.jsx","components/FooterPages/PrivacyPolicy.jsx","components/FooterPages/LegalNotice.jsx","components/PlayerEdit/PlayerEditStyles.js","components/PlayerEdit/PlayerEdit.jsx","components/PlayerEdit/AddPlayer.jsx","App.jsx","index.js"],"names":["getImagePath","name","KEY","getToken","localStorage","getItem","isLoggedIn","getIdentity","decode","identity","breakpoints","xs","sm","md","lg","xl","breakpoint","createBreakpoint","createMap","API_URL","Nav","styled","nav","LinksWrapper","div","Link","RouterLink","props","isactive","HeaderBrandLogo","img","Main","main","ContentWrapper","Footer","footer","NavbarExtension","LanguageSelect","select","strings","createMatchesLink","addPlayerLink","rankingLink","matchesLink","legalNoticeLink","privacyPolicyLink","homepage","aboutHeader","aboutText1","aboutTextChange","aboutChange1","aboutChange2","aboutChange3","rulesHeader","rule1","rule2","rule3","rule4","rule5","rule6","rule7","rulesInfoText","participateHeader","participateText1","participateText2","participateText3","participateText4","prizesHeader","prizesText1","prizesText2","prizesText3","login","password","username","deleteMatchesButton","deleteMatchesConfirm1","deleteMatchesConfirm2","deleteMatchesConfirm3","noMatchesFound","loadingMessage","errorMessage","notFound","startMatchesConfirm","alreadyActiveMatchesError","searchPlayerPlaceholder","addPlayerHeader","addPlayerChatlogHeader","parseButton","startMatchesButton","keywordPlaceholder","privacyPolicyHeader","privacyPolicyText","addButton","saveButton","playerEdit","playerProfile","notLatestMatchError","matchesHeader","opponent","result","date","edit","noMatchesPlayed","rank","winsLossesDraws","noPlayersFound","players","points","win","loss","draw","wins","losses","draws","level","guild","server","class","levelLand","levelSea","LocalizedStrings","en","StringsEN","de","StringsDE","it","StringsIT","tr","StringsTR","es","StringsES","Layout","useState","loggedIn","setLoggedIn","selectedLanguage","setSelectedLanguage","setLanguage","window","addEventListener","to","onClick","removeItem","dispatchEvent","Event","src","children","onChange","event","newLanguage","target","value","setItem","location","reload","getHeaders","token","httpHeaders","Headers","getPlayer","url","fetch","method","headers","ClassIcon","width","marginRight","CenteredSpan","span","H2","h2","Flex","flexFlow","justifyContent","alignItems","Button","button","margin","padding","fontSize","backgroundColorOnHover","borderColorOnHover","Text","currentServer","FetchStateMessage","loading","error","TableWrapper","Table","table","TableHeader","th","align","TableData","td","TableRow","even","Ranking","document","title","match","params","setPlayers","setLoading","hasError","setHasError","useEffect","res","getRanking","then","fetchResponse","json","ok","console","msg","length","sort","a","b","map","player","index","rankColor","y","InstallTrigger","key","height","d","fill","textAnchor","alignmentBaseline","x","level_land","level_sea","Banner","Grid","GridItem","rowS","startS","endS","row","start","end","LandingPage","startDate","Date","formatString","toLocaleDateString","Line","hr","VersusWrapper","VersusText","PlayerSub","EloGain","Player","p2_points","p1_points","expected_score_p1","Math","pow","floor","calculateEloGain","ActiveMatches","matches","setMatches","getActiveMatches","setWinner","matchId","winner","body","JSON","stringify","setActiveMatchWinner","filter","m","id","alert","broderColorOnHover","confirm","deleteActiveMatches","Fragment","player_1","player_2","PlayerInfoColumn","PlayerInfoName","PlayerInfoTable","MatchHistoryColumn","MatchHistoryTable","ResultSpan","color","PlayerProfile","setPlayer","editId","setEditId","selectedWinner","setSelectedWinner","onWinnerChange","newWinner","parseInt","updateMatchWinner","user","playerKey","pointsChange","points_change","toString","pointsOperator","log","matchDate","toLocaleString","playerMatchIds","forEach","push","latestMatchId","max","opponentMatchIds","enableMatchEdit","Login","setUsername","setPassword","onSubmit","preventDefault","access_token","history","e","placeholder","type","SearchPlayerColumn","AddedPlayerColumn","ChatlogPlayerColumn","ChatlogWrapper","AddedPlayerList","SearchResults","PlayerWrapper","SearchInput","input","KeywordInput","SearchInputWrapper","ChatlogTextArea","textarea","CreateMatches","searchString","setSearchString","searchResults","setSearchResults","addedPlayers","setAddedPlayers","keyword","setKeyword","chatlog","setChatlog","getPlayers","addPlayer","includes","matchingPlayers","p","toLowerCase","onKeyUp","keyCode","regex","RegExp","playerObjects","split","line","trimRight","playerName","playerObj","names","removePlayer","ids","playerIds","createMatches","status","PrivacyPolicy","LegalNotice","InputGroup","TextInput","Select","PlayerEdit","currentPlayerName","setLevelLand","setLevelSea","characterClass","setCharacterClass","newPlayer","character_class","updatePlayer","disabled","PlayerAdd","setName","setGuild","setServer","GlobalStyle","createGlobalStyle","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f901caec.chunk.js","sourcesContent":["const K = 50;\r\n\r\nfunction calculateEloGain(p1_points, p2_points) {\r\n  // p1 is the winner\r\n  let expected_score_p1 = 1 / (1 + Math.pow(10, (p2_points - p1_points)/400));\r\n\r\n  return Math.floor(K * (1 - expected_score_p1));\r\n}\r\n\r\nfunction getImagePath(name) {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    return `/images/${name}`;\r\n  } else {\r\n    return `/static/images/${name}`;\r\n  }\r\n}\r\n\r\nexport {\r\n  calculateEloGain,\r\n  getImagePath\r\n}","import decode from 'jwt-decode';\r\n\r\nconst KEY = \"access_token\"\r\n\r\nconst getToken = () => {\r\n  return localStorage.getItem(KEY) || null;\r\n}\r\n\r\nconst isLoggedIn = () => {\r\n  if (getToken()) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst loginUser = (token) => {\r\n  localStorage.setItem(KEY, token);\r\n  window.dispatchEvent(new Event(\"storage\"));\r\n}\r\n\r\nconst logoutUser = () => {\r\n  localStorage.removeItem(KEY);\r\n  window.dispatchEvent(new Event(\"storage\"));\r\n}\r\n\r\nconst getDecodedToken = () => {\r\n  // Using jwt-decode npm package to decode the token\r\n  return decode(getToken());\r\n}\r\n\r\nconst getIdentity = () => {\r\n  return getDecodedToken().identity;\r\n}\r\n\r\nexport {\r\n  getToken,\r\n  isLoggedIn,\r\n  loginUser,\r\n  logoutUser,\r\n  getIdentity,\r\n}","import { createBreakpoint, createMap } from \"styled-components-breakpoint\";\r\n\r\nconst breakpoints = {\r\n  xs: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n};\r\n \r\nconst breakpoint = createBreakpoint(breakpoints);\r\nconst map = createMap(breakpoints);\r\nexport default breakpoint;\r\nexport {\r\n  map\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport breakpoint from \"../../breakpoint\";\r\n\r\nconst Nav = styled.nav`\r\n  background: white;\r\n  padding: 8px 0px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  border-bottom: 1px solid #cacaca;\r\n`;\r\n\r\nconst LinksWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`\r\n\r\nconst Link = styled(RouterLink)`\r\n  margin: 5px 5px;\r\n  ${breakpoint(\"sm\")`\r\n    margin: 5px 30px;\r\n  `}\r\n  color: ${props => props.isactive ? \"green\" : \"black\"};\r\n  text-decoration: none;\r\n  letter-spacing: 1.2px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n  }\r\n`\r\n\r\nconst HeaderBrandLogo = styled.img`\r\n  height: 50px;\r\n  width: auto;\r\n`\r\n\r\nconst Main = styled.main``;\r\n\r\nconst ContentWrapper = styled.div`\r\n  padding: 0px 20px;\r\n  ${breakpoint(\"lg\")`\r\n    padding: 0px 125px;\r\n  `}\r\n  ${breakpoint(\"xl\")`\r\n    padding: 0px 250px;\r\n  `}\r\n  margin: 20px 0px;\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  padding: 8px 0px;\r\n  border-top: 1px solid #cacaca;\r\n`;\r\n\r\nconst NavbarExtension = styled.div`\r\n  display: flex;\r\n  flex-flow: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 5px 0px;\r\n  border-bottom: 1px solid #cacaca;\r\n`\r\n\r\nconst LanguageSelect = styled.select`\r\n  border: 1px solid #cacaca;\r\n  border-radius: 3px;\r\n  color: black;\r\n  padding: 5px 10px;\r\n`\r\n\r\nexport {\r\n  Nav,\r\n  Main,\r\n  Footer,\r\n  LinksWrapper,\r\n  Link,\r\n  HeaderBrandLogo,\r\n  ContentWrapper,\r\n  NavbarExtension,\r\n  LanguageSelect,\r\n}","import { getToken } from \"./auth\";\r\n\r\nvar API_URL;\r\n\r\nswitch (process.env.NODE_ENV) {\r\n  case \"development\":\r\n    API_URL = \"http://127.0.0.1:5000/api\";\r\n    break\r\n  default:\r\n    API_URL = \"/api\";\r\n};\r\n\r\nfunction getHeaders() {\r\n  const token = getToken();\r\n  let httpHeaders = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n  };\r\n\r\n  if (token) {\r\n    httpHeaders[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n\r\n  return new Headers(httpHeaders);\r\n}\r\n\r\n// API Functions\r\nfunction getRanking(server) {\r\n  const url = `${API_URL}/ranking/${server}`;\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: getHeaders(),\r\n  })\r\n}\r\n\r\nfunction login(username, password) {\r\n  const url = `${API_URL}/login`;\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify({username, password})\r\n  })\r\n}\r\n\r\nfunction getPlayers(server) {\r\n  const url = `${API_URL}/players/${server}`\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: getHeaders(),\r\n  })\r\n}\r\n\r\nfunction getPlayer(server, name) {\r\n  const url = `${API_URL}/players/${server}/${name}`\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: getHeaders(),\r\n  })\r\n}\r\n\r\nfunction createMatches(server, playerIds) {\r\n  const url = `${API_URL}/active_matches/${server}`\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify({ids: playerIds})\r\n  })\r\n}\r\n\r\nfunction getActiveMatches(server) {\r\n  const url = `${API_URL}/active_matches/${server}`\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    headers: getHeaders(),\r\n  })\r\n}\r\n\r\nfunction setActiveMatchWinner(server, matchId, winner) {\r\n  const url = `${API_URL}/active_matches/${server}/${matchId}`\r\n  return fetch(url, {\r\n    method: \"PATCH\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify({winner})\r\n  })\r\n}\r\n\r\nfunction updateMatchWinner(matchId, newWinner) {\r\n  const url = `${API_URL}/matches/${matchId}`\r\n  return fetch(url, {\r\n    method: \"PATCH\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify({winner: newWinner})\r\n  })\r\n}\r\n\r\nfunction deleteActiveMatches(server) {\r\n  const url = `${API_URL}/active_matches/${server}`;\r\n  return fetch(url, {\r\n    method: \"DELETE\",\r\n    headers: getHeaders(),\r\n  })\r\n}\r\n\r\nfunction updatePlayer(server, name, newPlayer) {\r\n  const url = `${API_URL}/players/${server}/${name}`;\r\n  return fetch(url, {\r\n    method: \"PATCH\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify(newPlayer),\r\n  })\r\n}\r\n\r\nfunction addPlayer(server, newPlayer) {\r\n  const url = `${API_URL}/players/${server}`;\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: getHeaders(),\r\n    body: JSON.stringify(newPlayer),\r\n  })\r\n}\r\n\r\nexport {\r\n  getRanking,\r\n  login,\r\n  getPlayers,\r\n  getPlayer,\r\n  createMatches,\r\n  getActiveMatches,\r\n  setActiveMatchWinner,\r\n  updateMatchWinner,\r\n  deleteActiveMatches,\r\n  updatePlayer,\r\n  addPlayer,\r\n}","const strings = {\r\n  // Layout\r\n  createMatchesLink: \"Create Matches\",\r\n  addPlayerLink: \"Add Player\",\r\n  rankingLink: \"Ranking\",\r\n  matchesLink: \"Matches\",\r\n  legalNoticeLink: \"Legal Notice\",\r\n  privacyPolicyLink: \"Privacy Policy\",\r\n\r\n  // LandingPage\r\n  homepage: \"Homepage\",\r\n  aboutHeader: \"About\",\r\n  aboutText1: \"The FloLeague is a 1v1 PvP league for the MMORPG Florensia. After the first season came to an end in May, we will start season 2 on {date}. The ranking of the league is based on an elo-rating similar to chess or League of Legends. At the end of the season the winners will be awarded with prizes.\",\r\n  aboutTextChange: \"We learned a lot from season 1 and changed a few things:\",\r\n  aboutChange1: \"The most impactful change will be the Essence System. Unlike the fusion system, essences will be allowed.\",\r\n  aboutChange2: \"We have also shortened the length of the season from 3 to 2 months.\",\r\n  aboutChange3: \"Last, we decided to set a fixed amount of 3 rounds per matchday in order to have a fairer competition.\",\r\n  rulesHeader: \"Rules\",\r\n  rule1: \"A name change will lead to you starting from the beginning with 1000 points.\",\r\n  rule2: \"Pets and tamed monsters are not allowed.\",\r\n  rule3: \"You are only allowed to have your own buffs (That means, buffs by pets, other players or attendance from the lord are not allowed).\",\r\n  rule4: \"All consumable items (e.g. HP/MP potions, Antidote, ...) are not allowed.\",\r\n  rule5: \"Disconnecting while fighting counts as a loss.\",\r\n  rule6: \"PvPs that last longer than 5 minutes count as a draw.\",\r\n  rule7: \"Running into spectator crowds is not allowed.\",\r\n  rulesInfoText: \"We reserve the right to give out penalties to participants or spectators that misbehave.\",\r\n  participateHeader: \"How to participate\",\r\n  participateText1: \"To take part in the league you will have to be level 90+. Then just be present on the island Ron every sunday at 17:00 UTC+0 to take part.\",\r\n  participateText2: \"One of the moderators will ask every round to whisper him via the in-game chat if you want to take part. Every matchday, three rounds will take place. Players do not have to take part in all 3 rounds.\",\r\n  participateText3: \"Once the moderator added all players to the list, the website will randomly match players. Once the matches are generated you can see them when clicking on the 'Matches' tab at the top.\",\r\n  participateText4: \"When it is your turn to fight the moderator will ask for you to step forward.\",\r\n  prizesHeader: \"Prizes\",\r\n  prizesText1: \"The following prizes are for each Server (Bergruen / LuxPlena):\",\r\n  prizesText2: \"Rank 1-3 each get a unique 90D Dress that shows they are the best of the server.\",\r\n  prizesText3: \"Rank 1-3 of each base class (Noble, Mercenary, Saint, Explorer) get each 20 / 14 / 7 Slate Piece of Ancient.\",\r\n\r\n  // Login\r\n  login: \"Login\",\r\n  password: \"Password\",\r\n  username: \"Username\",\r\n\r\n  // ActiveMatches\r\n  deleteMatchesButton: \"Delete all Matches\",\r\n  deleteMatchesConfirm1: \"Sure? (ㆆ _ ㆆ)\",\r\n  deleteMatchesConfirm2: \"Really Really sure? ( 0 _ 0 )\",\r\n  deleteMatchesConfirm3: \"Flipping matches table! ノ┬─┬ノ ︵ ( \\\\o°o)\\\\\",\r\n  noMatchesFound: \"No matches found. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // Common\r\n  loadingMessage: \"Loading… (｡◕‿◕｡)\",\r\n  errorMessage: \"An error occured. (╯°□°）╯︵ ┻━┻\",\r\n\r\n  // CreateMatches\r\n  notFound: \"Not found: {names}\",\r\n  startMatchesConfirm: \"Start matches?\",\r\n  alreadyActiveMatchesError: \"There are already some active matches for this server.\",\r\n  searchPlayerPlaceholder: \"Search Player\",\r\n  addPlayerHeader: \"Add Player\",\r\n  addPlayerChatlogHeader: \"Add Player (Chatlog)\",\r\n  parseButton: \"Parse\",\r\n  startMatchesButton: \"Start matches\",\r\n  keywordPlaceholder: \"Keyword\",\r\n\r\n  // PrivacyPolicy\r\n  privacyPolicyHeader: \"Privacy Policy\",\r\n  privacyPolicyText: \"flo-league.com does not collect any sorts of personal data of the user.\",\r\n\r\n  // AddPlayer / EditPlayer\r\n  addButton: \"Add\",\r\n  saveButton: \"Save\",\r\n  playerEdit: \"Edit Player\",\r\n  playerProfile: \"Player Profile of {name}\",\r\n\r\n  // PlayerProfile\r\n  notLatestMatchError: \"Not the latest match of the current or opponent player.\",\r\n  matchesHeader: \"Matches\",\r\n  opponent: \"Opponent\",\r\n  result: \"Result\",\r\n  date: \"Date\",\r\n  edit: \"Edit\",\r\n  noMatchesPlayed: \"No matches played. (ง •_•)ง\",\r\n\r\n  // Ranking\r\n  rank: \"Rank\",\r\n  winsLossesDraws: \"W : L : D\",\r\n  noPlayersFound: \"No players found. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // other keywords\r\n  players: \"Players\",\r\n  points: \"Points\",\r\n  win: \"Win\",\r\n  loss: \"Loss\",\r\n  draw: \"Draw\",\r\n  wins: \"Wins\",\r\n  losses: \"Losses\",\r\n  draws: \"Draws\",\r\n  level: \"Level\",\r\n  name: \"Name\",\r\n  guild: \"Guild\",\r\n  server: \"Server\",\r\n  class: \"Class\",\r\n  levelLand: \"Level Land\",\r\n  levelSea: \"Level Sea\",\r\n}\r\n\r\nexport default strings;","const strings = {\r\n  // Layout\r\n  createMatchesLink: \"Spiele erstellen\",\r\n  addPlayerLink: \"Spieler hinzufügen\",\r\n  rankingLink: \"Rangliste\",\r\n  matchesLink: \"Spiele\",\r\n  legalNoticeLink: \"Impressum\",\r\n  privacyPolicyLink: \"Datenschutz\",\r\n\r\n  // LandingPage\r\n  homepage: \"Startseite\",\r\n  aboutHeader: \"Über\",\r\n  aboutText1: \"Die FloLeague ist eine 1v1 PvP Liga für das MMORPG Florensia. Nachdem im Mai nun die erste Season zu Ende ging, wird am {date} die nächste Season starten. Die Rangliste basiert auf einem Elo-Rating wie bei Schach oder League of Legends. Am Ende der Season gibt es für die Sieger verschiedene Preise.\",\r\n  aboutTextChange: \"Wir haben viel in der ersten Season gelernt und einige Änderungen vorgenommen:\",\r\n  aboutChange1: \"Die größte Änderung wird vermutlich das Essenz System sein. Im Gegensatz zum Fusions System, welches verboten war, wird das Essenz System erlaubt sein.\",\r\n  aboutChange2: \"Wir haben außerdem die Länge der Season von 3 auf 2 Monate verkürzt.\",\r\n  aboutChange3: \"Des weiteren haben wir uns auf 3 Runden pro Spieltag geeinigt, damit es nicht zu Nachteilen kommt, wenn man an einem Sonntag mal nicht kann.\",\r\n  rulesHeader: \"Regeln\",\r\n  rule1: \"Solltest du deinen Namen wechseln beginnst du wieder mit den 1000 Punkten vom Anfang.\",\r\n  rule2: \"Pets und gezähmte Monster sind nicht erlaubt.\",\r\n  rule3: \"Du darfst nur deine eigenen Buffs haben (D.h. Pet Buffs, Buffs von anderen Spielern oder der Buff vom Lord sind nicht erlaubt).\",\r\n  rule4: \"Alle einnehmbare Items (HP/MP Potions, Gegengift, usw.) sind nicht erlaubt.\",\r\n  rule5: \"Solltest du während dem Kampf einen Verbindungsabbruch haben, so zählt dies als Niederlage für dich.\",\r\n  rule6: \"Spiele die länger als 5 Minuten gehen zählen als Unentschieden.\",\r\n  rule7: \"In die Zuschauermenge zu laufen um einen Vorteil zu erlangen ist nicht erlaubt.\",\r\n  rulesInfoText: \"Wir behalten uns das Recht vor, Spieler oder Zuschauer wegen ihrem Verhalten zu bestrafen.\",\r\n  participateHeader: \"Wie man teilnimmt\",\r\n  participateText1: \"Um Teilzunehmen musst du mindestens Level 90 auf Land sein. Dann musst du einfach nur Sonntags um 17:00 UTC+0 auf Ron sein.\",\r\n  participateText2: \"Einer der Moderatoren wird vor jeder Runde fragen, wer teilnehmen möchte. Diesem musst du dann im Flüster-Chat antworten, solltest du teilnehmen wollen. An jedem Sonntag wird es 3 Runden geben, jedoch bist du nicht verpflichtet an jeder teilzunehmen.\",\r\n  participateText3: \"Nachdem alle Spieler in unser System eingetragen wurden, wird die Webseite zufällig Matches auslosen, welche in dem Tab 'Spiele' einsehbar sind.\",\r\n  participateText4: \"Sobald du an der Reihe mit deinem Kampf bist wird einer der Moderatoren deine Namen aufrufen.\",\r\n  prizesHeader: \"Preise\",\r\n  prizesText1: \"Die folgenden Preise gelten jeweils für beide Server (Bergruen / LuxPlena):\",\r\n  prizesText2: \"Rang 1-3 bekommen je ein 90 Tage einzigartiges Dress, welches ihren Prestige Status auf dem Server darstellt.\",\r\n  prizesText3: \"Rang 1-3 jeder Baseklasse (Noble, Mercenary, Saint, Explorer) bekommen je 20 / 14 / 7 Slate Piece of Ancient.\",\r\n\r\n  // Login\r\n  login: \"Login\",\r\n  password: \"Passwort\",\r\n  username: \"Benutzername\",\r\n\r\n  // ActiveMatches\r\n  deleteMatchesButton: \"Alle Spiele Löschen\",\r\n  deleteMatchesConfirm1: \"Sicher? (ㆆ _ ㆆ)\",\r\n  deleteMatchesConfirm2: \"Sicher sicher? ( 0 _ 0 )\",\r\n  deleteMatchesConfirm3: \"Sicher sicher sicher?! ノ┬─┬ノ ︵ ( \\\\o°o)\\\\\",\r\n  noMatchesFound: \"Keine Spiele gefunden. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // Common\r\n  loadingMessage: \"Laden… (｡◕‿◕｡)\",\r\n  errorMessage: \"Ein Error ist aufgetreten. (╯°□°）╯︵ ┻━┻\",\r\n\r\n  // CreateMatches\r\n  notFound: \"Nicht gefunden: {names}\",\r\n  startMatchesConfirm: \"Spiele starten?\",\r\n  alreadyActiveMatchesError: \"Es gibt bereits Spiele für diesen Server.\",\r\n  searchPlayerPlaceholder: \"Spieler suchen\",\r\n  addPlayerHeader: \"Spieler hinzufügen\",\r\n  addPlayerChatlogHeader: \"Spieler hinzufügen (Chatlog)\",\r\n  parseButton: \"Analyisieren\",\r\n  startMatchesButton: \"Spiele starten\",\r\n  keywordPlaceholder: \"Schlüsselwort\",\r\n\r\n  // PrivacyPolicy\r\n  privacyPolicyHeader: \"Datenschutzerklärung\",\r\n  privacyPolicyText: \"flo-league.com sammelt keinerlei Daten von den Besuchern der Seite.\",\r\n\r\n  // AddPlayer / EditPlayer\r\n  addButton: \"Hinzufügen\",\r\n  saveButton: \"Speichern\",\r\n  playerEdit: \"Spieler bearbeiten\",\r\n  playerProfile: \"Spieler profil von {name}\",\r\n\r\n  // PlayerProfile\r\n  notLatestMatchError: \"Nicht das letzte Spiel von dem aktuellen Spieler oder dem Gegner.\",\r\n  matchesHeader: \"Spiele\",\r\n  opponent: \"Gegner\",\r\n  result: \"Ergebnis\",\r\n  date: \"Datum\",\r\n  edit: \"Bearbeiten\",\r\n  noMatchesPlayed: \"Keine Spiele gespielt. (ง •_•)ง\",\r\n\r\n  // Ranking\r\n  rank: \"Rang\",\r\n  winsLossesDraws: \"W : N : U\",\r\n  noPlayersFound: \"Keine Spieler gefunden. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // other keywords\r\n  players: \"Spieler\",\r\n  points: \"Punkte\",\r\n  win: \"Sieg\",\r\n  loss: \"Niederlage\",\r\n  draw: \"Unentschieden\",\r\n  wins: \"Siege\",\r\n  losses: \"Niederlagen\",\r\n  draws: \"Unentschieden\",\r\n  level: \"Level\",\r\n  name: \"Name\",\r\n  guild: \"Gilde\",\r\n  server: \"Server\",\r\n  class: \"Klasse\",\r\n  levelLand: \"Landlevel\",\r\n  levelSea: \"Seelevel\",\r\n}\r\n\r\nexport default strings;","const strings = {\r\n  // Layout\r\n  createMatchesLink: \"CreaIncontri\",\r\n  addPlayerLink: \"AggiungiGiocatore\",\r\n  rankingLink: \"Classifica\",\r\n  matchesLink: \"Incontri\",\r\n  legalNoticeLink: \"Legal Notice\",\r\n  privacyPolicyLink: \"Privacy Policy\",\r\n\r\n  // LandingPage\r\n  homepage: \"Homepage\",\r\n  aboutHeader: \"Riguardo a\",\r\n  aboutText1: \"La FloLeague è una 1v1 PvP league per il MMORPG Florensia. Dopo che la prima stagione finì a maggio, si inizierà con la seconda stagione il {date}. Il ranking della pvp league è basato su un elo-rating simile a chess o League of Legends. Alla fine della stagione i vincitori verranno premiati con dei premi.\",\r\n  aboutTextChange: \"Abbiamo imparato molto dalla prima stagione ed abbiamo cambiato qualcosina:\",\r\n  aboutChange1: \"Il più grande e forte cambiamento sarà il sistema di essenze. Al contrario del sistema di fusion, il sistema di essenze sarà permesso.\",\r\n  aboutChange2: \"Abbiamo anche ridotto il periodo della stagione da 3 a 2 mesi.\",\r\n  aboutChange3: \"Infine, abbiamo deciso di mettere un numero fisso di round, che sarà di 3 round per ogni giorno dell'incontro cosicchè si potrà avere una competizione più equa ed onesta.\",\r\n  rulesHeader: \"Regole\",\r\n  rule1: \"Cambiarsi il nome ti condurrà a riniziare dall'inizio con 1000 punti.\",\r\n  rule2: \"Pet e mostri Pettati non sono permessi.\",\r\n  rule3: \"Avrai il permesso di avere solo i tuoi stessi buff (Questo significa che, buff dai pet, altri giocatori oppure attendance dai lord delle città non sono permesse).\",\r\n  rule4: \"Tutti gli item consumabili (es. Pozioni HP/MP, Antidoti, ...) non sono permessi.\",\r\n  rule5: \"Disconnettersi durante un incontro conterà come una sconfitta.\",\r\n  rule6: \"Le PvP che dureranno più di 5 minuti conteranno come un pareggio.\",\r\n  rule7: \"Correre dentro alla folla di spettatori, durante un incontro, non è permesso.\",\r\n  rulesInfoText: \"Ci riserviamo il diritto di assegnare penalità ai partecipanti o agli spettatori che si comportano in modo inappropriato.\",\r\n  participateHeader: \"Come partecipare\",\r\n  participateText1: \"Per partecipare alla FloLeague, dovrai essere livello 90+. Quindi solamente essere presente sull'isola Ron tutte le domenice alle 17:00 UTC+0 per partecipare.\",\r\n  participateText2: \"Uno dei moderatori chiederà ogni round di scrivergli in privato (nel gioco) per le persone che vorranno partecipare. Ogni giorno dell'incontro, ci saranno 3 round. I giocatori non dovranno per forza partecipare a tutti e 3 i round.\",\r\n  participateText3: \"Una volta che il moderatore avrà aggiunto tutti gli sfidanti in lista, Il sito web comporrà gli incontri in maniera casuale. Una volta che gli incontri saranno generati avrai la possibilità di vederli cliccando su 'Incontri' in alto sulla finestra.\",\r\n  participateText4: \"Quando sarà il tuo turno per combattere il moderatore ti chiederà di fare un passo avanti.\",\r\n  prizesHeader: \"Premi\",\r\n  prizesText1: \"I premi seguenti saranno per entrambi i server (Bergruen / LuxPlena):\",\r\n  prizesText2: \"Per chi si classificherà nelle posizioni 1-3 otterrà un dress unico e speciale da 90 giorni, servirà a mostrare sei uno tra i migliori in quel server.\",\r\n  prizesText3: \"Per chi si classificherà nelle posizioni 1-3 di ogni classe base (Nobile, Mercenario, Santo, Esploratore) otterrà ciascuno 20 / 14 / 7 Slate Piece of Ancient.\",\r\n\r\n  // Login\r\n  login: \"Login\",\r\n  password: \"Password\",\r\n  username: \"Username\",\r\n\r\n  // ActiveMatches\r\n  deleteMatchesButton: \"Cancella tutti gli incontri\",\r\n  deleteMatchesConfirm1: \"Sicuro? (ㆆ _ ㆆ)\",\r\n  deleteMatchesConfirm2: \"Veramente veramente sicuro? ( 0 _ 0 )\",\r\n  deleteMatchesConfirm3: \"Lancia la tabella delle partite! ノ┬─┬ノ ︵ ( \\\\o°o)\\\\\",\r\n  noMatchesFound: \"Nessun incontro trovato. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // Common\r\n  loadingMessage: \"Caricamento… (｡◕‿◕｡)\",\r\n  errorMessage: \"C'è stato un errore. (╯°□°）╯︵ ┻━┻\",\r\n\r\n  // CreateMatches\r\n  notFound: \"Non trovato: {names}\",\r\n  startMatchesConfirm: \"Iniziare gli incontri?\",\r\n  alreadyActiveMatchesError: \"Ci sono ancora degli incontri attivi in questo server.\",\r\n  searchPlayerPlaceholder: \"Cerca Giocatore\",\r\n  addPlayerHeader: \"Aggiungi Giocatore\",\r\n  addPlayerChatlogHeader: \"Aggiungi Giocatore (Chatlog)\",\r\n  parseButton: \"Analizzare\",\r\n  startMatchesButton: \"Inizia gli incontri\",\r\n  keywordPlaceholder: \"Parola chiave\",\r\n\r\n  // PrivacyPolicy\r\n  privacyPolicyHeader: \"Privacy Policy\",\r\n  privacyPolicyText: \"flo-league.com non raccoglie alcun tipo di dato personale dell'utente.\",\r\n\r\n  // AddPlayer / EditPlayer\r\n  addButton: \"Aggiungi\",\r\n  saveButton: \"Salva\",\r\n  playerEdit: \"Modifica giocatore\",\r\n  playerProfile: \"Profilo giocatore di {name}\",\r\n\r\n  // PlayerProfile\r\n  notLatestMatchError: \"Non l'ultima partita del giocatore attuale o avversario.\",\r\n  matchesHeader: \"Incontri\",\r\n  opponent: \"Avversario\",\r\n  result: \"Risultato\",\r\n  date: \"Data\",\r\n  edit: \"Modifica\",\r\n  noMatchesPlayed: \"Nessun incontro giocato. (ง •_•)ง\",\r\n\r\n  // Ranking\r\n  rank: \"Posizione\",\r\n  winsLossesDraws: \"V : S : P\",\r\n  noPlayersFound: \"Nessun giocatore trovato. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // other keywords\r\n  players: \"Giocatori\",\r\n  points: \"Punti\",\r\n  win: \"Vittoria\",\r\n  loss: \"Sconfitta\",\r\n  draw: \"Pareggio\",\r\n  wins: \"Vittorie\",\r\n  losses: \"Sconfitte\",\r\n  draws: \"Pareggi\",\r\n  level: \"Livello\",\r\n  name: \"Nome\",\r\n  guild: \"Gilda\",\r\n  server: \"Server\",\r\n  class: \"Classe\",\r\n  levelLand: \"Livello Land\",\r\n  levelSea: \"Livello Sea\",\r\n}\r\n\r\nexport default strings;","const strings = {\r\n  // Layout\r\n  createMatchesLink: \"Eşleştirme Oluştur\",\r\n  addPlayerLink: \"Oyuncu Ekle\",\r\n  rankingLink: \"Sıralama\",\r\n  matchesLink: \"Eşleştirmeler\",\r\n  legalNoticeLink: \"Yasal Bildirim\",\r\n  privacyPolicyLink: \"Gizlilik Politikası\",\r\n\r\n  // LandingPage\r\n  homepage: \"Anasayfa\",\r\n  aboutHeader: \"Nedir?\",\r\n  aboutText1: \"FloLeague, Florensia MMORPG oyunu içinde bir 1v1 PvP turnuvasıdır. İlk sezon mayıs ayı sonunda gerçekleşmişti ve 2. sezon için {date} tarihini bekleyeceğiz. Turnuva sıralaması satrançtaki ya da League of Legends’teki gibi bir ELO puanlama sistemine dayanmaktadır. Turnuva sonunda kazananlar ödüllendirilecektir.\",\r\n  aboutTextChange: \"İlk sezon sonucunda birkaç değişiklik yapmaya karar verdik:\",\r\n  aboutChange1: \"En önemli olan değişiklik Esans Sistemi, Fusion Sisteminin aksine esanslara izin verilecektir.\",\r\n  aboutChange2: \"Sezon uzunluğunu ise 3 aydan 2 aya indirdik.\",\r\n  aboutChange3: \"Son olarak, daha adil bir yarışma olması için turnuvayı her maç günü 3 tur olacak şekilde düzeltmeye karar verdik.\",\r\n  rulesHeader: \"Kurallar\",\r\n  rule1: \"İsim değişikliği sizi yeniden 1000 puandan başlatacaktır.\",\r\n  rule2: \"Pet ya da evcilleştirilmiş canavarlara izin verilmeyecektir.\",\r\n  rule3: \"Yalnızca kendi bufflarınıza izin verilecektir. (Yani pet buffları, diğer karakterlerden alınan bufflar ve Lord’dan alınan Attendance kullanılmayaçaktır.)\",\r\n  rule4: \"Tüm sarf malzemelere (örn. HP/MP potları, Antidote, …) izin verilmeyecektir.\",\r\n  rule5: \"Dövüş sırasında yaşanılan bağlantı kopmaları birer kayıp olarak yazılacaktır.\",\r\n  rule6: \"5 dakikadan uzun süren dövüşler beraberlik olarak sayılacaktır.\",\r\n  rule7: \"İzleyici tarafına doğru kaçmak yasaktır.\",\r\n  rulesInfoText: \"Kurallara uymayan oyuncu ya da izleyicileri cezalandırma hakkı saklıdır.\",\r\n  participateHeader: \"Nasıl Katılırım?\",\r\n  participateText1: \"Turnuvaya katılmak için kara seviyeniz 90 ve üzeri olmalı, sonrasında her Pazar saat 20:00'da Ron adasına bulunmanız gerek.\",\r\n  participateText2: \"Katılmak istiyorsanız yöneticilerden biri oyun için fısıldama yolu ile her tur size soracaktır. Her maç günü 3 tur yapılacaktır, her turda bulunmak zorunlu değildir.\",\r\n  participateText3: \"Yönetici tüm oyuncuları listelediğinde, site üzerinden rastgele eşleştirmeler yapılacaktır, sitenin yukarısındaki 'Eşleştirmeler' sekmesinde görülebilir.\",\r\n  participateText4: \"Dövüş sırası size geldiğinde yönetici sizden önce çıkmanızı isteyecek.\",\r\n  prizesHeader: \"Ödüller\",\r\n  prizesText1: \"Her iki sunucu (Bergruen/Luxplena) içinde aşağıdaki ödüller geçerlidir:\",\r\n  prizesText2: \"İlk üçe oyun içinde en iyisi olduklarını belli eden eşsiz 90 günlük giysi verilecektir.\",\r\n  prizesText3: \"Her sınıftan (Noble, Mercenary, Saint, Explorer) ilk üçe girene sırayla 20 / 14 / 7 Slate Piece of Ancient verilecektir.\",\r\n\r\n  // Login\r\n  login: \"Giriş Yap\",\r\n  password: \"Parola\",\r\n  username: \"Kullanıcı Adı\",\r\n\r\n  // ActiveMatches\r\n  deleteMatchesButton: \"Tüm eşleştirmeleri sil\",\r\n  deleteMatchesConfirm1: \"Emin misin? (ㆆ _ ㆆ)\",\r\n  deleteMatchesConfirm2: \"Son kararın mı? ( 0 _ 0 )\",\r\n  deleteMatchesConfirm3: \"Eşleştirme tablosu siliniyor. ノ┬─┬ノ ︵ ( \\\\o°o)\\\\\",\r\n  noMatchesFound: \"Eşleştirme bulunamadı. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // Common\r\n  loadingMessage: \"Yükleniyor... (｡◕‿◕｡)\",\r\n  errorMessage: \"Hata! (╯°□°）╯︵ ┻━┻\",\r\n\r\n  // CreateMatches\r\n  notFound: \"Bulunamadı: {names}\",\r\n  startMatchesConfirm: \"Eşleştirmeyi başlat?\",\r\n  alreadyActiveMatchesError: \"Bu sunucuda halihazırda eşleştirmeler mevcut.\",\r\n  searchPlayerPlaceholder: \"Oyuncu Ara\",\r\n  addPlayerHeader: \"Oyuncu Ekle\",\r\n  addPlayerChatlogHeader: \"Oyuncu Ekle (Chatlog)\",\r\n  parseButton: \"Ayrıştır\",\r\n  startMatchesButton: \"Eşleştir\",\r\n  keywordPlaceholder: \"Keyword\",\r\n\r\n  // PrivacyPolicy\r\n  privacyPolicyHeader: \"Gizlilik Politikası\",\r\n  privacyPolicyText: \"flo-league.com kullanıcıların hiçbir kişisel verisini saklamaz.\",\r\n\r\n  // AddPlayer / EditPlayer\r\n  addButton: \"Ekle\",\r\n  saveButton: \"Kaydet\",\r\n  playerEdit: \"Oyuncu Düzenle\",\r\n  playerProfile: \"Oyuncu Profili {name}\",\r\n\r\n  // PlayerProfile\r\n  notLatestMatchError: \"Mevcut veya rakip oyuncunun son eşleştirmesi değil.\",\r\n  matchesHeader: \"Eşleştirmeler\",\r\n  opponent: \"Rakip\",\r\n  result: \"Sonuç\",\r\n  date: \"Tarih\",\r\n  edit: \"Düzenle\",\r\n  noMatchesPlayed: \"Hiç maç yapılmadı. (ง •_•)ง\",\r\n\r\n  // Ranking\r\n  rank: \"Sıra\",\r\n  winsLossesDraws: \"Kaz. : Kay. : Ber.\",\r\n  noPlayersFound: \"Oyuncu bulunamadı. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // other keywords\r\n  players: \"Oyuncular\",\r\n  points: \"Puanlar\",\r\n  win: \"Kazandığı\",\r\n  loss: \"Kaybettiği\",\r\n  draw: \"Berabere\",\r\n  wins: \"Kazandıkları\",\r\n  losses: \"Kaybettikleri\",\r\n  draws: \"Beraberlikler\",\r\n  level: \"Seviye\",\r\n  name: \"İsim\",\r\n  guild: \"Guild\",\r\n  server: \"Sunucu\",\r\n  class: \"Sınıf\",\r\n  levelLand: \"Kara Seviyesi\",\r\n  levelSea: \"Deniz Seviyesi\",\r\n}\r\n\r\nexport default strings;","const strings = {\r\n  // Layout\r\n  createMatchesLink: \"Crear Combates\",\r\n  addPlayerLink: \"Añadir Jugador\",\r\n  rankingLink: \"Ranking\",\r\n  matchesLink: \"Enfrentamientos\",\r\n  legalNoticeLink: \"Aviso legal\",\r\n  privacyPolicyLink: \"Política de privacidad\",\r\n\r\n  // LandingPage\r\n  homepage: \"Página de inicio\",\r\n  aboutHeader: \"Acerca de\",\r\n  aboutText1: \"La FloLeague es una liga PvP 1v1 para el MMORPG Florensia. Después de que la primera temporada terminase en mayo, empezaremos la segunda temporada en {fecha}. El ranking de la liga se basa en una clasificación por elo similar al ajedrez o a League of Legends. Al final de la temporada los ganadores serán premiados.\",\r\n  aboutTextChange: \"Aprendimos mucho de la primera temporada y hemos cambiado algunas cosas:\",\r\n  aboutChange1: \"El cambio más importante será el Sistema de Esencias. A diferencia del sistema de fusiones, las esencias estarán permitidas.\",\r\n  aboutChange2: \"También hemos acortado la duración de la temporada de 3 a 2 meses.\",\r\n  aboutChange3: \"Por último, hemos decidido establecer una cantidad fija de 3 rondas por día de competición para tener una competición más justa.\",\r\n  rulesHeader: \"Reglas\",\r\n  rule1: \"Un cambio de nombre te llevará a empezar desde el principio con 1000 puntos.\",\r\n  rule2: \"Las mascotas y los monstruos encantados no están permitidos.\",\r\n  rule3: \"Sólo está permitido tener tus propios buffs (Esto significa, buffs de mascotas y buffs de otros jugadores o el Attendance del lord no están permitidos).\",\r\n  rule4: \"Todos los objetos consumibles (p. ej. Pociones de HP/MP, Antídotos, ...) no están permitidos.\",\r\n  rule5: \"Desconectarse mientras se está en combate contará como derrota.\",\r\n  rule6: \"Los PvP que duren más de 5 minutos contarán como empate.\",\r\n  rule7: \"Correr hacia la multitud de espectadores no está permitido.\",\r\n  rulesInfoText: \"Nos reservamos el derecho de penalizar a los participantes o espectadores que se comporten de forma inadecuada.\",\r\n  participateHeader: \"Como participar\",\r\n  participateText1: \"Para participar en la liga tendrás que ser nivel 90+. Entonces sólo tienes que estar presente en la isla de Ron todos los domingos a las 17:00 UTC+0 para participar.\",\r\n  participateText2: \"Uno de los moderadores pedirá en cada ronda que le susurren a través del chat del juego si quiere participar. En cada jornada de enfrentamientos, se llevarán a cabo tres rondas. Los jugadores no tienen por qué participar en las tres rondas.\",\r\n  participateText3: \"Una vez que el moderador haya añadido a todos los jugadores a la lista, la página web emparejará a los jugadores al azar. Una vez que se hayan generado los enfrentamientos, podrás verlos al hacer clic en la pestaña 'Enfrentamientos' en la parte superior.\",\r\n  participateText4: \"Cuando sea tu turno de pelear, el moderador te pedirá que des un paso al frente.\",\r\n  prizesHeader: \"Premios\",\r\n  prizesText1: \"Los siguientes premios para cada Servidor (Berguen / LuxPlena) son:\",\r\n  prizesText2: \"Los puestos 1-3 obtienen cada uno un traje de 90D único que demuestra que son los mejores del servidor.\",\r\n  prizesText3: \"Los puestos 1-3 de cada clase base (Noble, Mercenary, Saint, Explorer) obtendrán 20, 14, y 7 Slate Piece of Ancient cada uno.\",\r\n\r\n  // Login\r\n  login: \"Login\",\r\n  password: \"Password\",\r\n  username: \"Nombre de usuario\",\r\n\r\n  // ActiveMatches\r\n  deleteMatchesButton: \"Borrar todos los enfrentamientos\",\r\n  deleteMatchesConfirm1: \"¿Seguro? (ㆆ _ ㆆ)\",\r\n  deleteMatchesConfirm2: \"¿¿Realmente realmente seguro?? ( 0 _ 0 )\",\r\n  deleteMatchesConfirm3: \"¡Volteando la mesa de enfrentamientos! ノ┬─┬ノ ︵ ( \\\\o°o)\\\\\",\r\n  noMatchesFound: \"No se encontraron enfrentamientos. ¯\\\\_(ツ)_/¯\",\r\n\r\n  // Common\r\n  loadingMessage: \"Cargando… (｡◕‿◕｡)\",\r\n  errorMessage: \"Ocurrió un error. (╯°□°）╯︵ ┻━┻\",\r\n\r\n  // CreateMatches\r\n  notFound: \"No encontrado: {nombres}\",\r\n  startMatchesConfirm: \"¿Empezar enfrentamientos?\",\r\n  alreadyActiveMatchesError: \"Ya hay algunos enfrentamientos activos para este servidor.\",\r\n  searchPlayerPlaceholder: \"Buscar Jugador\",\r\n  addPlayerHeader: \"Añadir Jugador\",\r\n  addPlayerChatlogHeader: \"Añadir jugador (Chatlog)\",\r\n  parseButton: \"Parse\",\r\n  startMatchesButton: \"Empezar enfrentamientos\",\r\n  keywordPlaceholder: \"Palabra clave\",\r\n\r\n  // PrivacyPolicy\r\n  privacyPolicyHeader: \"Política de privacidad\",\r\n  privacyPolicyText: \"flo-league.com no recoge ningún tipo de dato personal del usuario.\",\r\n\r\n  // AddPlayer / EditPlayer\r\n  addButton: \"Añadir\",\r\n  saveButton: \"Guardar\",\r\n  playerEdit: \"Editar Jugador\",\r\n  playerProfile: \"Perfil de jugador de {nombre}\",\r\n\r\n  // PlayerProfile\r\n  notLatestMatchError: \"No es el último enfrentamiento del jugador actual o del oponente.\",\r\n  matchesHeader: \"Enfrentamientos\",\r\n  opponent: \"Oponente\",\r\n  result: \"Resultado\",\r\n  date: \"Fecha\",\r\n  edit: \"Editar\",\r\n  noMatchesPlayed: \"No hay enfrentamientos jugados. (ง •_•)ง\",\r\n\r\n  // Ranking\r\n  rank: \"Rango\",\r\n  winsLossesDraws: \"V : D : E\",\r\n  noPlayersFound: \"No se encontraron jugadores.¯\\\\_(ツ)_/¯\",\r\n\r\n  // other keywords\r\n  players: \"Jugadores\",\r\n  points: \"Puntos\",\r\n  win: \"Victoria\",\r\n  loss: \"Derrota\",\r\n  draw: \"Empate\",\r\n  wins: \"Victorias\",\r\n  losses: \"Derrotas\",\r\n  draws: \"Empates\",\r\n  level: \"Nivel\",\r\n  name: \"Nombre\",\r\n  guild: \"Guild\",\r\n  server: \"Servidor\",\r\n  class: \"Clase\",\r\n  levelLand: \"Nivel de Land\",\r\n  levelSea: \"Nivel de Sea\",\r\n}\r\n\r\nexport default strings;","import LocalizedStrings from \"react-localization\";\r\nimport StringsEN from \"./en\";\r\nimport StringsDE from \"./de\";\r\nimport StringsIT from \"./it\";\r\nimport StringsTR from \"./tr\";\r\nimport StringsES from \"./es\";\r\n\r\nconst strings = new LocalizedStrings({\r\n  en: StringsEN,\r\n  de: StringsDE,\r\n  it: StringsIT,\r\n  tr: StringsTR,\r\n  es: StringsES,\r\n})\r\n\r\nexport default strings;","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport { logoutUser, isLoggedIn, getIdentity } from \"../../auth\";\r\nimport {\r\n  Nav,\r\n  Main,\r\n  Footer,\r\n  LinksWrapper,\r\n  Link,\r\n  HeaderBrandLogo,\r\n  NavbarExtension,\r\n  LanguageSelect,\r\n} from \"./LayoutStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst Layout = (props) => {\r\n  const [loggedIn, setLoggedIn] = useState(isLoggedIn());\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\r\n    localStorage.getItem(\"language\") || \"en\"\r\n  );\r\n\r\n  strings.setLanguage(selectedLanguage);\r\n\r\n  const logout = () => {\r\n    logoutUser();\r\n  }\r\n\r\n  const onLanguageChange = (event) => {\r\n    const newLanguage = event.target.value;\r\n    localStorage.setItem(\"language\", newLanguage);\r\n    setSelectedLanguage(newLanguage);\r\n    strings.setLanguage(newLanguage);\r\n    window.location.reload();\r\n  }\r\n\r\n  window.addEventListener(\"storage\", () => setLoggedIn(isLoggedIn()));\r\n\r\n  return (\r\n    <>\r\n      {loggedIn && (\r\n        <NavbarExtension>\r\n          <LinksWrapper>\r\n            <Link to=\"#\" onClick={logout}>{getIdentity().username}</Link>\r\n            <Link to=\"/create_matches/bergruen\">{strings.createMatchesLink}</Link>\r\n            <Link to=\"/players/add\">{strings.addPlayerLink}</Link>\r\n          </LinksWrapper>\r\n        </NavbarExtension>\r\n      )}\r\n      <Nav>\r\n        <RouterLink to=\"/\">\r\n          <HeaderBrandLogo src={getImagePath(\"logo_small.png\")} />\r\n        </RouterLink>\r\n        <LinksWrapper>\r\n          <Link to=\"/ranking/bergruen\">{strings.rankingLink}</Link>\r\n          <Link to=\"/active_matches/bergruen\">{strings.matchesLink}</Link>\r\n        </LinksWrapper>\r\n      </Nav>\r\n\r\n      <Main>{props.children}</Main>\r\n\r\n      <Footer>\r\n        <LinksWrapper>\r\n          <Link to=\"/legal_notice\">{strings.legalNoticeLink}</Link>\r\n          <Link to=\"/privacy_policy\">{strings.privacyPolicyLink}</Link>\r\n          <LanguageSelect onChange={onLanguageChange} value={selectedLanguage}>\r\n            <option value=\"en\">English</option>\r\n            <option value=\"de\">Deutsch</option>\r\n            <option value=\"it\">Italiano</option>\r\n            <option value=\"tr\">Türk</option>\r\n            <option value=\"es\">Español</option>\r\n          </LanguageSelect>\r\n        </LinksWrapper>\r\n      </Footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ClassIcon = styled.img`\r\n  border-radius: 50%;\r\n  width: ${props => props.width}px;\r\n  margin-right: ${props => props.marginRight}px;\r\n  border: 4px solid rgba(202, 202, 202, 0.4);\r\n`\r\n\r\nconst RouterLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: unset;\r\n`\r\n\r\nconst CenteredSpan = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n`\r\n\r\nconst H2 = styled.h2`\r\n  color: #20123a;\r\n  border-bottom: 1px solid #cacaca;\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  flex-flow: ${props => props.flexFlow};\r\n  justify-content: ${props => props.justifyContent};\r\n  align-items: ${props => props.alignItems};\r\n`\r\n\r\nconst Button = styled.button`\r\n  transition: background-color 0.2s;\r\n  transition: border-color 0.1s;\r\n  background: white;\r\n  color: black;\r\n  border: 1px solid #cacaca;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  width: ${props => props.width};\r\n  margin: ${props => props.margin};\r\n  padding: ${props => props.padding};\r\n  font-size: ${props => props.fontSize};\r\n\r\n  &:hover {\r\n    background-color: ${props => props.backgroundColorOnHover};\r\n    border-color: ${props => props.borderColorOnHover};\r\n  }\r\n`\r\n\r\nconst Text = styled.div`\r\n  p, span, ul {\r\n    color: #292f33;\r\n    text-align: justify;\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n    margin: 0px 0px;\r\n    padding: 0px 0px;\r\n\r\n    li:not(:first-child) {\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  ClassIcon,\r\n  RouterLink,\r\n  CenteredSpan,\r\n  H2,\r\n  Flex,\r\n  Button,\r\n  Text,\r\n}\r\n","import React from \"react\";\r\nimport { NavbarExtension as NavbarExtensionStyle, Link } from \"../Layout/LayoutStyles\";\r\nimport { CenteredSpan } from \"./CommonStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst NavbarExtension = ({currentServer, url}) => {\r\n  return (\r\n    <NavbarExtensionStyle>\r\n      <Link\r\n        isactive={(currentServer === \"bergruen\") ? true : false}\r\n        to={`/${url}/bergruen`}\r\n      >\r\n        Bergruen\r\n      </Link>\r\n      <Link\r\n        isactive={(currentServer === \"luxplena\") ? true : false}\r\n        to={`/${url}/luxplena`}\r\n      >\r\n        LuxPlena\r\n      </Link>\r\n    </NavbarExtensionStyle>\r\n  )\r\n}\r\n\r\nconst FetchStateMessage = ({loading, error, children}) => {\r\n  if (loading) {\r\n    return <CenteredSpan>{strings.loadingMessage}</CenteredSpan>\r\n  } else if (error) {\r\n    return <CenteredSpan>{strings.errorMessage}</CenteredSpan>\r\n  } else {\r\n    return children;\r\n  }\r\n}\r\n\r\nexport {\r\n  NavbarExtension,\r\n  FetchStateMessage,\r\n}","import styled from \"styled-components\";\r\n\r\nconst TableWrapper = styled.div`\r\n  overflow-x: auto;\r\n`\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n\r\n  th, td {\r\n    padding: 10px 15px;\r\n  }\r\n`\r\n\r\nconst TableHeader = styled.th`\r\n  text-align: ${props => props.align};\r\n  white-space: nowrap;\r\n`\r\n\r\nconst TableData = styled.td`\r\n  text-align: ${props => props.align};\r\n  white-space: nowrap;\r\n`\r\n\r\nconst TableRow = styled.tr`\r\n  background-color: ${props => props.even ? \"white\" : \"#F8F8F8\"};\r\n`\r\n\r\nexport {\r\n  TableWrapper,\r\n  Table,\r\n  TableHeader,\r\n  TableData,\r\n  TableRow,\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getRanking } from \"../../fetch\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { NavbarExtension, FetchStateMessage} from \"../Common/Common\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport { ClassIcon, RouterLink, CenteredSpan, Flex } from \"../Common/CommonStyles\";\r\nimport {\r\n  TableWrapper,\r\n  Table,\r\n  TableHeader,\r\n  TableData,\r\n  TableRow,\r\n} from \"./RankingStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst Ranking = (props) => {\r\n  document.title = strings.rankingLink;\r\n  const currentServer = props.match.params.server;\r\n  const [players, setPlayers] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setPlayers(null);\r\n    let res;\r\n    getRanking(currentServer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        setHasError(true);\r\n        console.error(json.msg)\r\n      } else {\r\n        setPlayers(json);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [currentServer])\r\n\r\n  return (\r\n    <>\r\n      <NavbarExtension url=\"ranking\" currentServer={currentServer} />\r\n\r\n      <ContentWrapper>\r\n        <FetchStateMessage loading={loading} error={hasError}>\r\n          {(players && players.length > 0) && (\r\n            <TableWrapper>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <TableHeader align=\"center\">{strings.rank}</TableHeader>\r\n                    <TableHeader align=\"center\">{strings.points}</TableHeader>\r\n                    <TableHeader align=\"left\">{strings.name}</TableHeader>\r\n                    <TableHeader align=\"center\">{strings.level}</TableHeader>\r\n                    <TableHeader align=\"center\">{strings.winsLossesDraws}</TableHeader>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {players.sort((a, b) => b.points - a.points).map((player, index) => {\r\n                    let rank = index + 1;\r\n                    let rankColor;\r\n                    switch (rank) {\r\n                      case 1:\r\n                        rankColor = \"#FFD700\";\r\n                        break;\r\n                      case 2:\r\n                        rankColor = \"#C0C0C0\";\r\n                        break;\r\n                      case 3:\r\n                        rankColor = \"#cd7f32\";\r\n                        break;\r\n                      default:\r\n                        rankColor = \"#708090\"; \r\n                    }\r\n\r\n                    // Firefox needs y to be 30, chrome 25.\r\n                    // InstallTrigger is Firefox API for addons\r\n                    const y = typeof InstallTrigger !== 'undefined' ? \"30\" : \"25\";\r\n\r\n                    return (\r\n                      <TableRow key={player.name} even={index % 2}>\r\n                        <TableData align=\"center\">\r\n                          <svg width={50} height={50}>\r\n                            <path d=\"M25,0 L50,25 L25,50 L0,25 L25,0 Z\" fill={rankColor} />\r\n                            <text textAnchor=\"middle\" alignmentBaseline=\"central\" x=\"25\" y={y} fill=\"white\">{rank}</text>\r\n                          </svg>\r\n                        </TableData>\r\n                        <TableData align=\"center\">{player.points}</TableData>\r\n                        <TableData align=\"left\">\r\n                          <Flex flexFlow=\"row\" alignItems=\"center\" >\r\n                            <ClassIcon\r\n                              width={38}\r\n                              marginRight={5}\r\n                              src={getImagePath(`class_icons/male_${player.class.key}.png`)}\r\n                            />\r\n                            <RouterLink\r\n                              to={`/players/${player.server.key}/${player.name}`}\r\n                            >\r\n                              {player.name}\r\n                            </RouterLink>\r\n                          </Flex>\r\n                        </TableData>\r\n                        <TableData align=\"center\">{player.level_land} / {player.level_sea}</TableData>\r\n                        <TableData align=\"center\">{player.wins} : {player.losses} : {player.draws}</TableData>\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </TableWrapper>\r\n          )}\r\n          {(players && players.length === 0) && (\r\n            <CenteredSpan>{strings.noPlayersFound}</CenteredSpan>\r\n          )}\r\n        </FetchStateMessage>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ranking;","import breakpoint from \"../../breakpoint\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Banner = styled.div`\r\n  background-image: url(${getImagePath(\"banner_compressed.jpg\")});\r\n  background-size: cover;\r\n  background-position-y: 40%;\r\n  background-position-x: center;\r\n  width: 100%;\r\n  height: 350px;\r\n  position: relative;\r\n  border-bottom: 1px solid #cacaca;\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-column-gap: 40px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  grid-row: ${props => props.rowS};\r\n  grid-column: ${props => props.startS} / ${props => props.endS};\r\n  ${breakpoint(\"lg\")`\r\n    grid-row: ${props => props.row};\r\n    grid-column: ${props => props.start} / ${props => props.end};\r\n  `}\r\n`\r\n\r\nexport {\r\n  Banner,\r\n  Grid,\r\n  GridItem,\r\n}","import React from \"react\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { H2, Text } from \"../Common/CommonStyles\";\r\nimport {\r\n  Banner,\r\n  Grid,\r\n  GridItem,\r\n} from \"./LandingPageStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst LandingPage = () => {\r\n  document.title = strings.homepage;\r\n  const startDate = new Date(\"Dec 24, 2042 00:00:00\")\r\n\r\n  return (\r\n    <>\r\n      <Banner />\r\n      <ContentWrapper>\r\n        <Grid>\r\n          <GridItem row={1} start={1} end={3} rowS={1} startS={1} endS={2}>\r\n            <H2>{strings.aboutHeader}</H2>\r\n            <Text><p>{strings.formatString(strings.aboutText1, {date: startDate.toLocaleDateString()})}</p></Text>\r\n            <Text>\r\n              <span>{strings.aboutTextChange}</span><br />\r\n              <span>{strings.aboutChange1}</span><br />\r\n              <span>{strings.aboutChange2}</span><br />\r\n              <span>{strings.aboutChange3}</span><br />\r\n            </Text>\r\n          </GridItem>\r\n\r\n          <GridItem row={2} start={1} end={2} rowS={2} startS={1} endS={2}>\r\n            <H2>{strings.rulesHeader}</H2>\r\n            <Text>\r\n              <ul>\r\n                <li><b>1.</b> {strings.rule1}</li>\r\n                <li><b>2.</b> {strings.rule2}</li>\r\n                <li><b>3.</b> {strings.rule3}</li>\r\n                <li><b>4.</b> {strings.rule4}</li>\r\n                <li><b>5.</b> {strings.rule5}</li>\r\n                <li><b>6.</b> {strings.rule6}</li>\r\n                <li><b>7.</b> {strings.rule7}</li>\r\n              </ul>\r\n              <p>{strings.rulesInfoText}</p>\r\n            </Text>\r\n          </GridItem>\r\n\r\n          <GridItem row={2} start={2} end={3} rowS={3} startS={1} endS={2}>\r\n            <H2>{strings.participateHeader}</H2>\r\n            <Text>\r\n              <p>{strings.participateText1}</p>\r\n              <p>{strings.participateText2}</p>\r\n              <p>{strings.participateText3}</p>\r\n              <p>{strings.participateText4}</p>\r\n            </Text>\r\n          </GridItem>\r\n\r\n          <GridItem row={3} start={1} end={3} rowS={4} startS={1} endS={2}>\r\n            <H2>{strings.prizesHeader}</H2>\r\n            <Text>\r\n              <p>{strings.prizesText1}</p>\r\n              <ul>\r\n                <li>{strings.prizesText2}</li>\r\n                <li>{strings.prizesText3}</li>\r\n              </ul>\r\n            </Text>\r\n          </GridItem>\r\n        </Grid>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LandingPage;","import styled from \"styled-components\";\r\nimport breakpoint from \"../../breakpoint\";\r\nimport { getImagePath } from \"../../helpers\";\r\n\r\nconst Line = styled.hr`\r\n  border: none;\r\n  border-bottom: 1px solid #cacaca;\r\n  margin: 15px 0px;\r\n  width: 100%;\r\n  ${breakpoint(\"md\")`\r\n    width: 50%;\r\n  `}\r\n  ${breakpoint(\"lg\")`\r\n    width: 60%;\r\n  `}\r\n`\r\n\r\nconst VersusWrapper = styled.div`\r\n  background-image: url(${getImagePath(\"swords.png\")});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: 60px 60px;\r\n  padding: 40px 50px;\r\n  ${breakpoint(\"md\")`\r\n    padding: 40px 70px;\r\n  `}\r\n  ${breakpoint(\"lg\")`\r\n    padding: 40px 100px;\r\n  `}\r\n  ${breakpoint(\"xl\")`\r\n    padding: 40px 120px;\r\n  `}\r\n`\r\n\r\nconst VersusText = styled.span`\r\n  color: #292f33;\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n`\r\n\r\nconst PlayerSub = styled.span`\r\n  white-space: nowrap;\r\n  font-size: 11px;\r\n`\r\n\r\nconst EloGain = styled.span`\r\n  color: green;\r\n`\r\n\r\n\r\nexport {\r\n  Line,\r\n  VersusWrapper,\r\n  VersusText,\r\n  PlayerSub,\r\n  EloGain,\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getActiveMatches, setActiveMatchWinner, deleteActiveMatches } from \"../../fetch\";\r\nimport { ContentWrapper} from \"../Layout/LayoutStyles\";\r\nimport { NavbarExtension, FetchStateMessage } from \"../Common/Common\";\r\nimport { calculateEloGain } from \"../../helpers\";\r\nimport { ClassIcon, RouterLink, CenteredSpan, Flex, Button } from \"../Common/CommonStyles\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport { isLoggedIn } from \"../../auth\";\r\nimport {\r\n  Line,\r\n  VersusWrapper,\r\n  VersusText,\r\n  PlayerSub,\r\n  EloGain,\r\n} from \"./ActiveMatchesStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst Player = ({player, p2_points}) => {\r\n  return (\r\n    <Flex\r\n      flexFlow=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <ClassIcon\r\n        width={50}\r\n        marginRight={0}\r\n        src={getImagePath(`class_icons/male_${player.class.key}.png`)}\r\n      />\r\n      <RouterLink to={`/players/${player.server.key}/${player.name}`}>\r\n        {player.name}\r\n      </RouterLink>\r\n      <Flex flexFlow=\"column\" alignItems=\"center\">\r\n        <PlayerSub>\r\n          {strings.points}: {player.points}\r\n          <EloGain> (+{calculateEloGain(player.points, p2_points)})</EloGain>\r\n        </PlayerSub>\r\n        <PlayerSub>{strings.level}: {player.level_land} / {player.level_sea}</PlayerSub>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\n\r\nconst ActiveMatches = (props) => {\r\n  document.title = strings.matchesLink;\r\n\r\n  const currentServer = props.match.params.server;\r\n  const [matches, setMatches] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setMatches(null);\r\n\r\n    let res;\r\n    getActiveMatches(currentServer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        setHasError(true);\r\n        console.error(json.msg)\r\n      } else {\r\n        setMatches(json);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [currentServer])\r\n\r\n  const setWinner = (matchId, winner) => {\r\n    /*\r\n      0: Player 1\r\n      1: Player 2\r\n      2: Draw\r\n    */\r\n    let res;\r\n    setActiveMatchWinner(currentServer, matchId, winner).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg)\r\n      } else {\r\n        // delete match from matches\r\n        setMatches(matches.filter(m => m.id !== matchId))\r\n      }\r\n    });\r\n  }\r\n\r\n  const deleteAllMatches = () => {\r\n    if (!window.confirm(strings.deleteMatchesConfirm1)) {\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(strings.deleteMatchesConfirm2)) {\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(strings.deleteMatchesConfirm3)) {\r\n      return;\r\n    }\r\n\r\n    let res;\r\n    deleteActiveMatches(currentServer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg);\r\n      } else {\r\n        setMatches([]);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavbarExtension url=\"active_matches\" currentServer={currentServer} />\r\n\r\n      <ContentWrapper>\r\n        <FetchStateMessage loading={loading} error={hasError}>\r\n          {(matches && matches.length > 0) && (\r\n            <Flex\r\n              flexFlow=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {isLoggedIn() && (\r\n                <Button\r\n                  padding=\"5px 15px\"\r\n                  backgroundColorOnHover=\"tomato\"\r\n                  broderColorOnHover=\"orangered\"\r\n                  margin=\"0px 0px 20px 0px\"\r\n                  onClick={deleteAllMatches}\r\n                >\r\n                  {strings.deleteMatchesButton}\r\n                </Button>\r\n              )}\r\n              {matches.map((match, index) => {\r\n                return (\r\n                  <React.Fragment key={match.id}>\r\n                    {index !== 0 && (\r\n                      <Line />\r\n                    )}\r\n                    <Flex flexFlow=\"row\" alignItems=\"center\">\r\n                      <Player player={match.player_1} p2_points={match.player_2.points} />\r\n              \r\n                      <VersusWrapper>\r\n                        <VersusText>VS</VersusText>\r\n                      </VersusWrapper>\r\n              \r\n                      <Player player={match.player_2} p2_points={match.player_1.points} />\r\n                    </Flex>\r\n                    {isLoggedIn() && (\r\n                      <Flex flexFlow=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\">\r\n                        <Button\r\n                          backgroundColorOnHover=\"#00cc6d\"\r\n                          borderColorOnHover=\"green\"\r\n                          padding=\"5px 15px\"\r\n                          margin=\"0px 10px\"\r\n                          onClick={() => setWinner(match.id, 0)}\r\n                        >\r\n                          {match.player_1.name}\r\n                        </Button>\r\n                        <Button\r\n                          backgroundColorOnHover=\"orange\"\r\n                          borderColorOnHover=\"darkorange\"\r\n                          padding=\"5px 15px\"\r\n                          margin=\"0px 10px\"\r\n                          onClick={() => setWinner(match.id, 2)}\r\n                        >\r\n                          {strings.draw}\r\n                        </Button>\r\n                        <Button\r\n                          backgroundColorOnHover=\"#00cc6d\"\r\n                          borderColorOnHover=\"green\"\r\n                          padding=\"5px 15px\"\r\n                          margin=\"0px 10px\"\r\n                          onClick={() => setWinner(match.id, 1)}\r\n                        >\r\n                          {match.player_2.name}\r\n                        </Button>\r\n                      </Flex>\r\n                    )}\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n            </Flex>\r\n          )}\r\n          {(matches && matches.length === 0) && (\r\n            <CenteredSpan>{strings.noMatchesFound}</CenteredSpan>\r\n          )}\r\n        </FetchStateMessage>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ActiveMatches;\r\n","import styled from \"styled-components\";\r\nimport breakpoint from \"../../breakpoint\";\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-column-gap: 40px;\r\n  grid-row-gap: 40px;\r\n  grid-template-columns: 100%;\r\n  ${breakpoint(\"sm\")`\r\n    grid-template-columns: 30% 65%;\r\n  `}\r\n`\r\n\r\nconst PlayerInfoColumn = styled.div`\r\n  grid-column: 1;\r\n`\r\n\r\nconst PlayerInfoName = styled.span`\r\n  font-size: 18px;\r\n  letter-spacing: 1.5px;\r\n`\r\n\r\nconst PlayerInfoTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 5px;\r\n\r\n  td {\r\n    padding: 5px 10px;\r\n  }\r\n`\r\n\r\nconst MatchHistoryColumn = styled.div`\r\n  grid-column: 1;\r\n  ${breakpoint(\"sm\")`\r\n    grid-column: 2;\r\n  `}\r\n  display: flex;\r\n  flex-flow: column;\r\n  overflow-x: auto;\r\n`\r\n\r\nconst MatchHistoryTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n\r\n  td, th {\r\n    text-align: left;\r\n    padding: 10px 15px;\r\n  }\r\n`\r\n\r\nconst ResultSpan = styled.span`\r\n  color: ${props => props.color};\r\n`\r\n\r\nconst TableRow = styled.tr`\r\n  background-color: ${props => props.even ? \"white\" : \"#F8F8F8\"};\r\n`\r\n\r\nexport {\r\n  Grid,\r\n  PlayerInfoColumn,\r\n  PlayerInfoTable,\r\n  PlayerInfoName,\r\n  MatchHistoryColumn,\r\n  ResultSpan,\r\n  TableRow,\r\n  MatchHistoryTable,\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getPlayer, updateMatchWinner } from \"../../fetch\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport { FetchStateMessage } from \"../Common/Common\";\r\nimport { Flex, ClassIcon, RouterLink, CenteredSpan, H2, Button } from \"../Common/CommonStyles\";\r\nimport {\r\n  Grid,\r\n  PlayerInfoColumn,\r\n  PlayerInfoTable,\r\n  PlayerInfoName,\r\n  MatchHistoryColumn,\r\n  ResultSpan,\r\n  TableRow,\r\n  MatchHistoryTable\r\n} from \"./PlayerProfileStyles\";\r\nimport { isLoggedIn } from \"../../auth\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst PlayerProfile = (props) => {\r\n  const currentServer = props.match.params.server;\r\n  const name = props.match.params.name;\r\n\r\n  const [player, setPlayer] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const [editId, setEditId] = useState(null);\r\n  const [selectedWinner, setSelectedWinner] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setPlayer(null);\r\n\r\n    let res;\r\n    getPlayer(currentServer, name).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        setHasError(true);\r\n        console.error(json.msg)\r\n      } else {\r\n        setPlayer(json);\r\n        document.title = strings.formatString(strings.playerProfile, {\r\n          name: json.name,\r\n        });\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [currentServer, name])\r\n\r\n  const enableMatchEdit = (match, opponent) => {\r\n    // A match can be edited if it is the last one of each player\r\n    // Check if its the last one of the current player profile\r\n    const playerMatchIds = [];\r\n    player.matches.forEach(m => playerMatchIds.push(m.id));\r\n    const latestMatchId = Math.max(...playerMatchIds);\r\n\r\n    if (match.id !== latestMatchId) {\r\n      alert(strings.notLatestMatchError);\r\n      return;\r\n    }\r\n\r\n    // get second player matches\r\n    getPlayer(currentServer, opponent.name)\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      const opponentMatchIds = [];\r\n      json.matches.forEach(m => opponentMatchIds.push(m.id));\r\n      const opponentLatestMatchId = Math.max(...opponentMatchIds);\r\n\r\n      if (opponentLatestMatchId === match.id) {\r\n        setEditId(match.id);\r\n        setSelectedWinner(match.winner.value.toString());\r\n      } else {\r\n        alert(strings.notLatestMatchError);\r\n      }\r\n    });\r\n  }\r\n\r\n  const onWinnerChange = (event) => {\r\n    setSelectedWinner(event.target.value);\r\n    const newWinner = parseInt(event.target.value);\r\n  \r\n    let res;\r\n    updateMatchWinner(editId, newWinner).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json();\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg);\r\n      } else {\r\n        // update local list to reflect changes by server\r\n        setPlayer(json.user)\r\n        setEditId(null);\r\n        setSelectedWinner(null);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <FetchStateMessage loading={loading} error={hasError}>\r\n        {player && (\r\n          <Grid>\r\n            <PlayerInfoColumn>\r\n              <Flex flexFlow=\"row\" alignItems=\"center\">\r\n                <ClassIcon\r\n                  width={50}\r\n                  marginRight={5}\r\n                  src={getImagePath(`class_icons/male_${player.class.key}.png`)}\r\n                />\r\n                <PlayerInfoName>{player.name}</PlayerInfoName>\r\n              </Flex>\r\n\r\n              <PlayerInfoTable>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{strings.server}</td>\r\n                    <td>{player.server.value}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.level}</td>\r\n                    <td>{player.level_land} / {player.level_sea}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.guild}</td>\r\n                    <td>{player.guild || \"/\"}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.points}</td>\r\n                    <td>{player.points}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.wins}</td>\r\n                    <td>{player.wins}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.losses}</td>\r\n                    <td>{player.losses}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{strings.draws}</td>\r\n                    <td>{player.draws}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </PlayerInfoTable>\r\n            </PlayerInfoColumn>\r\n\r\n            <MatchHistoryColumn>\r\n              <H2>{strings.matchesHeader}</H2>\r\n              {(player.matches.length >= 1)\r\n              ? (\r\n                <MatchHistoryTable>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{strings.opponent}</th>\r\n                      <th>{strings.result}</th>\r\n                      <th>{strings.date}</th>\r\n                      {isLoggedIn() && (\r\n                        <th>{strings.edit}</th>\r\n                      )}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {player.matches.sort((a, b) => b.id - a.id).map((match, index) => {\r\n                      let opponent;\r\n                      let playerKey;\r\n                      if (match.player_1.name === player.name) {\r\n                        opponent = match.player_2;\r\n                        playerKey = \"player_1\";\r\n                      } else {\r\n                        opponent = match.player_1;\r\n                        playerKey = \"player_2\";\r\n                      }\r\n\r\n                      let result;\r\n                      let pointsChange = match[playerKey].points_change.toString();\r\n                      let pointsOperator = (pointsChange > 0) ? \"+\" : \"\";\r\n\r\n                      if (match.winner.value === 2) {\r\n                        result = <span>{strings.draw} (<ResultSpan color=\"orange\">{`${pointsOperator}${pointsChange}`}</ResultSpan>)</span>\r\n                      } else if ((match.winner.value === 0 && playerKey === \"player_1\") || (match.winner.value === 1 && playerKey === \"player_2\")) {\r\n                        result = <span>{strings.win} (<ResultSpan color=\"green\">{`${pointsOperator}${pointsChange}`}</ResultSpan>)</span>\r\n                      } else {\r\n                        result = <span>{strings.loss} (<ResultSpan color=\"red\">{`${pointsOperator}${pointsChange}`}</ResultSpan>)</span>\r\n                      }\r\n\r\n                      // edit is enabled for this match\r\n                      if (editId === match.id) {\r\n                        console.log(selectedWinner);\r\n                        result = (\r\n                          <select\r\n                            value={selectedWinner}\r\n                            onChange={onWinnerChange}\r\n                          >\r\n                            <option value=\"0\">{match.player_1.name} {strings.win}</option>\r\n                            <option value=\"1\">{match.player_2.name} {strings.win}</option>\r\n                            <option value=\"2\">{strings.draw}</option>\r\n                          </select>\r\n                        )\r\n                      }\r\n\r\n                      const matchDate = new Date(match.date).toLocaleString();\r\n\r\n                      return (\r\n                        <TableRow even={index % 2}>\r\n                          <td>\r\n                            <Flex flexFlow=\"row\" alignItems=\"center\">\r\n                              <ClassIcon\r\n                                width={38}\r\n                                marginRight={5}\r\n                                src={getImagePath(`class_icons/male_${opponent.class.key}.png`)}\r\n                              />\r\n                              <RouterLink to={`/players/${match.server.key}/${opponent.name}`}>{opponent.name}</RouterLink>\r\n                            </Flex>\r\n                          </td>\r\n                          <td>{result}</td>\r\n                          <td>{matchDate}</td>\r\n                          {isLoggedIn() && (\r\n                            <td>\r\n                              <Button\r\n                                backgroundColorOnHover=\"#00cc6d\"\r\n                                borderColorOnHover=\"green\"\r\n                                padding=\"3px 10px\"\r\n                                onClick={() => enableMatchEdit(match, opponent)}\r\n                              >\r\n                                {strings.edit}\r\n                              </Button>\r\n                            </td>\r\n                          )}\r\n                        </TableRow>\r\n                      )\r\n                    })}\r\n                  </tbody>\r\n                </MatchHistoryTable>\r\n              )\r\n              : (\r\n                <CenteredSpan>{strings.noMatchesPlayed}</CenteredSpan>\r\n              )}\r\n            </MatchHistoryColumn>\r\n          </Grid>\r\n        )}\r\n      </FetchStateMessage>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default PlayerProfile;","import React, { useState } from \"react\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { login } from \"../../fetch\";\r\nimport { loginUser } from \"../../auth\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst Login = (props) => {\r\n  document.title = strings.login;\r\n\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  const loginRequest = (event) => {\r\n    event.preventDefault();\r\n\r\n    let res;\r\n    login(username, password).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json();\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg);\r\n      } else {\r\n        loginUser(json.access_token);\r\n        props.history.push(\"/\")\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <form onSubmit={loginRequest}>\r\n        <input\r\n          value={username}\r\n          onChange={e => setUsername(e.target.value)}\r\n          placeholder={strings.username}\r\n        />\r\n\r\n        <input\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          placeholder={strings.password}\r\n        />\r\n\r\n        <button type=\"submit\">{strings.login}</button>\r\n      </form>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default Login;","import styled from \"styled-components\";\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-column-gap: 50px;\r\n`\r\n\r\nconst SearchPlayerColumn = styled.div`\r\n  grid-column: 1 / 2;\r\n  grid-row: 1 / 2;\r\n`\r\n\r\nconst AddedPlayerColumn = styled.div`\r\n  grid-column: 2 / 3;\r\n  grid-row: 1 / 3;\r\n`\r\n\r\nconst ChatlogPlayerColumn = styled.div`\r\n  grid-column: 1 / 2;\r\n  grid-row: 2 / 3;\r\n`\r\n\r\nconst ChatlogWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  * {\r\n    flex-grow: 1;\r\n  }\r\n`\r\n\r\nconst AddedPlayerList = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  > div:not(:first-child) {\r\n    border-top: 1px solid #cacaca;\r\n  }\r\n`\r\n\r\nconst SearchResults = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n\r\n  > div:not(:first-child) {\r\n    border-top: 1px solid #cacaca;\r\n  }\r\n`\r\n\r\nconst PlayerWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 5px 0px;\r\n\r\n  &:hover {\r\n    background-color: #F8F8F8;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  border-radius: 5px;\r\n  border: 1px solid #cacaca;  \r\n  padding: 5px 10px;\r\n`\r\n\r\nconst KeywordInput = styled.input`\r\n  border-radius: 5px;\r\n  border: 1px solid #cacaca;  \r\n  padding: 5px 10px;\r\n`\r\n\r\nconst SearchInputWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n  > input {\r\n    flex-grow: 1;\r\n  }\r\n`\r\n\r\nconst ChatlogTextArea = styled.textarea`\r\n  height: 400px;\r\n  border-radius: 5px;\r\n  border: 1px solid #cacaca;\r\n  margin-top: 4px;\r\n`\r\n\r\nexport {\r\n  Grid,\r\n  SearchPlayerColumn,\r\n  AddedPlayerColumn,\r\n  ChatlogPlayerColumn,\r\n  ChatlogWrapper,\r\n  AddedPlayerList,\r\n  SearchResults,\r\n  PlayerWrapper,\r\n  SearchInput,\r\n  KeywordInput,\r\n  SearchInputWrapper,\r\n  ChatlogTextArea,\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getPlayers, createMatches } from \"../../fetch\";\r\nimport { ContentWrapper} from \"../Layout/LayoutStyles\";\r\nimport { NavbarExtension, FetchStateMessage } from \"../Common/Common\";\r\nimport { H2, ClassIcon, Button } from \"../Common/CommonStyles\";\r\nimport { getImagePath } from \"../../helpers\";\r\nimport {\r\n  Grid,\r\n  SearchPlayerColumn,\r\n  AddedPlayerColumn,\r\n  ChatlogPlayerColumn,\r\n  ChatlogWrapper,\r\n  AddedPlayerList,\r\n  SearchResults,\r\n  PlayerWrapper,\r\n  SearchInput,\r\n  KeywordInput,\r\n  SearchInputWrapper,\r\n  ChatlogTextArea,\r\n} from \"./CreateMatchesStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst CreateMatches = (props) => {\r\n  document.title = strings.createMatchesLink;\r\n\r\n  const currentServer = props.match.params.server;\r\n  const [players, setPlayers] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [searchString, setSearchString] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [addedPlayers, setAddedPlayers] = useState([]);\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [chatlog, setChatlog] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setPlayers(null);\r\n    setSearchResults([]);\r\n    setAddedPlayers([]);\r\n\r\n    let res;\r\n    getPlayers(currentServer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json()\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg)\r\n      } else {\r\n        setPlayers(json);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, [currentServer])\r\n\r\n  const onSearch = (event) => {\r\n    setSearchString(event.target.value);\r\n  \r\n    if (event.target.value.length <= 1) {\r\n      setSearchResults([]);\r\n    } else {\r\n      const matchingPlayers = players.filter(p => p.name.toLowerCase().includes(event.target.value.toLowerCase()));\r\n      setSearchResults(matchingPlayers);\r\n    }\r\n  }\r\n\r\n  const onSearchKeyUp = (event) => {\r\n    if (event.keyCode === 13) { // enter\r\n      event.preventDefault();\r\n      addPlayer(searchResults[0] || null)\r\n    }\r\n  }\r\n\r\n  const addPlayer = (player) => {\r\n    if (!addedPlayers.includes(player) && player !== null) {\r\n      setAddedPlayers([...addedPlayers, player]);\r\n    }\r\n    setSearchResults([]);\r\n    setSearchString(\"\");\r\n  }\r\n\r\n  const removePlayer = (player) => {\r\n    setAddedPlayers(addedPlayers.filter(p => p !== player));\r\n  }\r\n\r\n  const parseChatlog = () => {\r\n    const regex = new RegExp(`(\\\\w{1,13}):\\\\s(${keyword})$`, \"i\")\r\n\r\n    const notFound = [];\r\n    const playerObjects = [];\r\n\r\n    chatlog.split(\"\\n\").forEach(line => {\r\n      const match = line.trimRight().match(regex);\r\n      if (match) {\r\n        const playerName = match[1];\r\n        const playerObj = players.filter(p => p.name === playerName)[0] || null;\r\n\r\n        if (playerObj && !addedPlayers.includes(playerObj)) {\r\n          playerObjects.push(playerObj);\r\n        } else if (playerObj === null) {\r\n          notFound.push(playerName);\r\n        }\r\n      }\r\n    })\r\n\r\n    setAddedPlayers([...addedPlayers, ...playerObjects]);\r\n    if (notFound.length >= 1) {\r\n      alert(strings.formatString(strings.notFound, {\r\n        names: notFound.toString(),\r\n      }))\r\n    }\r\n  }\r\n\r\n  const startMatches = () => {\r\n    const ids = [];\r\n    addedPlayers.forEach(p => ids.push(p.id));\r\n\r\n    if (window.confirm(strings.startMatchesConfirm)) {\r\n      createMatches(currentServer, ids).then(res => {\r\n        if (res.status === 201) {\r\n          props.history.push(`/active_matches/${currentServer}`)\r\n        } else if (res.status === 423) {\r\n          alert(strings.alreadyActiveMatchesError)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavbarExtension url=\"create_matches\" currentServer={currentServer} />\r\n\r\n      <ContentWrapper>\r\n        <FetchStateMessage loading={loading} error={false}>\r\n          <Grid>\r\n            <SearchPlayerColumn>\r\n              <H2>{strings.addPlayerHeader}</H2>\r\n              <SearchInputWrapper>\r\n                <SearchInput\r\n                  type=\"text\"\r\n                  value={searchString}\r\n                  onChange={onSearch}\r\n                  onKeyUp={onSearchKeyUp}\r\n                  placeholder={strings.searchPlayerPlaceholder}\r\n                />\r\n              </SearchInputWrapper>\r\n              <SearchResults>\r\n                {searchResults.sort((a, b) => a.name.length - b.name.length).map(player => {\r\n                  return (\r\n                    <PlayerWrapper onClick={() => addPlayer(player)}>\r\n                      <ClassIcon\r\n                        width={38}\r\n                        marginRight={5}\r\n                        src={getImagePath(`class_icons/male_${player.class.key}.png`)}\r\n                      />\r\n                      <span>{player.name}</span>\r\n                    </PlayerWrapper>\r\n                  )\r\n                })}\r\n              </SearchResults>\r\n            </SearchPlayerColumn>\r\n\r\n            <ChatlogPlayerColumn>\r\n              <H2>{strings.addPlayerChatlogHeader}</H2>\r\n              <ChatlogWrapper>\r\n                <KeywordInput\r\n                  placeholder={strings.keywordPlaceholder}\r\n                  value={keyword}\r\n                  onChange={e => setKeyword(e.target.value)}\r\n                />\r\n                <ChatlogTextArea\r\n                  value={chatlog}\r\n                  onChange={e => setChatlog(e.target.value)}\r\n                />\r\n                <Button\r\n                  backgroundColorOnHover=\"lightblue\"\r\n                  borderColorOnHover=\"skyblue\"\r\n                  padding=\"5px 15px\"\r\n                  onClick={parseChatlog}\r\n                >\r\n                  {strings.parseButton}\r\n                </Button>\r\n              </ChatlogWrapper>\r\n            </ChatlogPlayerColumn>\r\n\r\n            <AddedPlayerColumn>\r\n              <H2>{strings.players} ({addedPlayers.length})</H2>\r\n              <AddedPlayerList>\r\n                {addedPlayers.map(player => {\r\n                    return (\r\n                      <PlayerWrapper onClick={() => removePlayer(player)}>\r\n                        <ClassIcon\r\n                          width={38}\r\n                          marginRight={5}\r\n                          src={getImagePath(`class_icons/male_${player.class.key}.png`)}\r\n                        />\r\n                        <span>{player.name}</span>\r\n                      </PlayerWrapper>\r\n                    )\r\n                  })}\r\n              </AddedPlayerList>\r\n            </AddedPlayerColumn>\r\n          </Grid>\r\n          <Button\r\n            backgroundColorOnHover=\"#00cc6d\"\r\n            borderColorOnHover=\"green\"\r\n            padding=\"5px 15px\"\r\n            margin=\"20px 0px\"\r\n            width=\"100%\"\r\n            fontSize=\"18px\"\r\n            onClick={startMatches}\r\n          >\r\n            {strings.startMatchesButton}\r\n          </Button>\r\n        </FetchStateMessage>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateMatches;","import React from \"react\";\r\nimport { H2, Text } from \"../Common/CommonStyles\"\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst PrivacyPolicy = () => {\r\n  document.title = strings.privacyPolicyLink;\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <H2>{strings.privacyPolicyHeader}</H2>\r\n      <Text>{strings.privacyPolicyText}</Text>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default PrivacyPolicy;","import React from \"react\";\r\nimport { H2, Text } from \"../Common/CommonStyles\"\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst LegalNotice = () => {\r\n  document.title = strings.legalNoticeLink;\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <H2>Legal Notice</H2>\r\n      <Text>\r\n        GIIKU GAMES GmbH is a company incorporated under German law.<br />\r\n        Mailing Address<br />\r\n        GIIKU GAMES GmbH<br />\r\n        Rehleitenweg 32b<br />\r\n        83026 Rosenheim<br />\r\n        Germany\r\n      </Text>\r\n\r\n      <H2>Corporate information</H2>\r\n      <Text>\r\n        Managing Director: Achim Kaspers<br />\r\n        Court of registry: district court of Traunstein<br />\r\n        Trade register number: HRB 27763<br />\r\n        VAT-ID.: DE323063583<br />\r\n        <br />\r\n        Phone: +49 (0) 89 / 210 205 715<br />\r\n        Fax: +49 (0) 89 / 210 205 799<br />\r\n        <br />\r\n        E-Mail:<br />\r\n        info (at) giikugames.com<br />\r\n        press (at) giikugames.com <br />\r\n      </Text>\r\n\r\n      <H2>Disclaimer</H2>\r\n      <Text>\r\n        Although every effort is made to present current and accurate information, we cannot assume responsibility for information from external links. The author of each web page is solely responsible for the content of that page. \r\n      </Text>\r\n\r\n      <H2>Content</H2>\r\n      <Text>\r\n        The author reserves the right not to be responsible for the topicality, correctness, completeness or quality of the information provided.<br />\r\n        Liability claims regarding damage caused by the use of any information provided, including any kind of information which is incomplete or incorrect, will therefore be rejected.\r\n      </Text>\r\n\r\n      <H2>Referrals and links</H2>\r\n      <Text>\r\n        The author is not responsible for any contents linked or referred to from his pages unless he has full knowledge of illegal contents and would be able to prevent the visitors of his site from viewing those pages.<br />\r\n        If any damage occurs by the use of information presented there, only the author of the respective pages might be liable, not the one who has linked to these pages.<br />\r\n        Furthermore the author is not liable for any postings or messages published by users of discussion boards, guestbooks or mailinglists provided on his page.<br />\r\n      </Text>\r\n\r\n      <H2>Copyright</H2>\r\n      <Text>\r\n        The author intended not to use any copyrighted material for the publication or, if not possible, to indicate the copyright of the respective object.<br />\r\n        The copyright for any material created by the author is reserved. Any duplication or use of objects such as diagrams, sounds or texts in other electronic or printed publications is not permitted without the author's agreement.<br /> \r\n      </Text>\r\n\r\n      <H2>Legal Validity of this Disclaimer</H2>\r\n      <Text>\r\n        This disclaimer is to be regarded as part of the internet publication which you were referred from. If sections or individual terms of this statement are not legal or correct, the content or validity of the other parts remain uninfluenced by this fact. \r\n      </Text>\r\n\r\n      <Text>\r\n        © 2019 GIIKU GAMES GmbH (limited liability)<br/>\r\n        All rights reserved.\r\n      </Text>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default LegalNotice;","import styled from \"styled-components\";\r\n\r\nconst InputGroup = styled.div`\r\n  display: flex;\r\n  flex-flow: row;\r\n  padding: 15px 20px;\r\n\r\n  > input, select {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  > label {\r\n    margin-right: 20px;\r\n  }\r\n`\r\n\r\nconst TextInput = styled.input`\r\n  border: 1px solid #cacaca;\r\n  border-radius: 4px;\r\n  padding: 5px 10px;\r\n`\r\n\r\nconst Select = styled.select`\r\n  border: 1px solid #cacaca;\r\n  border-radius: 4px;\r\n  padding: 5px 10px;\r\n`\r\n\r\nexport {\r\n  InputGroup,\r\n  TextInput,\r\n  Select\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getPlayer, updatePlayer } from \"../../fetch\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { FetchStateMessage } from \"../Common/Common\";\r\nimport { Button } from \"../Common/CommonStyles\";\r\nimport {\r\n  InputGroup,\r\n  TextInput,\r\n  Select\r\n} from \"./PlayerEditStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst PlayerEdit = (props) => {\r\n  document.title = strings.playerEdit;\r\n\r\n  const currentServer = props.match.params.server;\r\n  const currentPlayerName = props.match.params.name;\r\n\r\n  const [player, setPlayer] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const [levelLand, setLevelLand] = useState(null);\r\n  const [levelSea, setLevelSea] = useState(null);\r\n  const [characterClass, setCharacterClass] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let res;\r\n    getPlayer(currentServer, currentPlayerName).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json();\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        setHasError(true);\r\n        console.error(json.msg);\r\n      } else {\r\n        setPlayer(json);\r\n        setLevelLand(json.level_land);\r\n        setLevelSea(json.level_sea);\r\n        setCharacterClass(json.class.key);\r\n      }\r\n      setLoading(false);\r\n    })\r\n\r\n  }, [currentServer, currentPlayerName])\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPlayer = {\r\n      name: player.name,\r\n      guild: player.guild,\r\n      level_land: parseInt(levelLand),\r\n      level_sea: parseInt(levelSea),\r\n      character_class: characterClass,\r\n      server: player.server.key,\r\n      points: player.points,\r\n      wins: player.wins,\r\n      losses: player.losses,\r\n      draws: player.draws,\r\n    };\r\n\r\n    let res;\r\n    updatePlayer(currentServer, currentPlayerName, newPlayer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json();\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg);\r\n      } else {\r\n        props.history.push(`/players/${currentServer}/${currentPlayerName}`);\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <FetchStateMessage loading={loading} error={hasError}>\r\n        {player && (\r\n          <form onSubmit={onSubmit}>\r\n            <InputGroup>\r\n              <label>{strings.name}</label>\r\n              <TextInput disabled value={player.name} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.server}</label>\r\n              <Select disabled value={player.server}>\r\n                <option value=\"bergruen\">Bergruen</option>\r\n                <option value=\"luxplena\">LuxPlena</option>\r\n              </Select>\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.class}</label>\r\n              <Select value={characterClass} onChange={e => setCharacterClass(e.target.value)}>\r\n                <option value=\"noble\">Noble</option>\r\n                <option value=\"magic_knight\">Magic Knight</option>\r\n                <option value=\"court_magician\">Court Magician</option>\r\n\r\n                <option value=\"saint\">Saint</option>\r\n                <option value=\"priest\">Priest</option>\r\n                <option value=\"shaman\">Shaman</option>\r\n\r\n                <option value=\"mercenary\">Mercenary</option>\r\n                <option value=\"guardian_swordsman\">Guardian Swordsman</option>\r\n                <option value=\"gladiator\">Gladiator</option>\r\n\r\n                <option value=\"explorer\">Explorer</option>\r\n                <option value=\"sniper\">Sniper</option>\r\n                <option value=\"excavator\">Excavator</option>\r\n              </Select>\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.guild}</label>\r\n              <TextInput disabled value={player.guild} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.levelLand}</label>\r\n              <TextInput value={levelLand} onChange={e => setLevelLand(e.target.value)} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.levelSea}</label>\r\n              <TextInput value={levelSea} onChange={e => setLevelSea(e.target.value)} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.points}</label>\r\n              <TextInput disabled value={player.points} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.wins}</label>\r\n              <TextInput disabled value={player.wins} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.losses}</label>\r\n              <TextInput disabled value={player.losses} />\r\n            </InputGroup>\r\n\r\n            <InputGroup>\r\n              <label>{strings.draws}</label>\r\n              <TextInput disabled value={player.draws} />\r\n            </InputGroup>\r\n\r\n            <Button\r\n              backgroundColorOnHover=\"#00cc6d\"\r\n              borderColorOnHover=\"green\"\r\n              padding=\"5px 15px\"\r\n              margin=\"0px 10px\"\r\n              type=\"submit\"\r\n            >\r\n              {strings.saveButton}\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </FetchStateMessage>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default PlayerEdit;","import React, { useState } from \"react\";\r\nimport { addPlayer } from \"../../fetch\";\r\nimport { ContentWrapper } from \"../Layout/LayoutStyles\";\r\nimport { Button } from \"../Common/CommonStyles\";\r\nimport {\r\n  InputGroup,\r\n  TextInput,\r\n  Select\r\n} from \"./PlayerEditStyles\";\r\nimport strings from \"../../localization/strings\";\r\n\r\nconst PlayerAdd = (props) => {\r\n  document.title = strings.addPlayerLink;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [guild, setGuild] = useState(\"\");\r\n  const [levelLand, setLevelLand] = useState(\"1\");\r\n  const [levelSea, setLevelSea] = useState(\"1\");\r\n  const [characterClass, setCharacterClass] = useState(\"noble\");\r\n  const [server, setServer] = useState(\"bergruen\");\r\n\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPlayer = {\r\n      name: name,\r\n      guild: guild || null,\r\n      level_land: parseInt(levelLand),\r\n      level_sea: parseInt(levelSea),\r\n      character_class: characterClass,\r\n      server: server,\r\n    };\r\n\r\n    let res;\r\n    addPlayer(server, newPlayer).then(fetchResponse => {\r\n      res = fetchResponse;\r\n      return fetchResponse.json();\r\n    }).then(json => {\r\n      if (!res.ok) {\r\n        alert(json.msg);\r\n      } else {\r\n        props.history.push(`/players/${server}/${name}`);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <ContentWrapper>\r\n      <form onSubmit={onSubmit}>\r\n        <InputGroup>\r\n          <label>{strings.name}</label>\r\n          <TextInput value={name} onChange={e => setName(e.target.value)} />\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <label>{strings.server}</label>\r\n          <Select value={server} onChange={e => setServer(e.target.value)} >\r\n            <option value=\"bergruen\">Bergruen</option>\r\n            <option value=\"luxplena\">LuxPlena</option>\r\n          </Select>\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <label>{strings.class}</label>\r\n          <Select value={characterClass} onChange={e => setCharacterClass(e.target.value)}>\r\n            <option value=\"noble\">Noble</option>\r\n            <option value=\"magic_knight\">Magic Knight</option>\r\n            <option value=\"court_magician\">Court Magician</option>\r\n\r\n            <option value=\"saint\">Saint</option>\r\n            <option value=\"priest\">Priest</option>\r\n            <option value=\"shaman\">Shaman</option>\r\n\r\n            <option value=\"mercenary\">Mercenary</option>\r\n            <option value=\"guardian_swordsman\">Guardian Swordsman</option>\r\n            <option value=\"gladiator\">Gladiator</option>\r\n\r\n            <option value=\"explorer\">Explorer</option>\r\n            <option value=\"sniper\">Sniper</option>\r\n            <option value=\"excavator\">Excavator</option>\r\n          </Select>\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <label>{strings.guild}</label>\r\n          <TextInput value={guild} onChange={e => setGuild(e.target.value)} />\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <label>{strings.levelLand}</label>\r\n          <TextInput value={levelLand} onChange={e => setLevelLand(e.target.value)} />\r\n        </InputGroup>\r\n\r\n        <InputGroup>\r\n          <label>{strings.levelSea}</label>\r\n          <TextInput value={levelSea} onChange={e => setLevelSea(e.target.value)} />\r\n        </InputGroup>\r\n\r\n        <Button\r\n          backgroundColorOnHover=\"#00cc6d\"\r\n          borderColorOnHover=\"green\"\r\n          padding=\"5px 15px\"\r\n          margin=\"0px 10px\"\r\n          type=\"submit\"\r\n        >\r\n          {strings.addButton}\r\n        </Button>\r\n      </form>\r\n    </ContentWrapper>\r\n  )\r\n}\r\n\r\nexport default PlayerAdd;","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport Ranking from \"./components/Ranking/Ranking\";\r\nimport LandingPage from \"./components/LandingPage/LandingPage\";\r\nimport ActiveMatches from \"./components/ActiveMatches/ActiveMatches\";\r\nimport PlayerProfile from \"./components/PlayerProfile/PlayerProfile\";\r\nimport Login from \"./components/Login/Login\";\r\nimport CreateMatches from \"./components/CreateMatches/CreateMatches\";\r\nimport PrivacyPolicy from \"./components/FooterPages/PrivacyPolicy\";\r\nimport LegalNotice from \"./components/FooterPages/LegalNotice\";\r\nimport PlayerEdit from \"./components/PlayerEdit/PlayerEdit\";\r\nimport PlayerAdd from \"./components/PlayerEdit/AddPlayer\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n\r\nbody {\r\n  overflow-y: scroll;\r\n}\r\n\r\n#root {\r\n  display: flex;\r\n  flex-flow: column;\r\n  height: 100% !important;\r\n}\r\n\r\nmain {\r\n  flex-grow: 1;\r\n}\r\n`\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route path=\"/ranking/:server(bergruen|luxplena)\" component={Ranking} />\r\n\r\n          <Route path=\"/active_matches/:server(bergruen|luxplena)\" component={ActiveMatches} />\r\n          \r\n          <Route path=\"/create_matches/:server(bergruen|luxplena)\" component={CreateMatches} />\r\n\r\n          <Route exact path=\"/players/:server(bergruen|luxplena)/:name\" component={PlayerProfile} />\r\n          <Route exact path=\"/players/:server(bergruen|luxplena)/:name/edit\" component={PlayerEdit} />\r\n          <Route exact path=\"/players/add\" component={PlayerAdd} />\r\n\r\n          <Route path=\"/login\" component={Login} />\r\n\r\n          <Route path=\"/privacy_policy\" component={PrivacyPolicy} />\r\n          <Route path=\"/legal_notice\" component={LegalNotice} />\r\n\r\n        </Switch>\r\n      </Layout>\r\n      <GlobalStyle />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}